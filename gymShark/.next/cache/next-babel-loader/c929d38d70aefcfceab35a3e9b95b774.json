{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { graphql, buildSchema } from \"graphql\";\nimport { BlogsData } from \"../../database/blog/database\"; // GraphQL Schema\n\nvar schema = buildSchema(`\n    type Query {\n        blogs: [Blogs]\n    }\n\n    type Blogs {\n      id: Int\n      title: String\n      image: String\n      description: String\n      readUrl: String\n      likes: String\n      comments: String\n      createdAt: String\n      createdBy: String\n    }\n`); // Root resolver\n\nvar root = {\n  blogs: BlogsData\n};\nexport default (async (req, res) => {\n  const query = req.body.query;\n  const response = await graphql(schema, query, root);\n  return res.end(_JSON$stringify(response));\n});","map":{"version":3,"sources":["E:/laragon/www/Prism/otf/pages/api/graphql.js"],"names":["graphql","buildSchema","BlogsData","schema","root","blogs","req","res","query","body","response","end"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,SAArC;AACA,SAASC,SAAT,QAA0B,8BAA1B,C,CAEA;;AACA,IAAIC,MAAM,GAAGF,WAAW,CAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBwB,CAAxB,C,CAkBA;;AACA,IAAIG,IAAI,GAAG;AACTC,EAAAA,KAAK,EAAEH;AADE,CAAX;AAIA,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,KAAK,GAAGF,GAAG,CAACG,IAAJ,CAASD,KAAvB;AACA,QAAME,QAAQ,GAAG,MAAMV,OAAO,CAACG,MAAD,EAASK,KAAT,EAAgBJ,IAAhB,CAA9B;AAEA,SAAOG,GAAG,CAACI,GAAJ,CAAQ,gBAAeD,QAAf,CAAR,CAAP;AACD,CALD","sourcesContent":["import { graphql, buildSchema } from \"graphql\";\r\nimport { BlogsData } from \"../../database/blog/database\"\r\n\r\n// GraphQL Schema\r\nvar schema = buildSchema(`\r\n    type Query {\r\n        blogs: [Blogs]\r\n    }\r\n\r\n    type Blogs {\r\n      id: Int\r\n      title: String\r\n      image: String\r\n      description: String\r\n      readUrl: String\r\n      likes: String\r\n      comments: String\r\n      createdAt: String\r\n      createdBy: String\r\n    }\r\n`);\r\n\r\n// Root resolver\r\nvar root = {\r\n  blogs: BlogsData,\r\n};\r\n\r\nexport default async (req, res) => {\r\n  const query = req.body.query;\r\n  const response = await graphql(schema, query, root);\r\n\r\n  return res.end(JSON.stringify(response));\r\n};"]},"metadata":{},"sourceType":"module"}