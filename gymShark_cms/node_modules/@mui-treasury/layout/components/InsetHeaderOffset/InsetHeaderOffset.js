"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _styles = require("@material-ui/core/styles");

var _contexts = require("../../contexts");

var _StyledProxy = require("../Shared/StyledProxy");

var _InsetHeaderOffsetCompiler = _interopRequireDefault(require("../../compilers/InsetHeaderOffsetCompiler"));

var _utils = require("../../utils");

var _useInsetHeaderMagnet = require("../../hooks/useInsetHeaderMagnet");

var _styles2 = require("../../styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _default = function _default(styled) {
  var styledProxy = (0, _StyledProxy.generateStyledProxyCreator)(styled);
  var Div = styledProxy('div');
  var useTransitionStyles = (0, _styles.makeStyles)(_styles2.transitionStyles);

  var InsetHeaderOffset = function InsetHeaderOffset(_ref) {
    var sidebarId = _ref.sidebarId;
    var theme = (0, _styles.useTheme)();
    var transition = useTransitionStyles();

    var _useLayoutCtx = (0, _contexts.useLayoutCtx)(),
        data = _useLayoutCtx.data;

    var compiler = (0, _InsetHeaderOffsetCompiler["default"])(data.insetSidebar, data.header, data.subheader);
    var styles = (0, _utils.createBreakpointStyles)(compiler.getResultStyle(sidebarId), theme);
    var inlineStyle = (0, _useInsetHeaderMagnet.useInsetHeaderMagnet)(sidebarId);
    return /*#__PURE__*/_react["default"].createElement(Div, {
      className: (0, _clsx["default"])('InsetHeaderOffset', transition.smooth),
      styles: _extends(_extends({}, styles), {}, {
        flexShrink: 0
      }),
      style: inlineStyle
    });
  };

  return InsetHeaderOffset;
};

exports["default"] = _default;