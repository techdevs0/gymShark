"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _styles = require("@material-ui/core/styles");

var _useTheme = _interopRequireDefault(require("@material-ui/core/styles/useTheme"));

var _contexts = require("../../contexts");

var _hooks = require("../../hooks");

var _EdgeHeaderOffset = _interopRequireDefault(require("../EdgeHeaderOffset"));

var _SharedSidebar = require("../Shared/SharedSidebar");

var _StyledProxy = require("../Shared/StyledProxy");

var _utils = require("../../utils");

var _styles2 = require("../../styles");

var _Drawer = _interopRequireDefault(require("@material-ui/core/Drawer/Drawer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var _default = function _default(styled) {
  var styledProxy = (0, _StyledProxy.generateStyledProxyCreator)(styled);
  var StyledDrawer = styledProxy(_Drawer["default"], _SharedSidebar.CLS);
  var EdgeHeaderOffset = (0, _EdgeHeaderOffset["default"])(styled);
  var TemporaryDrawer = (0, _SharedSidebar.createDrawerVariant)('temporary', StyledDrawer);
  var PermanentDrawer = (0, _SharedSidebar.createDrawerVariant)('permanent', StyledDrawer);
  var PersistentDrawer = (0, _SharedSidebar.createDrawerVariant)('persistent', StyledDrawer);
  var useTransitionStyles = (0, _styles.makeStyles)(_styles2.transitionStyles);

  var DrawerSidebar = function DrawerSidebar(_ref) {
    var sidebarId = _ref.sidebarId,
        onClose = _ref.onClose,
        children = _ref.children,
        PaperProps = _ref.PaperProps,
        ModalProps = _ref.ModalProps,
        SlideProps = _ref.SlideProps,
        props = _objectWithoutProperties(_ref, ["sidebarId", "onClose", "children", "PaperProps", "ModalProps", "SlideProps"]);

    (0, _hooks.useSidebarAutoCollapse)(sidebarId);

    var _useWindowCtx = (0, _contexts.useWindowCtx)(),
        iDocument = _useWindowCtx.iDocument;

    var transition = useTransitionStyles();
    var theme = (0, _useTheme["default"])();
    var breakpoints = theme.breakpoints;

    var _useSidebar = (0, _hooks.useSidebar)(sidebarId, 'DrawerSidebar'),
        anchor = _useSidebar.anchor,
        edgeSidebar = _useSidebar.edgeSidebar,
        _useSidebar$styles = _useSidebar.styles,
        permanent = _useSidebar$styles.permanent,
        persistent = _useSidebar$styles.persistent,
        temporary = _useSidebar$styles.temporary,
        state = _useSidebar.state,
        setOpen = _useSidebar.setOpen;

    var wrappedOnClose = function wrappedOnClose() {
      if (typeof onClose === 'function') onClose.apply(void 0, arguments);
      setOpen(sidebarId, false);
    };

    var config = (0, _hooks.useBreakpointConfig)(edgeSidebar.configMapById[sidebarId]);

    var headerAdjustment = /*#__PURE__*/_react["default"].createElement(EdgeHeaderOffset, {
      sidebarId: sidebarId
    });

    return /*#__PURE__*/_react["default"].createElement(_contexts.SidebarProvider, {
      id: sidebarId,
      config: config,
      sidebarState: state
    }, /*#__PURE__*/_react["default"].createElement(_contexts.SidebarConsumer, null, function (_ref2) {
      var entered = _ref2.entered,
          inlineStyle = _ref2.inlineStyle,
          wrapOnEntered = _ref2.wrapOnEntered,
          wrapOnExit = _ref2.wrapOnExit,
          wrapOnMouseEnter = _ref2.wrapOnMouseEnter,
          wrapOnMouseLeave = _ref2.wrapOnMouseLeave;

      var commonProps = _extends(_extends({}, props), {}, {
        PaperProps: _extends(_extends({}, PaperProps), {}, {
          style: _extends(_extends({}, (0, _utils.get)(PaperProps, 'style')), inlineStyle),
          className: (0, _clsx["default"])((entered || (0, _utils.get)(config, 'variant') === 'permanent') && transition.root, (0, _utils.get)(PaperProps, 'className')),
          onMouseEnter: wrapOnMouseEnter(PaperProps),
          onMouseLeave: wrapOnMouseLeave(PaperProps)
        }),
        ModalProps: _extends({
          container: iDocument ? iDocument.body : undefined
        }, ModalProps),
        SlideProps: _extends(_extends({}, SlideProps), {}, {
          onEntered: wrapOnEntered(SlideProps),
          onExit: wrapOnExit(SlideProps)
        }),
        anchor: anchor,
        open: state.open,
        onClose: wrappedOnClose
      });

      return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(TemporaryDrawer, _extends({
        disableScrollLock: true
      }, commonProps, {
        hiddenStyles: (0, _utils.createHiddenStyles)(temporary, [permanent, persistent], breakpoints),
        styles: (0, _utils.createBreakpointStyles)(temporary, theme)
      }), children), /*#__PURE__*/_react["default"].createElement(PersistentDrawer, _extends({}, commonProps, {
        hiddenStyles: (0, _utils.createHiddenStyles)(persistent, [temporary, permanent], breakpoints),
        styles: (0, _utils.createBreakpointStyles)(persistent, theme)
      }), headerAdjustment, children), /*#__PURE__*/_react["default"].createElement(PermanentDrawer, _extends({}, commonProps, {
        hiddenStyles: (0, _utils.createHiddenStyles)(permanent, [temporary, persistent], breakpoints),
        styles: (0, _utils.createBreakpointStyles)(permanent, theme)
      }), headerAdjustment, children));
    }));
  };

  return DrawerSidebar;
};

exports["default"] = _default;