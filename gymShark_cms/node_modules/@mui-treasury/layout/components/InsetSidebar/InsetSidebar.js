"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _styles = require("@material-ui/core/styles");

var _StyledProxy = require("../Shared/StyledProxy");

var _InsetHeaderOffset = _interopRequireDefault(require("../InsetHeaderOffset"));

var _hooks = require("../../hooks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var _default = function _default(styled) {
  var styledProxy = (0, _StyledProxy.generateStyledProxyCreator)(styled);
  var Div = styledProxy('div');
  var InsetHeaderOffset = (0, _InsetHeaderOffset["default"])(styled);
  var useStyles = (0, _styles.makeStyles)(function (_ref) {
    var palette = _ref.palette;
    return {
      root: {
        position: 'relative',
        flexShrink: 0
      },
      paper: {
        backgroundColor: palette.type === 'dark' ? palette.background.paper : palette.grey[100]
      }
    };
  });

  var InsetSidebar = function InsetSidebar(_ref2) {
    var sidebarId = _ref2.sidebarId,
        children = _ref2.children,
        props = _objectWithoutProperties(_ref2, ["sidebarId", "children"]);

    var classes = useStyles(props);

    var _useInsetSidebar = (0, _hooks.useInsetSidebar)(sidebarId),
        rootStyles = _useInsetSidebar.rootStyles,
        bodyStyles = _useInsetSidebar.bodyStyles;

    return /*#__PURE__*/_react["default"].createElement(Div, {
      className: "InsetSidebar-root ".concat(classes.root),
      styles: rootStyles
    }, /*#__PURE__*/_react["default"].createElement(Div, {
      className: "InsetSidebar-paper ".concat(classes.paper),
      styles: bodyStyles
    }, /*#__PURE__*/_react["default"].createElement(InsetHeaderOffset, {
      sidebarId: sidebarId
    }), children));
  };

  return InsetSidebar;
};

exports["default"] = _default;