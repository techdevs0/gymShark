"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.isSomeClipped = void 0;

var _utils = require("../../utils");

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var incrementZIndex = function incrementZIndex(theme, plus) {
  return {
    zIndex: (0, _utils.get)(theme, 'zIndex.drawer', 1200) + plus
  };
};

var isSomeClipped = function isSomeClipped() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      clipped = _ref.clipped;

  if (typeof clipped === 'boolean') {
    return clipped;
  }

  if (_typeof(clipped) === 'object') {
    return Object.values(clipped).some(function (value) {
      return !!value;
    });
  }

  return false;
};

exports.isSomeClipped = isSomeClipped;

var _default = function _default(header) {
  var isAboveSomeSidebars = isSomeClipped(header);
  return {
    id: (0, _utils.get)(header, 'id'),
    getHeaderZIndex: function getHeaderZIndex(theme) {
      return isAboveSomeSidebars ? incrementZIndex(theme, 10 + (header.layer || 0)) : undefined;
    },
    getEdgeSidebarZIndex: function getEdgeSidebarZIndex(sidebarId, theme) {
      return isAboveSomeSidebars && !(0, _utils.isHeaderClipped)(header, sidebarId) ? incrementZIndex(theme, 20) : undefined;
    },
    isObjectClipped: function isObjectClipped(sidebarId) {
      return (0, _utils.isHeaderClipped)(header, sidebarId);
    }
  };
};

exports["default"] = _default;