import { Breakpoint } from '@material-ui/core/styles/createBreakpoints';
import { IHeaderBuilder, IEdgeSidebarBuilder, State, GlobalConfig, LayoutData, EdgeSidebarConfigMapById, SubheaderConfigMapById, HeaderConfigMap } from '../types';
import { IInsetSidebarBuilder, InsetSidebarConfigMapById } from './InsetSidebar/InsetSidebarBuilder';
import { ISubheaderBuilder } from './Subheader/SubheaderBuilder';
interface BuilderCallback<T> {
    (builder: T): void;
}
export interface ILayoutBuilder {
    configureHeader: (callback: BuilderCallback<Pick<IHeaderBuilder, 'create' | 'registerConfig' | 'update'>>) => void;
    configureSubheader: (callback: BuilderCallback<Pick<ISubheaderBuilder, 'create' | 'update' | 'hide'>>) => void;
    configureEdgeSidebar: (callback: BuilderCallback<Pick<IEdgeSidebarBuilder, 'create' | 'update' | 'hide'>>) => void;
    configureInsetSidebar: (callback: BuilderCallback<Pick<IInsetSidebarBuilder, 'create'>>) => void;
    enableAutoCollapse: (sidebarId: string, breakpoint?: Breakpoint) => void;
    getComponentData: () => LayoutData;
    clone: () => {
        edgeSidebar: EdgeSidebarConfigMapById;
    };
    getInitialState: () => State;
    debug: () => void;
    getJSON: () => void;
}
declare type InitialLayout = {
    global?: GlobalConfig;
    header?: HeaderConfigMap;
    subheader?: SubheaderConfigMapById;
    edgeSidebar?: EdgeSidebarConfigMapById;
    insetSidebar?: InsetSidebarConfigMapById;
};
declare const _default: (initialLayout?: InitialLayout) => ILayoutBuilder;
export default _default;
