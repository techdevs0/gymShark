import merge from 'deepmerge';
import { useTheme } from '@material-ui/core/styles';
import { useLayoutCtx } from '../contexts';
import InsetSidebarCompiler from '../compilers/InsetSidebarCompiler';
import { createBreakpointStyles, createHiddenStyles } from '../utils';
export var useInsetSidebar = function useInsetSidebar(id) {
  var _useLayoutCtx = useLayoutCtx(),
      _useLayoutCtx$data = _useLayoutCtx.data,
      insetSidebar = _useLayoutCtx$data.insetSidebar,
      header = _useLayoutCtx$data.header;

  var theme = useTheme();
  var breakpoints = theme.breakpoints;
  var compiler = InsetSidebarCompiler(insetSidebar, header);

  var _compiler$getResultSt = compiler.getResultStyle(id),
      root = _compiler$getResultSt.root,
      body = _compiler$getResultSt.body;

  var variant = compiler.getVariant(id); // value won't change when viewport changes

  var hiddenRootStyles = createHiddenStyles(root, [], breakpoints);
  var hiddenBodyStyles = createHiddenStyles(body, [], breakpoints);
  return {
    variant: variant,
    insetSidebar: insetSidebar,
    rootStyles: merge(createBreakpointStyles(root, theme), hiddenRootStyles),
    bodyStyles: merge(createBreakpointStyles(body, theme), hiddenBodyStyles)
  };
};
export default useInsetSidebar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy91c2VJbnNldFNpZGViYXIudHMiXSwibmFtZXMiOlsibWVyZ2UiLCJ1c2VUaGVtZSIsInVzZUxheW91dEN0eCIsIkluc2V0U2lkZWJhckNvbXBpbGVyIiwiY3JlYXRlQnJlYWtwb2ludFN0eWxlcyIsImNyZWF0ZUhpZGRlblN0eWxlcyIsInVzZUluc2V0U2lkZWJhciIsImlkIiwiZGF0YSIsImluc2V0U2lkZWJhciIsImhlYWRlciIsInRoZW1lIiwiYnJlYWtwb2ludHMiLCJjb21waWxlciIsImdldFJlc3VsdFN0eWxlIiwicm9vdCIsImJvZHkiLCJ2YXJpYW50IiwiZ2V0VmFyaWFudCIsImhpZGRlblJvb3RTdHlsZXMiLCJoaWRkZW5Cb2R5U3R5bGVzIiwicm9vdFN0eWxlcyIsImJvZHlTdHlsZXMiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEtBQVAsTUFBa0IsV0FBbEI7QUFDQSxTQUFnQkMsUUFBaEIsUUFBZ0MsMEJBQWhDO0FBQ0EsU0FBU0MsWUFBVCxRQUE2QixhQUE3QjtBQUNBLE9BQU9DLG9CQUFQLE1BQWlDLG1DQUFqQztBQUNBLFNBQVNDLHNCQUFULEVBQWlDQyxrQkFBakMsUUFBMkQsVUFBM0Q7QUFFQSxPQUFPLElBQU1DLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsRUFBRCxFQUFnQjtBQUFBLHNCQUd6Q0wsWUFBWSxFQUg2QjtBQUFBLHlDQUUzQ00sSUFGMkM7QUFBQSxNQUVuQ0MsWUFGbUMsc0JBRW5DQSxZQUZtQztBQUFBLE1BRXJCQyxNQUZxQixzQkFFckJBLE1BRnFCOztBQUk3QyxNQUFNQyxLQUFLLEdBQUdWLFFBQVEsRUFBdEI7QUFKNkMsTUFLckNXLFdBTHFDLEdBS3JCRCxLQUxxQixDQUtyQ0MsV0FMcUM7QUFNN0MsTUFBTUMsUUFBUSxHQUFHVixvQkFBb0IsQ0FBQ00sWUFBRCxFQUFlQyxNQUFmLENBQXJDOztBQU42Qyw4QkFPdEJHLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QlAsRUFBeEIsQ0FQc0I7QUFBQSxNQU9yQ1EsSUFQcUMseUJBT3JDQSxJQVBxQztBQUFBLE1BTy9CQyxJQVArQix5QkFPL0JBLElBUCtCOztBQVE3QyxNQUFNQyxPQUFPLEdBQUdKLFFBQVEsQ0FBQ0ssVUFBVCxDQUFvQlgsRUFBcEIsQ0FBaEIsQ0FSNkMsQ0FRSjs7QUFDekMsTUFBTVksZ0JBQWdCLEdBQUdkLGtCQUFrQixDQUFDVSxJQUFELEVBQU8sRUFBUCxFQUFXSCxXQUFYLENBQTNDO0FBQ0EsTUFBTVEsZ0JBQWdCLEdBQUdmLGtCQUFrQixDQUFDVyxJQUFELEVBQU8sRUFBUCxFQUFXSixXQUFYLENBQTNDO0FBQ0EsU0FBTztBQUNMSyxJQUFBQSxPQUFPLEVBQVBBLE9BREs7QUFFTFIsSUFBQUEsWUFBWSxFQUFaQSxZQUZLO0FBR0xZLElBQUFBLFVBQVUsRUFBRXJCLEtBQUssQ0FBQ0ksc0JBQXNCLENBQUNXLElBQUQsRUFBT0osS0FBUCxDQUF2QixFQUFzQ1EsZ0JBQXRDLENBSFo7QUFJTEcsSUFBQUEsVUFBVSxFQUFFdEIsS0FBSyxDQUFDSSxzQkFBc0IsQ0FBQ1ksSUFBRCxFQUFPTCxLQUFQLENBQXZCLEVBQXNDUyxnQkFBdEM7QUFKWixHQUFQO0FBTUQsQ0FqQk07QUFtQlAsZUFBZWQsZUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtZXJnZSBmcm9tICdkZWVwbWVyZ2UnO1xuaW1wb3J0IHsgVGhlbWUsIHVzZVRoZW1lIH0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvc3R5bGVzJztcbmltcG9ydCB7IHVzZUxheW91dEN0eCB9IGZyb20gJy4uL2NvbnRleHRzJztcbmltcG9ydCBJbnNldFNpZGViYXJDb21waWxlciBmcm9tICcuLi9jb21waWxlcnMvSW5zZXRTaWRlYmFyQ29tcGlsZXInO1xuaW1wb3J0IHsgY3JlYXRlQnJlYWtwb2ludFN0eWxlcywgY3JlYXRlSGlkZGVuU3R5bGVzIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgY29uc3QgdXNlSW5zZXRTaWRlYmFyID0gKGlkOiBzdHJpbmcpID0+IHtcbiAgY29uc3Qge1xuICAgIGRhdGE6IHsgaW5zZXRTaWRlYmFyLCBoZWFkZXIgfSxcbiAgfSA9IHVzZUxheW91dEN0eCgpO1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lPFRoZW1lPigpO1xuICBjb25zdCB7IGJyZWFrcG9pbnRzIH0gPSB0aGVtZTtcbiAgY29uc3QgY29tcGlsZXIgPSBJbnNldFNpZGViYXJDb21waWxlcihpbnNldFNpZGViYXIsIGhlYWRlcik7XG4gIGNvbnN0IHsgcm9vdCwgYm9keSB9ID0gY29tcGlsZXIuZ2V0UmVzdWx0U3R5bGUoaWQpO1xuICBjb25zdCB2YXJpYW50ID0gY29tcGlsZXIuZ2V0VmFyaWFudChpZCk7IC8vIHZhbHVlIHdvbid0IGNoYW5nZSB3aGVuIHZpZXdwb3J0IGNoYW5nZXNcbiAgY29uc3QgaGlkZGVuUm9vdFN0eWxlcyA9IGNyZWF0ZUhpZGRlblN0eWxlcyhyb290LCBbXSwgYnJlYWtwb2ludHMpO1xuICBjb25zdCBoaWRkZW5Cb2R5U3R5bGVzID0gY3JlYXRlSGlkZGVuU3R5bGVzKGJvZHksIFtdLCBicmVha3BvaW50cyk7XG4gIHJldHVybiB7XG4gICAgdmFyaWFudCxcbiAgICBpbnNldFNpZGViYXIsXG4gICAgcm9vdFN0eWxlczogbWVyZ2UoY3JlYXRlQnJlYWtwb2ludFN0eWxlcyhyb290LCB0aGVtZSksIGhpZGRlblJvb3RTdHlsZXMpLFxuICAgIGJvZHlTdHlsZXM6IG1lcmdlKGNyZWF0ZUJyZWFrcG9pbnRTdHlsZXMoYm9keSwgdGhlbWUpLCBoaWRkZW5Cb2R5U3R5bGVzKSxcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUluc2V0U2lkZWJhcjtcbiJdfQ==