function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { useTheme } from "@material-ui/core";
import { useSidebarCtx } from "../contexts";
import useSidebar from "./useSidebar";
import { createDisplayNone } from '../utils';
import EdgeCollapseCompiler from '../compilers/EdgeCollapseCompiler';
export var useSidebarCollapse = function useSidebarCollapse(sidebarId, consumer) {
  var _useTheme = useTheme(),
      breakpoints = _useTheme.breakpoints;

  var _useSidebarCtx = useSidebarCtx(),
      _useSidebarCtx$id = _useSidebarCtx.id,
      id = _useSidebarCtx$id === void 0 ? sidebarId : _useSidebarCtx$id;

  var _useSidebar = useSidebar(id, consumer),
      edgeSidebar = _useSidebar.edgeSidebar,
      props = _objectWithoutProperties(_useSidebar, ["edgeSidebar"]);

  var hiddenStyles = createDisplayNone(EdgeCollapseCompiler(edgeSidebar).getHiddenBreakpoints(id), breakpoints);
  return _extends(_extends({
    id: id,
    edgeSidebar: edgeSidebar
  }, props), {}, {
    hiddenStyles: hiddenStyles
  });
};
export default useSidebarCollapse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy91c2VTaWRlYmFyQ29sbGFwc2UudHMiXSwibmFtZXMiOlsidXNlVGhlbWUiLCJ1c2VTaWRlYmFyQ3R4IiwidXNlU2lkZWJhciIsImNyZWF0ZURpc3BsYXlOb25lIiwiRWRnZUNvbGxhcHNlQ29tcGlsZXIiLCJ1c2VTaWRlYmFyQ29sbGFwc2UiLCJzaWRlYmFySWQiLCJjb25zdW1lciIsImJyZWFrcG9pbnRzIiwiaWQiLCJlZGdlU2lkZWJhciIsInByb3BzIiwiaGlkZGVuU3R5bGVzIiwiZ2V0SGlkZGVuQnJlYWtwb2ludHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLFNBQWdCQSxRQUFoQixRQUFnQyxtQkFBaEM7QUFDQSxTQUFTQyxhQUFULFFBQThCLGFBQTlCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixjQUF2QjtBQUNBLFNBQVNDLGlCQUFULFFBQWtDLFVBQWxDO0FBQ0EsT0FBT0Msb0JBQVAsTUFBaUMsbUNBQWpDO0FBRUEsT0FBTyxJQUFNQyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLENBQUNDLFNBQUQsRUFBcUJDLFFBQXJCLEVBQTJDO0FBQUEsa0JBQ25EUCxRQUFRLEVBRDJDO0FBQUEsTUFDbkVRLFdBRG1FLGFBQ25FQSxXQURtRTs7QUFBQSx1QkFFaERQLGFBQWEsRUFGbUM7QUFBQSx5Q0FFbkVRLEVBRm1FO0FBQUEsTUFFbkVBLEVBRm1FLGtDQUU5REgsU0FGOEQ7O0FBQUEsb0JBR3pDSixVQUFVLENBQUNPLEVBQUQsRUFBS0YsUUFBTCxDQUgrQjtBQUFBLE1BR25FRyxXQUhtRSxlQUduRUEsV0FIbUU7QUFBQSxNQUduREMsS0FIbUQ7O0FBSTNFLE1BQU1DLFlBQVksR0FBR1QsaUJBQWlCLENBQ3BDQyxvQkFBb0IsQ0FBQ00sV0FBRCxDQUFwQixDQUFrQ0csb0JBQWxDLENBQXVESixFQUF2RCxDQURvQyxFQUVwQ0QsV0FGb0MsQ0FBdEM7QUFJQTtBQUNFQyxJQUFBQSxFQUFFLEVBQUZBLEVBREY7QUFFRUMsSUFBQUEsV0FBVyxFQUFYQTtBQUZGLEtBR0tDLEtBSEw7QUFJRUMsSUFBQUEsWUFBWSxFQUFaQTtBQUpGO0FBTUQsQ0FkTTtBQWdCUCxlQUFlUCxrQkFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRoZW1lLCB1c2VUaGVtZSB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZVwiXG5pbXBvcnQgeyB1c2VTaWRlYmFyQ3R4IH0gZnJvbSBcIi4uL2NvbnRleHRzXCJcbmltcG9ydCB1c2VTaWRlYmFyIGZyb20gXCIuL3VzZVNpZGViYXJcIlxuaW1wb3J0IHsgY3JlYXRlRGlzcGxheU5vbmUgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgRWRnZUNvbGxhcHNlQ29tcGlsZXIgZnJvbSAnLi4vY29tcGlsZXJzL0VkZ2VDb2xsYXBzZUNvbXBpbGVyJztcblxuZXhwb3J0IGNvbnN0IHVzZVNpZGViYXJDb2xsYXBzZSA9IChzaWRlYmFySWQ/OiBzdHJpbmcsIGNvbnN1bWVyPzogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IHsgYnJlYWtwb2ludHMgfSA9IHVzZVRoZW1lPFRoZW1lPigpXG4gIGNvbnN0IHsgaWQgPSBzaWRlYmFySWQgfSA9IHVzZVNpZGViYXJDdHgoKVxuICBjb25zdCB7IGVkZ2VTaWRlYmFyLCAuLi5wcm9wcyB9ID0gdXNlU2lkZWJhcihpZCwgY29uc3VtZXIpXG4gIGNvbnN0IGhpZGRlblN0eWxlcyA9IGNyZWF0ZURpc3BsYXlOb25lKFxuICAgIEVkZ2VDb2xsYXBzZUNvbXBpbGVyKGVkZ2VTaWRlYmFyKS5nZXRIaWRkZW5CcmVha3BvaW50cyhpZCksXG4gICAgYnJlYWtwb2ludHNcbiAgKTtcbiAgcmV0dXJuIHtcbiAgICBpZCxcbiAgICBlZGdlU2lkZWJhcixcbiAgICAuLi5wcm9wcyxcbiAgICBoaWRkZW5TdHlsZXMsXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgdXNlU2lkZWJhckNvbGxhcHNlXG4iXX0=