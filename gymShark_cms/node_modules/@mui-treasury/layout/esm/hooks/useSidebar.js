import { useTheme } from '@material-ui/core/styles';
import EdgeSidebarCompiler from '../compilers/EdgeSidebarCompiler';
import { useLayoutCtx } from '../contexts';
import { getSidebarAnchor, createDisplayNone } from '../utils';
export var useSidebar = function useSidebar(id, consumer) {
  if (!id) {
    throw new Error("You must specify a sidebar id to <".concat(consumer, " />"));
  }

  var _useTheme = useTheme(),
      breakpoints = _useTheme.breakpoints;

  var _useLayoutCtx = useLayoutCtx(),
      state = _useLayoutCtx.state,
      data = _useLayoutCtx.data,
      setOpen = _useLayoutCtx.setOpen,
      setCollapsed = _useLayoutCtx.setCollapsed;

  var sidebarConfigMap = data.edgeSidebar.configMapById[id];
  var anchor = getSidebarAnchor(sidebarConfigMap);
  var styles = EdgeSidebarCompiler(state, data.edgeSidebar, data.header).getResultStyle(id);
  return {
    anchor: anchor,
    sidebarConfigMap: sidebarConfigMap,
    state: state.sidebar[id],
    edgeSidebar: data.edgeSidebar,
    hiddenStyles: createDisplayNone(data.edgeSidebar.hiddenById[id], breakpoints),
    styles: styles,
    setOpen: setOpen,
    setCollapsed: setCollapsed
  };
};
export default useSidebar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy91c2VTaWRlYmFyLnRzIl0sIm5hbWVzIjpbInVzZVRoZW1lIiwiRWRnZVNpZGViYXJDb21waWxlciIsInVzZUxheW91dEN0eCIsImdldFNpZGViYXJBbmNob3IiLCJjcmVhdGVEaXNwbGF5Tm9uZSIsInVzZVNpZGViYXIiLCJpZCIsImNvbnN1bWVyIiwiRXJyb3IiLCJicmVha3BvaW50cyIsInN0YXRlIiwiZGF0YSIsInNldE9wZW4iLCJzZXRDb2xsYXBzZWQiLCJzaWRlYmFyQ29uZmlnTWFwIiwiZWRnZVNpZGViYXIiLCJjb25maWdNYXBCeUlkIiwiYW5jaG9yIiwic3R5bGVzIiwiaGVhZGVyIiwiZ2V0UmVzdWx0U3R5bGUiLCJzaWRlYmFyIiwiaGlkZGVuU3R5bGVzIiwiaGlkZGVuQnlJZCJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsUUFBVCxRQUF5QiwwQkFBekI7QUFDQSxPQUFPQyxtQkFBUCxNQUFnQyxrQ0FBaEM7QUFDQSxTQUFTQyxZQUFULFFBQTZCLGFBQTdCO0FBQ0EsU0FBU0MsZ0JBQVQsRUFBMkJDLGlCQUEzQixRQUFvRCxVQUFwRDtBQUVBLE9BQU8sSUFBTUMsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQ0MsRUFBRCxFQUFhQyxRQUFiLEVBQW1DO0FBQzNELE1BQUksQ0FBQ0QsRUFBTCxFQUFTO0FBQ1AsVUFBTSxJQUFJRSxLQUFKLDZDQUErQ0QsUUFBL0MsU0FBTjtBQUNEOztBQUgwRCxrQkFJbkNQLFFBQVEsRUFKMkI7QUFBQSxNQUluRFMsV0FKbUQsYUFJbkRBLFdBSm1EOztBQUFBLHNCQUtaUCxZQUFZLEVBTEE7QUFBQSxNQUtuRFEsS0FMbUQsaUJBS25EQSxLQUxtRDtBQUFBLE1BSzVDQyxJQUw0QyxpQkFLNUNBLElBTDRDO0FBQUEsTUFLdENDLE9BTHNDLGlCQUt0Q0EsT0FMc0M7QUFBQSxNQUs3QkMsWUFMNkIsaUJBSzdCQSxZQUw2Qjs7QUFNM0QsTUFBTUMsZ0JBQWdCLEdBQUdILElBQUksQ0FBQ0ksV0FBTCxDQUFpQkMsYUFBakIsQ0FBK0JWLEVBQS9CLENBQXpCO0FBQ0EsTUFBTVcsTUFBTSxHQUFHZCxnQkFBZ0IsQ0FBQ1csZ0JBQUQsQ0FBL0I7QUFDQSxNQUFNSSxNQUFNLEdBQUdqQixtQkFBbUIsQ0FDaENTLEtBRGdDLEVBRWhDQyxJQUFJLENBQUNJLFdBRjJCLEVBR2hDSixJQUFJLENBQUNRLE1BSDJCLENBQW5CLENBSWJDLGNBSmEsQ0FJRWQsRUFKRixDQUFmO0FBS0EsU0FBTztBQUNMVyxJQUFBQSxNQUFNLEVBQU5BLE1BREs7QUFFTEgsSUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFGSztBQUdMSixJQUFBQSxLQUFLLEVBQUVBLEtBQUssQ0FBQ1csT0FBTixDQUFjZixFQUFkLENBSEY7QUFJTFMsSUFBQUEsV0FBVyxFQUFFSixJQUFJLENBQUNJLFdBSmI7QUFLTE8sSUFBQUEsWUFBWSxFQUFFbEIsaUJBQWlCLENBQzdCTyxJQUFJLENBQUNJLFdBQUwsQ0FBaUJRLFVBQWpCLENBQTRCakIsRUFBNUIsQ0FENkIsRUFFN0JHLFdBRjZCLENBTDFCO0FBU0xTLElBQUFBLE1BQU0sRUFBTkEsTUFUSztBQVVMTixJQUFBQSxPQUFPLEVBQVBBLE9BVks7QUFXTEMsSUFBQUEsWUFBWSxFQUFaQTtBQVhLLEdBQVA7QUFhRCxDQTFCTTtBQTRCUCxlQUFlUixVQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXMnO1xuaW1wb3J0IEVkZ2VTaWRlYmFyQ29tcGlsZXIgZnJvbSAnLi4vY29tcGlsZXJzL0VkZ2VTaWRlYmFyQ29tcGlsZXInO1xuaW1wb3J0IHsgdXNlTGF5b3V0Q3R4IH0gZnJvbSAnLi4vY29udGV4dHMnO1xuaW1wb3J0IHsgZ2V0U2lkZWJhckFuY2hvciwgY3JlYXRlRGlzcGxheU5vbmUgfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBjb25zdCB1c2VTaWRlYmFyID0gKGlkOiBzdHJpbmcsIGNvbnN1bWVyPzogc3RyaW5nKSA9PiB7XG4gIGlmICghaWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFlvdSBtdXN0IHNwZWNpZnkgYSBzaWRlYmFyIGlkIHRvIDwke2NvbnN1bWVyfSAvPmApO1xuICB9XG4gIGNvbnN0IHsgYnJlYWtwb2ludHMgfSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IHsgc3RhdGUsIGRhdGEsIHNldE9wZW4sIHNldENvbGxhcHNlZCB9ID0gdXNlTGF5b3V0Q3R4KCk7XG4gIGNvbnN0IHNpZGViYXJDb25maWdNYXAgPSBkYXRhLmVkZ2VTaWRlYmFyLmNvbmZpZ01hcEJ5SWRbaWRdO1xuICBjb25zdCBhbmNob3IgPSBnZXRTaWRlYmFyQW5jaG9yKHNpZGViYXJDb25maWdNYXApO1xuICBjb25zdCBzdHlsZXMgPSBFZGdlU2lkZWJhckNvbXBpbGVyKFxuICAgIHN0YXRlLFxuICAgIGRhdGEuZWRnZVNpZGViYXIsXG4gICAgZGF0YS5oZWFkZXJcbiAgKS5nZXRSZXN1bHRTdHlsZShpZCk7XG4gIHJldHVybiB7XG4gICAgYW5jaG9yLFxuICAgIHNpZGViYXJDb25maWdNYXAsXG4gICAgc3RhdGU6IHN0YXRlLnNpZGViYXJbaWRdLFxuICAgIGVkZ2VTaWRlYmFyOiBkYXRhLmVkZ2VTaWRlYmFyLFxuICAgIGhpZGRlblN0eWxlczogY3JlYXRlRGlzcGxheU5vbmUoXG4gICAgICBkYXRhLmVkZ2VTaWRlYmFyLmhpZGRlbkJ5SWRbaWRdLFxuICAgICAgYnJlYWtwb2ludHNcbiAgICApLFxuICAgIHN0eWxlcyxcbiAgICBzZXRPcGVuLFxuICAgIHNldENvbGxhcHNlZCxcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVNpZGViYXI7XG4iXX0=