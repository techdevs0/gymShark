function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    overflow: auto;\n    flex-grow: 1;\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import Container from '@material-ui/core/Container';
import { useFullscreenCtx } from '../../contexts/FullscreenContext';
export default (function (styled) {
  var Div = styled('div')(_templateObject());
  var useContainerStyles = makeStyles({
    root: {
      display: 'flex',
      flexFlow: 'row nowrap',
      flexGrow: 1
    }
  });

  var InsetContainer = function InsetContainer(_ref) {
    var children = _ref.children,
        leftSidebar = _ref.leftSidebar,
        rightSidebar = _ref.rightSidebar,
        WrapperProps = _ref.WrapperProps,
        props = _objectWithoutProperties(_ref, ["children", "leftSidebar", "rightSidebar", "WrapperProps"]);

    var isFullscreen = useFullscreenCtx();
    var classes = useContainerStyles(props);
    return /*#__PURE__*/React.createElement(Container, _extends({}, props, {
      classes: classes
    }), leftSidebar, isFullscreen ? /*#__PURE__*/React.createElement(Div, WrapperProps, children) : children, rightSidebar);
  };

  return InsetContainer;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0luc2V0Q29udGFpbmVyL0luc2V0Q29udGFpbmVyLnRzeCJdLCJuYW1lcyI6WyJSZWFjdCIsIm1ha2VTdHlsZXMiLCJDb250YWluZXIiLCJ1c2VGdWxsc2NyZWVuQ3R4Iiwic3R5bGVkIiwiRGl2IiwidXNlQ29udGFpbmVyU3R5bGVzIiwicm9vdCIsImRpc3BsYXkiLCJmbGV4RmxvdyIsImZsZXhHcm93IiwiSW5zZXRDb250YWluZXIiLCJjaGlsZHJlbiIsImxlZnRTaWRlYmFyIiwicmlnaHRTaWRlYmFyIiwiV3JhcHBlclByb3BzIiwicHJvcHMiLCJpc0Z1bGxzY3JlZW4iLCJjbGFzc2VzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLE1BQWlDLE9BQWpDO0FBQ0EsU0FBU0MsVUFBVCxRQUEyQiwwQkFBM0I7QUFDQSxPQUFPQyxTQUFQLE1BQTBDLDZCQUExQztBQUNBLFNBQVNDLGdCQUFULFFBQWlDLGtDQUFqQztBQVFBLGdCQUFlLFVBQUNDLE1BQUQsRUFBaUI7QUFDOUIsTUFBTUMsR0FBRyxHQUFHRCxNQUFNLENBQUMsS0FBRCxDQUFULG1CQUFUO0FBS0EsTUFBTUUsa0JBQWtCLEdBQUdMLFVBQVUsQ0FBQztBQUNwQ00sSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLE9BQU8sRUFBRSxNQURMO0FBRUpDLE1BQUFBLFFBQVEsRUFBRSxZQUZOO0FBR0pDLE1BQUFBLFFBQVEsRUFBRTtBQUhOO0FBRDhCLEdBQUQsQ0FBckM7O0FBUUEsTUFBTUMsY0FBNkMsR0FBRyxTQUFoREEsY0FBZ0QsT0FNaEQ7QUFBQSxRQUxKQyxRQUtJLFFBTEpBLFFBS0k7QUFBQSxRQUpKQyxXQUlJLFFBSkpBLFdBSUk7QUFBQSxRQUhKQyxZQUdJLFFBSEpBLFlBR0k7QUFBQSxRQUZKQyxZQUVJLFFBRkpBLFlBRUk7QUFBQSxRQUREQyxLQUNDOztBQUNKLFFBQU1DLFlBQVksR0FBR2QsZ0JBQWdCLEVBQXJDO0FBQ0EsUUFBTWUsT0FBTyxHQUFHWixrQkFBa0IsQ0FBQ1UsS0FBRCxDQUFsQztBQUNBLHdCQUNFLG9CQUFDLFNBQUQsZUFBZUEsS0FBZjtBQUFzQixNQUFBLE9BQU8sRUFBRUU7QUFBL0IsUUFDR0wsV0FESCxFQUVHSSxZQUFZLGdCQUNYLG9CQUFDLEdBQUQsRUFBU0YsWUFBVCxFQUF3QkgsUUFBeEIsQ0FEVyxHQUdYQSxRQUxKLEVBT0dFLFlBUEgsQ0FERjtBQVdELEdBcEJEOztBQXNCQSxTQUFPSCxjQUFQO0FBQ0QsQ0FyQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgSFRNTFByb3BzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL3N0eWxlcyc7XG5pbXBvcnQgQ29udGFpbmVyLCB7IENvbnRhaW5lclByb3BzIH0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvQ29udGFpbmVyJztcbmltcG9ydCB7IHVzZUZ1bGxzY3JlZW5DdHggfSBmcm9tICcuLi8uLi9jb250ZXh0cy9GdWxsc2NyZWVuQ29udGV4dCc7XG5cbmV4cG9ydCB0eXBlIEluc2V0Q29udGFpbmVyUHJvcHMgPSB7XG4gIGxlZnRTaWRlYmFyPzogUmVhY3QuUmVhY3ROb2RlO1xuICByaWdodFNpZGViYXI/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIFdyYXBwZXJQcm9wcz86IEhUTUxQcm9wczxIVE1MRGl2RWxlbWVudD47XG59ICYgQ29udGFpbmVyUHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IChzdHlsZWQ6IGFueSkgPT4ge1xuICBjb25zdCBEaXYgPSBzdHlsZWQoJ2RpdicpYFxuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgYDtcblxuICBjb25zdCB1c2VDb250YWluZXJTdHlsZXMgPSBtYWtlU3R5bGVzKHtcbiAgICByb290OiB7XG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBmbGV4RmxvdzogJ3JvdyBub3dyYXAnLFxuICAgICAgZmxleEdyb3c6IDEsXG4gICAgfSxcbiAgfSk7XG5cbiAgY29uc3QgSW5zZXRDb250YWluZXI6IFJlYWN0LkZDPEluc2V0Q29udGFpbmVyUHJvcHM+ID0gKHtcbiAgICBjaGlsZHJlbixcbiAgICBsZWZ0U2lkZWJhcixcbiAgICByaWdodFNpZGViYXIsXG4gICAgV3JhcHBlclByb3BzLFxuICAgIC4uLnByb3BzXG4gIH0pID0+IHtcbiAgICBjb25zdCBpc0Z1bGxzY3JlZW4gPSB1c2VGdWxsc2NyZWVuQ3R4KCk7XG4gICAgY29uc3QgY2xhc3NlcyA9IHVzZUNvbnRhaW5lclN0eWxlcyhwcm9wcyk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxDb250YWluZXIgey4uLnByb3BzfSBjbGFzc2VzPXtjbGFzc2VzfT5cbiAgICAgICAge2xlZnRTaWRlYmFyfVxuICAgICAgICB7aXNGdWxsc2NyZWVuID8gKFxuICAgICAgICAgIDxEaXYgey4uLldyYXBwZXJQcm9wc30+e2NoaWxkcmVufTwvRGl2PlxuICAgICAgICApIDogKFxuICAgICAgICAgIGNoaWxkcmVuXG4gICAgICAgICl9XG4gICAgICAgIHtyaWdodFNpZGViYXJ9XG4gICAgICA8L0NvbnRhaW5lcj5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBJbnNldENvbnRhaW5lcjtcbn07XG4iXX0=