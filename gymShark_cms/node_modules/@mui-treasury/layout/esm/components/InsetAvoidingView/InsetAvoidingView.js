function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import useTheme from "@material-ui/core/styles/useTheme";
import { useLayoutCtx } from "../../contexts";
import InsetAvoidingViewCompiler from "../../compilers/InsetAvoidingViewCompiler";
import { generateStyledProxyCreator } from '../Shared/StyledProxy';
export default (function (styled) {
  var styledProxy = generateStyledProxyCreator(styled);
  var Div = styledProxy('div');

  var InsetAvoidingView = function InsetAvoidingView(props) {
    var _useLayoutCtx = useLayoutCtx(),
        data = _useLayoutCtx.data;

    var _useTheme = useTheme(),
        breakpoints = _useTheme.breakpoints;

    var styles = InsetAvoidingViewCompiler(data.insetSidebar).getMediaQueryStyle(breakpoints);
    return /*#__PURE__*/React.createElement(Div, _extends({}, props, {
      styles: _extends({
        transition: "all 225ms"
      }, styles)
    }));
  };

  return InsetAvoidingView;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0luc2V0QXZvaWRpbmdWaWV3L0luc2V0QXZvaWRpbmdWaWV3LnRzeCJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVRoZW1lIiwidXNlTGF5b3V0Q3R4IiwiSW5zZXRBdm9pZGluZ1ZpZXdDb21waWxlciIsImdlbmVyYXRlU3R5bGVkUHJveHlDcmVhdG9yIiwic3R5bGVkIiwic3R5bGVkUHJveHkiLCJEaXYiLCJJbnNldEF2b2lkaW5nVmlldyIsInByb3BzIiwiZGF0YSIsImJyZWFrcG9pbnRzIiwic3R5bGVzIiwiaW5zZXRTaWRlYmFyIiwiZ2V0TWVkaWFRdWVyeVN0eWxlIiwidHJhbnNpdGlvbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsT0FBT0MsUUFBUCxNQUFxQixtQ0FBckI7QUFDQSxTQUFTQyxZQUFULFFBQTZCLGdCQUE3QjtBQUNBLE9BQU9DLHlCQUFQLE1BQXNDLDJDQUF0QztBQUNBLFNBQVNDLDBCQUFULFFBQTJDLHVCQUEzQztBQUVBLGdCQUFlLFVBQUNDLE1BQUQsRUFBaUI7QUFDOUIsTUFBTUMsV0FBVyxHQUFHRiwwQkFBMEIsQ0FBQ0MsTUFBRCxDQUE5QztBQUNBLE1BQU1FLEdBQUcsR0FBR0QsV0FBVyxDQUFDLEtBQUQsQ0FBdkI7O0FBRUEsTUFBTUUsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUN4QkMsS0FEd0IsRUFFckI7QUFBQSx3QkFDY1AsWUFBWSxFQUQxQjtBQUFBLFFBQ0tRLElBREwsaUJBQ0tBLElBREw7O0FBQUEsb0JBRXFCVCxRQUFRLEVBRjdCO0FBQUEsUUFFS1UsV0FGTCxhQUVLQSxXQUZMOztBQUdILFFBQU1DLE1BQU0sR0FBR1QseUJBQXlCLENBQ3RDTyxJQUFJLENBQUNHLFlBRGlDLENBQXpCLENBRWJDLGtCQUZhLENBRU1ILFdBRk4sQ0FBZjtBQUdBLHdCQUNFLG9CQUFDLEdBQUQsZUFDTUYsS0FETjtBQUVFLE1BQUEsTUFBTTtBQUNKTSxRQUFBQSxVQUFVLEVBQUU7QUFEUixTQUVESCxNQUZDO0FBRlIsT0FERjtBQVNELEdBakJEOztBQWtCQSxTQUFPSixpQkFBUDtBQUNELENBdkJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgdXNlVGhlbWUgZnJvbSBcIkBtYXRlcmlhbC11aS9jb3JlL3N0eWxlcy91c2VUaGVtZVwiXG5pbXBvcnQgeyB1c2VMYXlvdXRDdHggfSBmcm9tIFwiLi4vLi4vY29udGV4dHNcIlxuaW1wb3J0IEluc2V0QXZvaWRpbmdWaWV3Q29tcGlsZXIgZnJvbSBcIi4uLy4uL2NvbXBpbGVycy9JbnNldEF2b2lkaW5nVmlld0NvbXBpbGVyXCJcbmltcG9ydCB7IGdlbmVyYXRlU3R5bGVkUHJveHlDcmVhdG9yIH0gZnJvbSAnLi4vU2hhcmVkL1N0eWxlZFByb3h5JztcblxuZXhwb3J0IGRlZmF1bHQgKHN0eWxlZDogYW55KSA9PiB7XG4gIGNvbnN0IHN0eWxlZFByb3h5ID0gZ2VuZXJhdGVTdHlsZWRQcm94eUNyZWF0b3Ioc3R5bGVkKTtcbiAgY29uc3QgRGl2ID0gc3R5bGVkUHJveHkoJ2RpdicpO1xuXG4gIGNvbnN0IEluc2V0QXZvaWRpbmdWaWV3ID0gKFxuICAgIHByb3BzOiBSZWFjdC5Qcm9wc1dpdGhDaGlsZHJlbjx7IGNsYXNzTmFtZT86IHN0cmluZyB9PlxuICApID0+IHtcbiAgICBjb25zdCB7IGRhdGEgfSA9IHVzZUxheW91dEN0eCgpXG4gICAgY29uc3QgeyBicmVha3BvaW50cyB9ID0gdXNlVGhlbWUoKVxuICAgIGNvbnN0IHN0eWxlcyA9IEluc2V0QXZvaWRpbmdWaWV3Q29tcGlsZXIoXG4gICAgICBkYXRhLmluc2V0U2lkZWJhclxuICAgICkuZ2V0TWVkaWFRdWVyeVN0eWxlKGJyZWFrcG9pbnRzKVxuICAgIHJldHVybiAoXG4gICAgICA8RGl2XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgc3R5bGVzPXt7XG4gICAgICAgICAgdHJhbnNpdGlvbjogXCJhbGwgMjI1bXNcIixcbiAgICAgICAgICAuLi5zdHlsZXMsXG4gICAgICAgIH19XG4gICAgICAvPlxuICAgIClcbiAgfVxuICByZXR1cm4gSW5zZXRBdm9pZGluZ1ZpZXdcbn1cbiJdfQ==