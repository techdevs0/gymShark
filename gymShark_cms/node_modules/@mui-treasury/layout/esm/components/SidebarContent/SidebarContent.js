function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    min-height: 0;\n    flex-grow: 1;\n    overflow: auto;\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import cx from 'clsx';
export default (function (styled) {
  var Div = styled('div')(_templateObject());

  var SidebarContent = function SidebarContent(_ref) {
    var className = _ref.className,
        props = _objectWithoutProperties(_ref, ["className"]);

    return /*#__PURE__*/React.createElement(Div, _extends({
      className: cx('SidebarContent', className)
    }, props));
  };

  return SidebarContent;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1NpZGViYXJDb250ZW50L1NpZGViYXJDb250ZW50LnRzeCJdLCJuYW1lcyI6WyJSZWFjdCIsImN4Iiwic3R5bGVkIiwiRGl2IiwiU2lkZWJhckNvbnRlbnQiLCJjbGFzc05hbWUiLCJwcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxNQUFpQyxPQUFqQztBQUNBLE9BQU9DLEVBQVAsTUFBZSxNQUFmO0FBRUEsZ0JBQWUsVUFBQ0MsTUFBRCxFQUFpQjtBQUM5QixNQUFNQyxHQUFHLEdBQUdELE1BQU0sQ0FBQyxLQUFELENBQVQsbUJBQVQ7O0FBTUEsTUFBTUUsY0FBbUQsR0FBRyxTQUF0REEsY0FBc0QsT0FHdEQ7QUFBQSxRQUZKQyxTQUVJLFFBRkpBLFNBRUk7QUFBQSxRQUREQyxLQUNDOztBQUNKLHdCQUNFLG9CQUFDLEdBQUQ7QUFDRSxNQUFBLFNBQVMsRUFBRUwsRUFBRSxDQUFDLGdCQUFELEVBQW1CSSxTQUFuQjtBQURmLE9BRU1DLEtBRk4sRUFERjtBQU1ELEdBVkQ7O0FBWUEsU0FBT0YsY0FBUDtBQUNELENBcEJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEhUTUxQcm9wcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjeCBmcm9tICdjbHN4JztcblxuZXhwb3J0IGRlZmF1bHQgKHN0eWxlZDogYW55KSA9PiB7XG4gIGNvbnN0IERpdiA9IHN0eWxlZCgnZGl2JylgXG4gICAgbWluLWhlaWdodDogMDtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gIGA7XG5cbiAgY29uc3QgU2lkZWJhckNvbnRlbnQ6IFJlYWN0LkZDPEhUTUxQcm9wczxIVE1MRGl2RWxlbWVudD4+ID0gKHtcbiAgICBjbGFzc05hbWUsXG4gICAgLi4ucHJvcHNcbiAgfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8RGl2XG4gICAgICAgIGNsYXNzTmFtZT17Y3goJ1NpZGViYXJDb250ZW50JywgY2xhc3NOYW1lKX1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBTaWRlYmFyQ29udGVudDtcbn07XG4iXX0=