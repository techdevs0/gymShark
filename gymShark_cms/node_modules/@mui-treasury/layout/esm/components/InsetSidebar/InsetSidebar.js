function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { generateStyledProxyCreator } from '../Shared/StyledProxy';
import getInsetHeaderOffset from '../InsetHeaderOffset';
import { useInsetSidebar } from '../../hooks';
export default (function (styled) {
  var styledProxy = generateStyledProxyCreator(styled);
  var Div = styledProxy('div');
  var InsetHeaderOffset = getInsetHeaderOffset(styled);
  var useStyles = makeStyles(function (_ref) {
    var palette = _ref.palette;
    return {
      root: {
        position: 'relative',
        flexShrink: 0
      },
      paper: {
        backgroundColor: palette.type === 'dark' ? palette.background.paper : palette.grey[100]
      }
    };
  });

  var InsetSidebar = function InsetSidebar(_ref2) {
    var sidebarId = _ref2.sidebarId,
        children = _ref2.children,
        props = _objectWithoutProperties(_ref2, ["sidebarId", "children"]);

    var classes = useStyles(props);

    var _useInsetSidebar = useInsetSidebar(sidebarId),
        rootStyles = _useInsetSidebar.rootStyles,
        bodyStyles = _useInsetSidebar.bodyStyles;

    return /*#__PURE__*/React.createElement(Div, {
      className: "InsetSidebar-root ".concat(classes.root),
      styles: rootStyles
    }, /*#__PURE__*/React.createElement(Div, {
      className: "InsetSidebar-paper ".concat(classes.paper),
      styles: bodyStyles
    }, /*#__PURE__*/React.createElement(InsetHeaderOffset, {
      sidebarId: sidebarId
    }), children));
  };

  return InsetSidebar;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0luc2V0U2lkZWJhci9JbnNldFNpZGViYXIudHN4Il0sIm5hbWVzIjpbIlJlYWN0IiwibWFrZVN0eWxlcyIsImdlbmVyYXRlU3R5bGVkUHJveHlDcmVhdG9yIiwiZ2V0SW5zZXRIZWFkZXJPZmZzZXQiLCJ1c2VJbnNldFNpZGViYXIiLCJzdHlsZWQiLCJzdHlsZWRQcm94eSIsIkRpdiIsIkluc2V0SGVhZGVyT2Zmc2V0IiwidXNlU3R5bGVzIiwicGFsZXR0ZSIsInJvb3QiLCJwb3NpdGlvbiIsImZsZXhTaHJpbmsiLCJwYXBlciIsImJhY2tncm91bmRDb2xvciIsInR5cGUiLCJiYWNrZ3JvdW5kIiwiZ3JleSIsIkluc2V0U2lkZWJhciIsInNpZGViYXJJZCIsImNoaWxkcmVuIiwicHJvcHMiLCJjbGFzc2VzIiwicm9vdFN0eWxlcyIsImJvZHlTdHlsZXMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsU0FBU0MsVUFBVCxRQUFrQywwQkFBbEM7QUFDQSxTQUFTQywwQkFBVCxRQUEyQyx1QkFBM0M7QUFDQSxPQUFPQyxvQkFBUCxNQUFpQyxzQkFBakM7QUFDQSxTQUFTQyxlQUFULFFBQWdDLGFBQWhDO0FBRUEsZ0JBQWUsVUFBQ0MsTUFBRCxFQUFpQjtBQUM5QixNQUFNQyxXQUFXLEdBQUdKLDBCQUEwQixDQUFDRyxNQUFELENBQTlDO0FBQ0EsTUFBTUUsR0FBRyxHQUFHRCxXQUFXLENBQUMsS0FBRCxDQUF2QjtBQUNBLE1BQU1FLGlCQUFpQixHQUFHTCxvQkFBb0IsQ0FBQ0UsTUFBRCxDQUE5QztBQUVBLE1BQU1JLFNBQVMsR0FBR1IsVUFBVSxDQUFDO0FBQUEsUUFBR1MsT0FBSCxRQUFHQSxPQUFIO0FBQUEsV0FBeUI7QUFDcERDLE1BQUFBLElBQUksRUFBRTtBQUNKQyxRQUFBQSxRQUFRLEVBQUUsVUFETjtBQUVKQyxRQUFBQSxVQUFVLEVBQUU7QUFGUixPQUQ4QztBQUtwREMsTUFBQUEsS0FBSyxFQUFFO0FBQ0xDLFFBQUFBLGVBQWUsRUFDYkwsT0FBTyxDQUFDTSxJQUFSLEtBQWlCLE1BQWpCLEdBQTBCTixPQUFPLENBQUNPLFVBQVIsQ0FBbUJILEtBQTdDLEdBQXFESixPQUFPLENBQUNRLElBQVIsQ0FBYSxHQUFiO0FBRmxEO0FBTDZDLEtBQXpCO0FBQUEsR0FBRCxDQUE1Qjs7QUFXQSxNQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxRQU9kO0FBQUEsUUFOTEMsU0FNSyxTQU5MQSxTQU1LO0FBQUEsUUFMTEMsUUFLSyxTQUxMQSxRQUtLO0FBQUEsUUFKRkMsS0FJRTs7QUFDTCxRQUFNQyxPQUFPLEdBQUdkLFNBQVMsQ0FBQ2EsS0FBRCxDQUF6Qjs7QUFESywyQkFFOEJsQixlQUFlLENBQUNnQixTQUFELENBRjdDO0FBQUEsUUFFR0ksVUFGSCxvQkFFR0EsVUFGSDtBQUFBLFFBRWVDLFVBRmYsb0JBRWVBLFVBRmY7O0FBR0wsd0JBQ0Usb0JBQUMsR0FBRDtBQUFLLE1BQUEsU0FBUyw4QkFBdUJGLE9BQU8sQ0FBQ1osSUFBL0IsQ0FBZDtBQUFxRCxNQUFBLE1BQU0sRUFBRWE7QUFBN0Qsb0JBQ0Usb0JBQUMsR0FBRDtBQUNFLE1BQUEsU0FBUywrQkFBd0JELE9BQU8sQ0FBQ1QsS0FBaEMsQ0FEWDtBQUVFLE1BQUEsTUFBTSxFQUFFVztBQUZWLG9CQUlFLG9CQUFDLGlCQUFEO0FBQW1CLE1BQUEsU0FBUyxFQUFFTDtBQUE5QixNQUpGLEVBS0dDLFFBTEgsQ0FERixDQURGO0FBV0QsR0FyQkQ7O0FBc0JBLFNBQU9GLFlBQVA7QUFDRCxDQXZDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzLCBUaGVtZSB9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL3N0eWxlcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZVN0eWxlZFByb3h5Q3JlYXRvciB9IGZyb20gJy4uL1NoYXJlZC9TdHlsZWRQcm94eSc7XG5pbXBvcnQgZ2V0SW5zZXRIZWFkZXJPZmZzZXQgZnJvbSAnLi4vSW5zZXRIZWFkZXJPZmZzZXQnO1xuaW1wb3J0IHsgdXNlSW5zZXRTaWRlYmFyIH0gZnJvbSAnLi4vLi4vaG9va3MnO1xuXG5leHBvcnQgZGVmYXVsdCAoc3R5bGVkOiBhbnkpID0+IHtcbiAgY29uc3Qgc3R5bGVkUHJveHkgPSBnZW5lcmF0ZVN0eWxlZFByb3h5Q3JlYXRvcihzdHlsZWQpO1xuICBjb25zdCBEaXYgPSBzdHlsZWRQcm94eSgnZGl2Jyk7XG4gIGNvbnN0IEluc2V0SGVhZGVyT2Zmc2V0ID0gZ2V0SW5zZXRIZWFkZXJPZmZzZXQoc3R5bGVkKTtcblxuICBjb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKCh7IHBhbGV0dGUgfTogVGhlbWUpID0+ICh7XG4gICAgcm9vdDoge1xuICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICBmbGV4U2hyaW5rOiAwLFxuICAgIH0sXG4gICAgcGFwZXI6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjpcbiAgICAgICAgcGFsZXR0ZS50eXBlID09PSAnZGFyaycgPyBwYWxldHRlLmJhY2tncm91bmQucGFwZXIgOiBwYWxldHRlLmdyZXlbMTAwXSxcbiAgICB9LFxuICB9KSk7XG5cbiAgY29uc3QgSW5zZXRTaWRlYmFyID0gKHtcbiAgICBzaWRlYmFySWQsXG4gICAgY2hpbGRyZW4sXG4gICAgLi4ucHJvcHNcbiAgfTogUmVhY3QuUHJvcHNXaXRoQ2hpbGRyZW48e1xuICAgIHNpZGViYXJJZDogc3RyaW5nO1xuICAgIGNsYXNzZXM/OiB7IHJvb3Q/OiBzdHJpbmc7IHBhcGVyPzogc3RyaW5nIH07XG4gIH0+KSA9PiB7XG4gICAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcyhwcm9wcyk7XG4gICAgY29uc3QgeyByb290U3R5bGVzLCBib2R5U3R5bGVzIH0gPSB1c2VJbnNldFNpZGViYXIoc2lkZWJhcklkKTtcbiAgICByZXR1cm4gKFxuICAgICAgPERpdiBjbGFzc05hbWU9e2BJbnNldFNpZGViYXItcm9vdCAke2NsYXNzZXMucm9vdH1gfSBzdHlsZXM9e3Jvb3RTdHlsZXN9PlxuICAgICAgICA8RGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXtgSW5zZXRTaWRlYmFyLXBhcGVyICR7Y2xhc3Nlcy5wYXBlcn1gfVxuICAgICAgICAgIHN0eWxlcz17Ym9keVN0eWxlc31cbiAgICAgICAgPlxuICAgICAgICAgIDxJbnNldEhlYWRlck9mZnNldCBzaWRlYmFySWQ9e3NpZGViYXJJZH0gLz5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvRGl2PlxuICAgICAgPC9EaXY+XG4gICAgKTtcbiAgfTtcbiAgcmV0dXJuIEluc2V0U2lkZWJhcjtcbn07XG4iXX0=