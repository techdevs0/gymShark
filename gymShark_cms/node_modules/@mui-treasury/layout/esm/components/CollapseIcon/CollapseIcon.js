function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { useTheme } from '@material-ui/core/styles';
import IconButton from '@material-ui/core/IconButton';
import ArrowLeft from '@material-ui/icons/KeyboardArrowLeftRounded';
import ArrowRight from '@material-ui/icons/KeyboardArrowRightRounded';
import { generateStyledProxyCreator } from '../Shared/StyledProxy';
import { useSidebarCollapse } from '../../hooks';
import { switchDirection } from '../../utils/resolveDirection';
export default (function (styled) {
  var styledProxy = generateStyledProxyCreator(styled);
  var StyledIconButton = styledProxy(IconButton);

  var CollapseIcon = function CollapseIcon(_ref) {
    var children = _ref.children,
        sidebarId = _ref.sidebarId,
        _onClick = _ref.onClick,
        SvgIconProps = _ref.SvgIconProps,
        props = _objectWithoutProperties(_ref, ["children", "sidebarId", "onClick", "SvgIconProps"]);

    var _useSidebarCollapse = useSidebarCollapse(sidebarId, 'CollapseIcon'),
        id = _useSidebarCollapse.id,
        anchor = _useSidebarCollapse.anchor,
        hiddenStyles = _useSidebarCollapse.hiddenStyles,
        state = _useSidebarCollapse.state,
        setCollapsed = _useSidebarCollapse.setCollapsed;

    var theme = useTheme();
    var arrowR = /*#__PURE__*/React.createElement(ArrowRight, SvgIconProps);
    var arrowL = /*#__PURE__*/React.createElement(ArrowLeft, SvgIconProps);

    var getArrow = function getArrow(direction) {
      if (direction === 'left') {
        return state.collapsed ? arrowR : arrowL;
      }

      if (direction === 'right') {
        return state.collapsed ? arrowL : arrowR;
      }

      return null;
    };

    return /*#__PURE__*/React.createElement(StyledIconButton, _extends({}, props, {
      styles: hiddenStyles,
      onClick: function onClick(e) {
        if (typeof _onClick === 'function') _onClick(e);
        setCollapsed(id, !state.collapsed);
      }
    }), typeof children === 'function' ? children(_extends({
      anchor: anchor
    }, state)) : getArrow(theme.direction === 'rtl' ? switchDirection(anchor) : anchor));
  };

  return CollapseIcon;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxhcHNlSWNvbi9Db2xsYXBzZUljb24udHN4Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlVGhlbWUiLCJJY29uQnV0dG9uIiwiQXJyb3dMZWZ0IiwiQXJyb3dSaWdodCIsImdlbmVyYXRlU3R5bGVkUHJveHlDcmVhdG9yIiwidXNlU2lkZWJhckNvbGxhcHNlIiwic3dpdGNoRGlyZWN0aW9uIiwic3R5bGVkIiwic3R5bGVkUHJveHkiLCJTdHlsZWRJY29uQnV0dG9uIiwiQ29sbGFwc2VJY29uIiwiY2hpbGRyZW4iLCJzaWRlYmFySWQiLCJvbkNsaWNrIiwiU3ZnSWNvblByb3BzIiwicHJvcHMiLCJpZCIsImFuY2hvciIsImhpZGRlblN0eWxlcyIsInN0YXRlIiwic2V0Q29sbGFwc2VkIiwidGhlbWUiLCJhcnJvd1IiLCJhcnJvd0wiLCJnZXRBcnJvdyIsImRpcmVjdGlvbiIsImNvbGxhcHNlZCIsImUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxTQUFTQyxRQUFULFFBQXlCLDBCQUF6QjtBQUNBLE9BQU9DLFVBQVAsTUFBNEMsOEJBQTVDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQiw2Q0FBdEI7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLDhDQUF2QjtBQUNBLFNBQVNDLDBCQUFULFFBQTJDLHVCQUEzQztBQUVBLFNBQVNDLGtCQUFULFFBQW1DLGFBQW5DO0FBQ0EsU0FBU0MsZUFBVCxRQUFnQyw4QkFBaEM7QUFFQSxnQkFBZSxVQUFDQyxNQUFELEVBQWlCO0FBQzlCLE1BQU1DLFdBQVcsR0FBR0osMEJBQTBCLENBQUNHLE1BQUQsQ0FBOUM7QUFDQSxNQUFNRSxnQkFBZ0IsR0FBR0QsV0FBVyxDQUFrQlAsVUFBbEIsQ0FBcEM7O0FBRUEsTUFBTVMsWUFBWSxHQUFHLFNBQWZBLFlBQWUsT0FNYTtBQUFBLFFBTGhDQyxRQUtnQyxRQUxoQ0EsUUFLZ0M7QUFBQSxRQUpoQ0MsU0FJZ0MsUUFKaENBLFNBSWdDO0FBQUEsUUFIaENDLFFBR2dDLFFBSGhDQSxPQUdnQztBQUFBLFFBRmhDQyxZQUVnQyxRQUZoQ0EsWUFFZ0M7QUFBQSxRQUQ3QkMsS0FDNkI7O0FBQUEsOEJBTzVCVixrQkFBa0IsQ0FBQ08sU0FBRCxFQUFZLGNBQVosQ0FQVTtBQUFBLFFBRTlCSSxFQUY4Qix1QkFFOUJBLEVBRjhCO0FBQUEsUUFHOUJDLE1BSDhCLHVCQUc5QkEsTUFIOEI7QUFBQSxRQUk5QkMsWUFKOEIsdUJBSTlCQSxZQUo4QjtBQUFBLFFBSzlCQyxLQUw4Qix1QkFLOUJBLEtBTDhCO0FBQUEsUUFNOUJDLFlBTjhCLHVCQU05QkEsWUFOOEI7O0FBUWhDLFFBQU1DLEtBQUssR0FBR3JCLFFBQVEsRUFBdEI7QUFDQSxRQUFNc0IsTUFBTSxnQkFBRyxvQkFBQyxVQUFELEVBQWdCUixZQUFoQixDQUFmO0FBQ0EsUUFBTVMsTUFBTSxnQkFBRyxvQkFBQyxTQUFELEVBQWVULFlBQWYsQ0FBZjs7QUFDQSxRQUFNVSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFDQyxTQUFELEVBQWlDO0FBQ2hELFVBQUlBLFNBQVMsS0FBSyxNQUFsQixFQUEwQjtBQUN4QixlQUFPTixLQUFLLENBQUNPLFNBQU4sR0FBa0JKLE1BQWxCLEdBQTJCQyxNQUFsQztBQUNEOztBQUNELFVBQUlFLFNBQVMsS0FBSyxPQUFsQixFQUEyQjtBQUN6QixlQUFPTixLQUFLLENBQUNPLFNBQU4sR0FBa0JILE1BQWxCLEdBQTJCRCxNQUFsQztBQUNEOztBQUNELGFBQU8sSUFBUDtBQUNELEtBUkQ7O0FBU0Esd0JBQ0Usb0JBQUMsZ0JBQUQsZUFDTVAsS0FETjtBQUVFLE1BQUEsTUFBTSxFQUFFRyxZQUZWO0FBR0UsTUFBQSxPQUFPLEVBQUUsaUJBQUNTLENBQUQsRUFBNEM7QUFDbkQsWUFBSSxPQUFPZCxRQUFQLEtBQW1CLFVBQXZCLEVBQW1DQSxRQUFPLENBQUNjLENBQUQsQ0FBUDtBQUNuQ1AsUUFBQUEsWUFBWSxDQUFDSixFQUFELEVBQUssQ0FBQ0csS0FBSyxDQUFDTyxTQUFaLENBQVo7QUFDRDtBQU5ILFFBUUcsT0FBT2YsUUFBUCxLQUFvQixVQUFwQixHQUNHQSxRQUFRO0FBQUdNLE1BQUFBLE1BQU0sRUFBTkE7QUFBSCxPQUFjRSxLQUFkLEVBRFgsR0FFR0ssUUFBUSxDQUNOSCxLQUFLLENBQUNJLFNBQU4sS0FBb0IsS0FBcEIsR0FDS25CLGVBQWUsQ0FBQ1csTUFBRCxDQURwQixHQUVJQSxNQUhFLENBVmQsQ0FERjtBQWtCRCxHQTVDRDs7QUE2Q0EsU0FBT1AsWUFBUDtBQUNELENBbEREIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVRoZW1lIH0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvc3R5bGVzJztcbmltcG9ydCBJY29uQnV0dG9uLCB7IEljb25CdXR0b25Qcm9wcyB9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL0ljb25CdXR0b24nO1xuaW1wb3J0IEFycm93TGVmdCBmcm9tICdAbWF0ZXJpYWwtdWkvaWNvbnMvS2V5Ym9hcmRBcnJvd0xlZnRSb3VuZGVkJztcbmltcG9ydCBBcnJvd1JpZ2h0IGZyb20gJ0BtYXRlcmlhbC11aS9pY29ucy9LZXlib2FyZEFycm93UmlnaHRSb3VuZGVkJztcbmltcG9ydCB7IGdlbmVyYXRlU3R5bGVkUHJveHlDcmVhdG9yIH0gZnJvbSAnLi4vU2hhcmVkL1N0eWxlZFByb3h5JztcbmltcG9ydCB7IEN0YVByb3BzLCBEcmF3ZXJBbmNob3IgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgeyB1c2VTaWRlYmFyQ29sbGFwc2UgfSBmcm9tICcuLi8uLi9ob29rcyc7XG5pbXBvcnQgeyBzd2l0Y2hEaXJlY3Rpb24gfSBmcm9tICcuLi8uLi91dGlscy9yZXNvbHZlRGlyZWN0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgKHN0eWxlZDogYW55KSA9PiB7XG4gIGNvbnN0IHN0eWxlZFByb3h5ID0gZ2VuZXJhdGVTdHlsZWRQcm94eUNyZWF0b3Ioc3R5bGVkKTtcbiAgY29uc3QgU3R5bGVkSWNvbkJ1dHRvbiA9IHN0eWxlZFByb3h5PEljb25CdXR0b25Qcm9wcz4oSWNvbkJ1dHRvbik7XG5cbiAgY29uc3QgQ29sbGFwc2VJY29uID0gKHtcbiAgICBjaGlsZHJlbixcbiAgICBzaWRlYmFySWQsXG4gICAgb25DbGljayxcbiAgICBTdmdJY29uUHJvcHMsXG4gICAgLi4ucHJvcHNcbiAgfTogSWNvbkJ1dHRvblByb3BzICYgQ3RhUHJvcHMpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBpZCxcbiAgICAgIGFuY2hvcixcbiAgICAgIGhpZGRlblN0eWxlcyxcbiAgICAgIHN0YXRlLFxuICAgICAgc2V0Q29sbGFwc2VkLFxuICAgIH0gPSB1c2VTaWRlYmFyQ29sbGFwc2Uoc2lkZWJhcklkLCAnQ29sbGFwc2VJY29uJyk7XG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICAgIGNvbnN0IGFycm93UiA9IDxBcnJvd1JpZ2h0IHsuLi5TdmdJY29uUHJvcHN9IC8+O1xuICAgIGNvbnN0IGFycm93TCA9IDxBcnJvd0xlZnQgey4uLlN2Z0ljb25Qcm9wc30gLz47XG4gICAgY29uc3QgZ2V0QXJyb3cgPSAoZGlyZWN0aW9uOiAnbGVmdCcgfCAncmlnaHQnKSA9PiB7XG4gICAgICBpZiAoZGlyZWN0aW9uID09PSAnbGVmdCcpIHtcbiAgICAgICAgcmV0dXJuIHN0YXRlLmNvbGxhcHNlZCA/IGFycm93UiA6IGFycm93TDtcbiAgICAgIH1cbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICdyaWdodCcpIHtcbiAgICAgICAgcmV0dXJuIHN0YXRlLmNvbGxhcHNlZCA/IGFycm93TCA6IGFycm93UjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgcmV0dXJuIChcbiAgICAgIDxTdHlsZWRJY29uQnV0dG9uXG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgc3R5bGVzPXtoaWRkZW5TdHlsZXN9XG4gICAgICAgIG9uQ2xpY2s9eyhlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxCdXR0b25FbGVtZW50PikgPT4ge1xuICAgICAgICAgIGlmICh0eXBlb2Ygb25DbGljayA9PT0gJ2Z1bmN0aW9uJykgb25DbGljayhlKTtcbiAgICAgICAgICBzZXRDb2xsYXBzZWQoaWQsICFzdGF0ZS5jb2xsYXBzZWQpO1xuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICB7dHlwZW9mIGNoaWxkcmVuID09PSAnZnVuY3Rpb24nXG4gICAgICAgICAgPyBjaGlsZHJlbih7IGFuY2hvciwgLi4uc3RhdGUgfSlcbiAgICAgICAgICA6IGdldEFycm93KFxuICAgICAgICAgICAgICB0aGVtZS5kaXJlY3Rpb24gPT09ICdydGwnXG4gICAgICAgICAgICAgICAgPyAoc3dpdGNoRGlyZWN0aW9uKGFuY2hvcikgYXMgRHJhd2VyQW5jaG9yKVxuICAgICAgICAgICAgICAgIDogYW5jaG9yXG4gICAgICAgICAgICApfVxuICAgICAgPC9TdHlsZWRJY29uQnV0dG9uPlxuICAgICk7XG4gIH07XG4gIHJldHVybiBDb2xsYXBzZUljb247XG59O1xuIl19