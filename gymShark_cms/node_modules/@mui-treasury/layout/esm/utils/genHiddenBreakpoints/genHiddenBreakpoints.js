import { keys } from '@material-ui/core/styles/createBreakpoints';
import get from '../get';
export var genHiddenBreakpoints = function genHiddenBreakpoints(componentData, id, predicate) {
  if (get(componentData, ['hiddenById', id]) === keys) {
    // hidden at all breakpoints if true
    return keys;
  }

  var result = [];
  var found = false;
  keys.forEach(function (bp) {
    var config = get(componentData, ['configMapById', id, bp]);

    if (predicate(config)) {
      // if predicate return true, won't add this breakpoint to the list
      found = true;
    } else if (!found || config) {
      result.push(bp);
      found = false;
    }
  });
  return result;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy91dGlscy9nZW5IaWRkZW5CcmVha3BvaW50cy9nZW5IaWRkZW5CcmVha3BvaW50cy50cyJdLCJuYW1lcyI6WyJrZXlzIiwiZ2V0IiwiZ2VuSGlkZGVuQnJlYWtwb2ludHMiLCJjb21wb25lbnREYXRhIiwiaWQiLCJwcmVkaWNhdGUiLCJyZXN1bHQiLCJmb3VuZCIsImZvckVhY2giLCJicCIsImNvbmZpZyIsInB1c2giXSwibWFwcGluZ3MiOiJBQUFBLFNBQXFCQSxJQUFyQixRQUFpQyw0Q0FBakM7QUFFQSxPQUFPQyxHQUFQLE1BQWdCLFFBQWhCO0FBRUEsT0FBTyxJQUFNQyxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQXVCLENBQ2xDQyxhQURrQyxFQUtsQ0MsRUFMa0MsRUFNbENDLFNBTmtDLEVBTy9CO0FBQ0gsTUFBSUosR0FBRyxDQUFDRSxhQUFELEVBQWdCLENBQUMsWUFBRCxFQUFlQyxFQUFmLENBQWhCLENBQUgsS0FBMkNKLElBQS9DLEVBQXFEO0FBQ25EO0FBQ0EsV0FBT0EsSUFBUDtBQUNEOztBQUNELE1BQU1NLE1BQW9CLEdBQUcsRUFBN0I7QUFDQSxNQUFJQyxLQUFjLEdBQUcsS0FBckI7QUFDQVAsRUFBQUEsSUFBSSxDQUFDUSxPQUFMLENBQWEsVUFBQUMsRUFBRSxFQUFJO0FBQ2pCLFFBQU1DLE1BQWMsR0FBR1QsR0FBRyxDQUFDRSxhQUFELEVBQWdCLENBQUMsZUFBRCxFQUFrQkMsRUFBbEIsRUFBc0JLLEVBQXRCLENBQWhCLENBQTFCOztBQUNBLFFBQUlKLFNBQVMsQ0FBQ0ssTUFBRCxDQUFiLEVBQXVCO0FBQ3JCO0FBQ0FILE1BQUFBLEtBQUssR0FBRyxJQUFSO0FBQ0QsS0FIRCxNQUdPLElBQUksQ0FBQ0EsS0FBRCxJQUFVRyxNQUFkLEVBQXNCO0FBQzNCSixNQUFBQSxNQUFNLENBQUNLLElBQVAsQ0FBWUYsRUFBWjtBQUNBRixNQUFBQSxLQUFLLEdBQUcsS0FBUjtBQUNEO0FBQ0YsR0FURDtBQVVBLFNBQU9ELE1BQVA7QUFDRCxDQXpCTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJyZWFrcG9pbnQsIGtleXMgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXMvY3JlYXRlQnJlYWtwb2ludHMnO1xuaW1wb3J0IHsgQ29tcG9uZW50RGF0YSB9IGZyb20gJy4uLy4uL3NoYXJlZC9CdWlsZGVyQ3JlYXRvci9NdWx0aU9iamVjdHMnO1xuaW1wb3J0IGdldCBmcm9tICcuLi9nZXQnO1xuXG5leHBvcnQgY29uc3QgZ2VuSGlkZGVuQnJlYWtwb2ludHMgPSA8Q29uZmlnLCBQcm9wcyA9IHt9PihcbiAgY29tcG9uZW50RGF0YTogUGljazxcbiAgICBDb21wb25lbnREYXRhPENvbmZpZywgUHJvcHM+LFxuICAgICdjb25maWdNYXBCeUlkJyB8ICdoaWRkZW5CeUlkJ1xuICA+LFxuICBpZDogc3RyaW5nLFxuICBwcmVkaWNhdGU6IChjb25maWc6IENvbmZpZykgPT4gYm9vbGVhblxuKSA9PiB7XG4gIGlmIChnZXQoY29tcG9uZW50RGF0YSwgWydoaWRkZW5CeUlkJywgaWRdKSA9PT0ga2V5cykge1xuICAgIC8vIGhpZGRlbiBhdCBhbGwgYnJlYWtwb2ludHMgaWYgdHJ1ZVxuICAgIHJldHVybiBrZXlzO1xuICB9XG4gIGNvbnN0IHJlc3VsdDogQnJlYWtwb2ludFtdID0gW107XG4gIGxldCBmb3VuZDogYm9vbGVhbiA9IGZhbHNlO1xuICBrZXlzLmZvckVhY2goYnAgPT4ge1xuICAgIGNvbnN0IGNvbmZpZzogQ29uZmlnID0gZ2V0KGNvbXBvbmVudERhdGEsIFsnY29uZmlnTWFwQnlJZCcsIGlkLCBicF0pO1xuICAgIGlmIChwcmVkaWNhdGUoY29uZmlnKSkge1xuICAgICAgLy8gaWYgcHJlZGljYXRlIHJldHVybiB0cnVlLCB3b24ndCBhZGQgdGhpcyBicmVha3BvaW50IHRvIHRoZSBsaXN0XG4gICAgICBmb3VuZCA9IHRydWU7XG4gICAgfSBlbHNlIGlmICghZm91bmQgfHwgY29uZmlnKSB7XG4gICAgICByZXN1bHQucHVzaChicCk7XG4gICAgICBmb3VuZCA9IGZhbHNlO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl19