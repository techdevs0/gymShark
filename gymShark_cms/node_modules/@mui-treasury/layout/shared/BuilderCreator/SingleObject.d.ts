import { Breakpoint } from '@material-ui/core/styles/createBreakpoints';
import { RpsConfig, SingleObjData } from '../State';
declare type Params<R> = {
    defaultId: string;
    component?: 'Header' | 'Footer' | 'Content';
    Registry?: R;
};
export declare type DummyRegistry<Config = undefined, Props = {}> = (state: SingleObjData<Config>, props?: Props) => {};
export interface SingleObjBuilderResult<R extends DummyRegistry<Config>, Config = undefined> {
    create: (id: string) => ReturnType<R>;
    update: (updater: (config: RpsConfig<Config>) => void) => void;
    hide: (breakpoints: Breakpoint[] | boolean) => void;
    getId: () => string;
    getData: () => RpsConfig<Config>;
    debug?: () => void;
}
declare type BuilderResult<R extends DummyRegistry<Config>, Config = undefined> = ReturnType<R> & SingleObjBuilderResult<R, Config>;
export declare const createSingleObjBuilder: <R extends DummyRegistry<Config, {}>, Config = undefined>({ defaultId, component, Registry, }: Params<R>) => (initialRpsConfig?: {}) => BuilderResult<R, Config>;
export {};
