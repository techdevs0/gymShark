"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.useSidebarAutoCollapse = void 0;

var _react = require("react");

var _createBreakpoints = require("@material-ui/core/styles/createBreakpoints");

var _useScreen = require("./useScreen");

var _contexts = require("../contexts");

var useSidebarAutoCollapse = function useSidebarAutoCollapse(sidebarId) {
  var _useLayoutCtx = (0, _contexts.useLayoutCtx)(),
      collapsedBp = _useLayoutCtx.data.global.autoCollapse[sidebarId],
      setCollapsed = _useLayoutCtx.setCollapsed;

  var screen = (0, _useScreen.useScreen)();
  var prevScreen = (0, _react.useRef)(screen);
  (0, _react.useEffect)(function () {
    if (collapsedBp && screen && prevScreen.current) {
      if (screen === prevScreen.current && _createBreakpoints.keys.indexOf(screen) <= _createBreakpoints.keys.indexOf(collapsedBp)) {
        // first mount on browser
        setCollapsed(sidebarId, true);
      } // when viewport changes


      if (screen !== prevScreen.current) {
        if (_createBreakpoints.keys.indexOf(prevScreen.current) <= _createBreakpoints.keys.indexOf(collapsedBp) && _createBreakpoints.keys.indexOf(collapsedBp) < _createBreakpoints.keys.indexOf(screen)) {
          setCollapsed(sidebarId, false);
        }

        if (_createBreakpoints.keys.indexOf(prevScreen.current) > _createBreakpoints.keys.indexOf(collapsedBp) && _createBreakpoints.keys.indexOf(collapsedBp) >= _createBreakpoints.keys.indexOf(screen)) {
          setCollapsed(sidebarId, true);
        }

        prevScreen.current = screen;
      }
    }
  }, [screen]);
};

exports.useSidebarAutoCollapse = useSidebarAutoCollapse;
var _default = useSidebarAutoCollapse;
exports["default"] = _default;