{"ast":null,"code":"import _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\src\\\\views\\\\Blogs\\\\Add.js\";\nimport React, { Fragment, useEffect, useState } from \"react\"; //Suspense\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField } from \"@material-ui/core\";\nimport CKEditor from \"ckeditor4-react\";\nimport { Image } from \"@material-ui/icons\";\nimport LangAPI from \"langapi/http\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useParams, withRouter, useLocation } from \"react-router-dom\";\nimport GalleryDialog from \"views/Common/GalleryDialog\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default withRouter(function AddRoom(props) {\n  var _room$seo, _room$seo2, _room$seo3;\n\n  var _useLocation = useLocation(),\n      search = _useLocation.search;\n\n  var query = new URLSearchParams(search);\n  var lang = query.get('lang');\n  var classes = useStyles();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var initialObject = {\n    title: \"\",\n    description: \"\",\n    short_description: \"\",\n    featured_img: \"\",\n    banner_img: \"\",\n    sub_title: \"\",\n    route: \"\",\n    tags: [],\n    seo: {\n      meta_title: \"\",\n      meta_description: \"\",\n      schema_markup: \"\" // is_followed: true,\n      // is_indexed: true,\n      // is_indexed_or_is_followed: \"0,0\",\n\n    }\n  };\n  var tagsList = [{\n    value: \"photography\",\n    label: \"Photography\"\n  }, {\n    value: \"style\",\n    label: \"Style\"\n  }];\n\n  var _useState = useState(_objectSpread({}, initialObject)),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEdit = _useState4[0],\n      setIsEdit = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imagesData = _useState6[0],\n      setImagesData = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showGallery = _useState8[0],\n      setShowGallery = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isSingle = _useState10[0],\n      setIsSingle = _useState10[1];\n\n  var _useState11 = useState(lang || \"en\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedLang = _useState12[0],\n      setSelectedLang = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      thumbnailPreview = _useState14[0],\n      setThumbnailPreview = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isBanner = _useState16[0],\n      setIsBanner = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      bannerThumbnailPreview = _useState18[0],\n      setBannerThumbnailPreview = _useState18[1];\n\n  useEffect(function () {\n    if (id && id != null) {\n      setIsEdit(true);\n      LangAPI.get(\"/blogs/\".concat(id)).then(function (response) {\n        if (response.status === 200) {\n          var data = _objectSpread({}, response === null || response === void 0 ? void 0 : response.data);\n\n          if (response === null || response === void 0 ? void 0 : response.data) {\n            setRoom(_objectSpread(_objectSpread({}, room), data));\n          } else {\n            setRoom(_objectSpread({}, initialObject));\n          }\n        }\n      });\n    }\n\n    if (!imagesData.length > 0) {\n      getGalleryImages();\n    }\n  }, []);\n\n  var getGalleryImages = function getGalleryImages() {\n    LangAPI.get(\"/uploads\").then(function (response) {\n      if (response.status === 200) {\n        var _response$data, _response$data$data;\n\n        setImagesData((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.map(function (x) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: false\n          });\n        }));\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    updatedRoom[e.target.name] = e.target.value;\n    setRoom(updatedRoom);\n  };\n\n  var handleSEOInputChange = function handleSEOInputChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    updatedRoom.seo[e.target.name] = e.target.value;\n    setRoom(updatedRoom);\n  };\n\n  var handlerouteChange = function handlerouteChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    var updatedValue = e.target.value.replace(/\\s+/g, \"-\");\n    updatedValue = updatedValue.replace(/--/g, \"-\");\n    updatedRoom[e.target.name] = updatedValue.toLowerCase();\n    setRoom(updatedRoom);\n  };\n\n  var handleImageSelect = function handleImageSelect(e, index) {\n    if (e.target.checked) {\n      if (isSingle && !isBanner) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          featured_img: imagesData[index].avatar\n        }));\n        setThumbnailPreview(imagesData[index].avatar);\n        setTimeout(function () {\n          setShowGallery(false);\n        }, 500);\n      } else if (isBanner && !isSingle) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          banner_img: imagesData[index].avatar\n        }));\n        setBannerThumbnailPreview(imagesData[index].avatar);\n        setTimeout(function () {\n          setShowGallery(false);\n        }, 500);\n      }\n\n      var imagesDataUpdated = imagesData.map(function (x, i) {\n        if (i === index) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: true\n          });\n        } else {\n          return x;\n        }\n      });\n      setImagesData(imagesDataUpdated); // }\n    } else {\n      if (isSingle && !isBanner) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          img: \"\"\n        }));\n        setThumbnailPreview(\"\");\n      } else if (isBanner && !isSingle) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          banner_img: \"\"\n        }));\n        setBannerThumbnailPreview(\"\");\n      }\n\n      setImagesData(imagesData.map(function (x, i) {\n        if (i === index) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: false\n          });\n        } else {\n          return x;\n        }\n      }));\n    }\n  };\n\n  var handleTagsSelect = function handleTagsSelect(newValue, actionMeta) {\n    var updateValues = _objectSpread({}, room);\n\n    updateValues.tags = newValue;\n    setRoom(updateValues);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var finalRoom = room;\n    console.log(\"finalRoom\", finalRoom);\n\n    if (!finalRoom.title || finalRoom.title == \"\") {\n      alert(\"Please Enter Name before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.route || finalRoom.route == \"\") {\n      alert(\"Please Enter route before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.featured_img || finalRoom.featured_img == \"\") {\n      alert(\"Please Select Featured Image before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.banner_img || finalRoom.banner_img == \"\") {\n      alert(\"Please Select Banner Image before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.short_description || finalRoom.short_description == \"\") {\n      alert(\"Please Enter Short Description before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.description || finalRoom.description == \"\") {\n      alert(\"Please Enter Description before Submiting\");\n      return false;\n    }\n\n    var token = localStorage.getItem(\"authToken\") || \"\";\n    LangAPI.post(\"/blogs\", finalRoom, {\n      headers: {\n        'Authorization': \"Bearer \".concat(token)\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        console.log(response);\n        alert(\"Blog Added\");\n        setRoom(_objectSpread({}, initialObject));\n        props.history.push(\"/admin/blogs\");\n      }\n    })[\"catch\"](function (error) {\n      console.log(error);\n    }); // if (isEdit) {\n    //     LangAPI.post(`/blogs`, finalRoom).then((response) => {\n    //         if (response.status === 200) {\n    //             alert(\"Blog Updated\");\n    //             setRoom({ ...initialObject });\n    //             props.history.push(\"/admin/blogs\");\n    //         }\n    //     });\n    // } else {\n    //     LangAPI.post(`/blogs`, finalRoom).then((response) => {\n    //         if (response.status === 200) {\n    //             alert(\"Blog Added\");\n    //             setRoom({ ...initialObject });\n    //             props.history.push(\"/admin/blogs\");\n    //         }\n    //     });\n    // }\n  }; // const handleChange = (event) => {\n  //     if (event.target.value != selectedLang) {\n  //         setSelectedLang(event.target.value)\n  //     }\n  //     console.log(event.target.value, \"event.target.value\")\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, \"Add Blogs\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, \"General Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"title\",\n    name: \"title\",\n    label: \"Name\",\n    value: room.title,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"sub_title\",\n    name: \"sub_title\",\n    label: \"Sub Title\",\n    value: room.sub_title,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"route\",\n    name: \"route\",\n    label: \"Route\",\n    value: room.route,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handlerouteChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 41\n    }\n  }, \"Select Tags\"), /*#__PURE__*/React.createElement(CreatableSelect, {\n    isMulti: true,\n    onChange: handleTagsSelect,\n    options: tagsList,\n    value: room === null || room === void 0 ? void 0 : room.tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnail-preview-wrapper img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 37\n    }\n  }, !isEdit ? thumbnailPreview && thumbnailPreview !== \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnailPreview,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./../../assets/img/placeholder.png\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 49\n    }\n  }) : typeof room.featured_img === typeof 0 ?\n  /*#__PURE__*/\n  // room.thumbnail && room.thumbnail !== \"\" ?\n  React.createElement(\"img\", {\n    src: thumbnailPreview,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: room.featured_img,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(Image, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 56\n      }\n    }),\n    className: \"mt-1\",\n    fullWidth: true,\n    onClick: function onClick() {\n      setIsSingle(true);\n      setIsBanner(false);\n      setShowGallery(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 41\n    }\n  }, isEdit ? \"Change\" : \"Upload\", \" Featured Image\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnail-preview-wrapper img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 37\n    }\n  }, !isEdit ? bannerThumbnailPreview && bannerThumbnailPreview !== \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n    src: bannerThumbnailPreview,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./../../assets/img/placeholder.png\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 49\n    }\n  }) : typeof room.banner_img === typeof 0 ?\n  /*#__PURE__*/\n  // room.thumbnail && room.thumbnail !== \"\" ?\n  React.createElement(\"img\", {\n    src: bannerThumbnailPreview,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: room.banner_img,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(Image, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 56\n      }\n    }),\n    className: \"mt-1\",\n    fullWidth: true,\n    onClick: function onClick() {\n      setIsSingle(false);\n      setIsBanner(true);\n      setShowGallery(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 41\n    }\n  }, isEdit ? \"Change\" : \"Upload\", \" Banner Image\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 29\n    }\n  }, \"Short Description\"), /*#__PURE__*/React.createElement(CKEditor, {\n    onBeforeLoad: function onBeforeLoad(CKEDITOR) {\n      return CKEDITOR.disableAutoInline = true;\n    },\n    data: room.short_description,\n    onChange: function onChange(e) {\n      return setRoom(_objectSpread(_objectSpread({}, room), {}, {\n        short_description: e.editor.getData()\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 29\n    }\n  }, \"Detailed Content\"), /*#__PURE__*/React.createElement(CKEditor, {\n    onBeforeLoad: function onBeforeLoad(CKEDITOR) {\n      return CKEDITOR.disableAutoInline = true;\n    },\n    data: room.description,\n    onChange: function onChange(e) {\n      return setRoom(_objectSpread(_objectSpread({}, room), {}, {\n        description: e.editor.getData()\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clearfix clear-fix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(GalleryDialog, {\n    open: showGallery,\n    handleImageSelect: handleImageSelect,\n    handleClose: function handleClose() {\n      setShowGallery(false);\n    },\n    refreshGallery: getGalleryImages,\n    data: imagesData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 21\n    }\n  }, \"SEO Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"meta_title\",\n    name: \"meta_title\",\n    label: \"Meta Title\",\n    value: room === null || room === void 0 ? void 0 : (_room$seo = room.seo) === null || _room$seo === void 0 ? void 0 : _room$seo.meta_title,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleSEOInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"meta_description\",\n    name: \"meta_description\",\n    label: \"Meta Description\",\n    value: room === null || room === void 0 ? void 0 : (_room$seo2 = room.seo) === null || _room$seo2 === void 0 ? void 0 : _room$seo2.meta_description,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleSEOInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"schema_markup\",\n    name: \"schema_markup\",\n    label: \"Schema Markup\",\n    value: room === null || room === void 0 ? void 0 : (_room$seo3 = room.seo) === null || _room$seo3 === void 0 ? void 0 : _room$seo3.schema_markup,\n    variant: \"outlined\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    rowsMax: 4,\n    onChange: handleSEOInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    onClick: handleSubmit,\n    style: {\n      \"float\": \"right\"\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n});","map":{"version":3,"sources":["E:/laragon/www/Prism/bafco_cms/src/views/Blogs/Add.js"],"names":["React","Fragment","useEffect","useState","makeStyles","InputLabel","Grid","MaterialButton","Card","CardHeader","CardBody","FormControl","FormControlLabel","MenuItem","Radio","RadioGroup","Select","TextField","CKEditor","Image","LangAPI","CreatableSelect","useParams","withRouter","useLocation","GalleryDialog","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","AddRoom","props","search","query","URLSearchParams","lang","get","classes","id","initialObject","title","description","short_description","featured_img","banner_img","sub_title","route","tags","seo","meta_title","meta_description","schema_markup","tagsList","value","label","room","setRoom","isEdit","setIsEdit","imagesData","setImagesData","showGallery","setShowGallery","isSingle","setIsSingle","selectedLang","setSelectedLang","thumbnailPreview","setThumbnailPreview","isBanner","setIsBanner","bannerThumbnailPreview","setBannerThumbnailPreview","then","response","status","data","length","getGalleryImages","map","x","isChecked","err","console","log","handleInputChange","e","updatedRoom","target","name","handleSEOInputChange","handlerouteChange","updatedValue","replace","toLowerCase","handleImageSelect","index","checked","avatar","setTimeout","imagesDataUpdated","i","img","handleTagsSelect","newValue","actionMeta","updateValues","handleSubmit","finalRoom","alert","token","localStorage","getItem","post","headers","history","push","error","fontWeight","display","alt_text","require","CKEDITOR","disableAutoInline","editor","getData"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"; //Suspense\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField, } from \"@material-ui/core\";\nimport CKEditor from \"ckeditor4-react\";\nimport { Image } from \"@material-ui/icons\";\nimport LangAPI from \"langapi/http\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useParams, withRouter, useLocation } from \"react-router-dom\";\nimport GalleryDialog from \"views/Common/GalleryDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default withRouter(function AddRoom(props) {\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const lang = query.get('lang');\n    const classes = useStyles();\n    let { id } = useParams();\n\n    const initialObject = {\n        title: \"\",\n        description: \"\",\n        short_description: \"\",\n        featured_img: \"\",\n        banner_img: \"\",\n        sub_title: \"\",\n        route: \"\",\n        tags: [],\n        seo: {\n            meta_title: \"\",\n            meta_description: \"\",\n            schema_markup: \"\",\n            // is_followed: true,\n            // is_indexed: true,\n            // is_indexed_or_is_followed: \"0,0\",\n        },\n    };\n    const tagsList = [\n        {\n            value: \"photography\",\n            label: \"Photography\",\n        },\n        {\n            value: \"style\",\n            label: \"Style\",\n        },\n    ];\n    const [room, setRoom] = useState({ ...initialObject });\n    const [isEdit, setIsEdit] = useState(false);\n    const [imagesData, setImagesData] = useState([]);\n    const [showGallery, setShowGallery] = useState(false);\n    const [isSingle, setIsSingle] = useState(false);\n    const [selectedLang, setSelectedLang] = useState(lang || \"en\");\n    const [thumbnailPreview, setThumbnailPreview] = useState(\"\");\n    const [isBanner, setIsBanner] = useState(false);\n    const [bannerThumbnailPreview, setBannerThumbnailPreview] = useState(\"\");\n\n    useEffect(() => {\n        if (id && id != null) {\n            setIsEdit(true);\n            LangAPI.get(`/blogs/${id}`).then((response) => {\n                if (response.status === 200) {\n                    let data = { ...response?.data };\n                    if (response?.data) {\n                        setRoom({ ...room, ...data });\n                    } else {\n                        setRoom({ ...initialObject });\n                    }\n                }\n            });\n        }\n        if (!imagesData.length > 0) {\n            getGalleryImages();\n        }\n    }, []);\n\n    const getGalleryImages = () => {\n        LangAPI.get(`/uploads`).then((response) => {\n            if (response.status === 200) {\n                setImagesData(response.data?.data?.map((x) => ({ ...x, isChecked: false })));\n            }\n        }).catch(err => console.log(err));\n    };\n\n    const handleInputChange = (e) => {\n        let updatedRoom = { ...room };\n        updatedRoom[e.target.name] = e.target.value;\n        setRoom(updatedRoom);\n    };\n    const handleSEOInputChange = (e) => {\n        let updatedRoom = { ...room };\n        updatedRoom.seo[e.target.name] = e.target.value;\n        setRoom(updatedRoom);\n    };\n\n    const handlerouteChange = (e) => {\n        let updatedRoom = { ...room };\n        let updatedValue = e.target.value.replace(/\\s+/g, \"-\");\n        updatedValue = updatedValue.replace(/--/g, \"-\");\n        updatedRoom[e.target.name] = updatedValue.toLowerCase();\n        setRoom(updatedRoom);\n    };\n\n    const handleImageSelect = (e, index) => {\n        if (e.target.checked) {\n            if (isSingle && !isBanner) {\n                setRoom({ ...room, featured_img: imagesData[index].avatar });\n                setThumbnailPreview(imagesData[index].avatar);\n                setTimeout(() => {\n                    setShowGallery(false);\n                }, 500);\n            }\n            else if (isBanner && !isSingle) {\n                setRoom({ ...room, banner_img: imagesData[index].avatar });\n                setBannerThumbnailPreview(imagesData[index].avatar);\n                setTimeout(() => {\n                    setShowGallery(false);\n                }, 500);\n            }\n            let imagesDataUpdated = imagesData.map((x, i) => {\n                if (i === index) {\n                    return {\n                        ...x,\n                        isChecked: true,\n                    };\n                } else {\n                    return x;\n                }\n            });\n            setImagesData(imagesDataUpdated);\n            // }\n        } else {\n            if (isSingle && !isBanner) {\n                setRoom({ ...room, img: \"\" });\n                setThumbnailPreview(\"\");\n            }\n            else if (isBanner && !isSingle) {\n                setRoom({ ...room, banner_img: \"\" });\n                setBannerThumbnailPreview(\"\");\n            }\n            setImagesData(\n                imagesData.map((x, i) => {\n                    if (i === index) {\n                        return {\n                            ...x,\n                            isChecked: false,\n                        };\n                    } else {\n                        return x;\n                    }\n                })\n            );\n        }\n    };\n\n    const handleTagsSelect = (\n        newValue: OnChangeValue<tagsList, true>,\n        actionMeta: ActionMeta<tagsList>\n    ) => {\n        let updateValues = { ...room };\n\n        updateValues.tags = newValue;\n\n        setRoom(updateValues)\n\n    };\n\n    const handleSubmit = () => {\n        let finalRoom = room;\n        console.log(\"finalRoom\", finalRoom)\n        if (!finalRoom.title || finalRoom.title == \"\") {\n            alert(\"Please Enter Name before Submiting\")\n            return false;\n        }\n        if (!finalRoom.route || finalRoom.route == \"\") {\n            alert(\"Please Enter route before Submiting\")\n            return false;\n        }\n        if (!finalRoom.featured_img || finalRoom.featured_img == \"\") {\n            alert(\"Please Select Featured Image before Submiting\")\n            return false;\n        }\n        if (!finalRoom.banner_img || finalRoom.banner_img == \"\") {\n            alert(\"Please Select Banner Image before Submiting\")\n            return false;\n        }\n        if (!finalRoom.short_description || finalRoom.short_description == \"\") {\n            alert(\"Please Enter Short Description before Submiting\")\n            return false;\n        }\n        if (!finalRoom.description || finalRoom.description == \"\") {\n            alert(\"Please Enter Description before Submiting\")\n            return false;\n        }\n\n        let token = localStorage.getItem(\"authToken\") || \"\"\n        LangAPI.post(`/blogs`, finalRoom, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        }).then((response) => {\n            if (response.status === 200) {\n                console.log(response)\n                alert(\"Blog Added\");\n                setRoom({ ...initialObject });\n                props.history.push(\"/admin/blogs\");\n            }\n        }).catch(function (error) {\n            console.log(error);\n        });\n\n        // if (isEdit) {\n        //     LangAPI.post(`/blogs`, finalRoom).then((response) => {\n        //         if (response.status === 200) {\n        //             alert(\"Blog Updated\");\n        //             setRoom({ ...initialObject });\n        //             props.history.push(\"/admin/blogs\");\n        //         }\n        //     });\n        // } else {\n        //     LangAPI.post(`/blogs`, finalRoom).then((response) => {\n        //         if (response.status === 200) {\n        //             alert(\"Blog Added\");\n        //             setRoom({ ...initialObject });\n        //             props.history.push(\"/admin/blogs\");\n        //         }\n        //     });\n        // }\n    };\n\n    // const handleChange = (event) => {\n    //     if (event.target.value != selectedLang) {\n    //         setSelectedLang(event.target.value)\n    //     }\n    //     console.log(event.target.value, \"event.target.value\")\n    // };\n    return (\n        <div className={classes.root}>\n            <Card>\n                <CardHeader color=\"primary\" className=\"d-flex justify-content-between align-items-center\">\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mb-0\">\n                        Add Blogs\n                    </h4>\n                    {/* <FormControl\n                        variant=\"outlined\"\n                        size=\"small\"\n                        style={{ width: \"20%\", color: \"white\" }}\n                    >\n                        <InputLabel id=\"language\"\n                            style={{ color: \"white\" }}\n                        >Select Language</InputLabel>\n                        <Select\n                            labelId=\"language\"\n                            id=\"language\"\n                            name=\"language\"\n                            value={selectedLang}\n                            label=\"Select Language\"\n                            fullWidth\n                            style={{ color: \"white\" }}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'en'}>En</MenuItem>\n                            <MenuItem value={'fr'}>FR</MenuItem>\n                            <MenuItem value={'de'}>DE</MenuItem>\n\n                        </Select>\n                    </FormControl> */}\n                </CardHeader>\n                <CardBody>\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mt-3\">\n                        General Information\n                    </h4>\n                    <Grid container spacing={2} style={{ display: \"flex\" }}>\n                        <Grid item xs={12} sm={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"title\"\n                                        name=\"title\"\n                                        label=\"Name\"\n                                        value={room.title}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"sub_title\"\n                                        name=\"sub_title\"\n                                        label=\"Sub Title\"\n                                        value={room.sub_title}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid>\n                                {/* <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"posted_by\"\n                                        name=\"posted_by\"\n                                        label=\"Written By\"\n                                        value={room.posted_by}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid> */}\n                                <Grid item xs={12} sm={12}>\n                                    <TextField\n                                        id=\"route\"\n                                        name=\"route\"\n                                        label=\"Route\"\n                                        value={room.route}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handlerouteChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={12}>\n                                        <p>Select Tags</p>\n                                        <CreatableSelect\n                                            isMulti\n                                            onChange={handleTagsSelect}\n                                            options={tagsList}\n                                            value={room?.tags}\n                                        />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={4}>\n                                    <div className=\"thumbnail-preview-wrapper img-thumbnail\">\n                                        {!isEdit ? (\n                                            thumbnailPreview && thumbnailPreview !== \"\" ? (\n                                                <img src={thumbnailPreview} alt={room.alt_text || \"\"} />\n                                            ) : (\n                                                <img\n                                                    src={require(\"./../../assets/img/placeholder.png\")}\n                                                    alt=\"\"\n                                                />\n                                            )\n                                        ) : typeof room.featured_img === typeof 0 ? (\n                                            // room.thumbnail && room.thumbnail !== \"\" ?\n                                            <img src={thumbnailPreview} alt={room.alt_text || \"\"} />\n                                        ) : (\n                                            <img src={room.featured_img} alt={room.alt_text || \"\"} />\n                                        )}\n                                    </div>\n                                    <Fragment>\n                                        <MaterialButton\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                            startIcon={<Image />}\n                                            className=\"mt-1\"\n                                            fullWidth\n                                            onClick={() => {\n                                                setIsSingle(true);\n                                                setIsBanner(false);\n                                                setShowGallery(true);\n                                            }}\n                                        >\n                                            {isEdit ? \"Change\" : \"Upload\"} Featured Image\n                                        </MaterialButton>\n                                    </Fragment>\n                                </Grid>\n                                <Grid item xs={12} sm={8}>\n                                    <div className=\"thumbnail-preview-wrapper img-thumbnail\">\n                                        {!isEdit ? (\n                                            bannerThumbnailPreview &&\n                                                bannerThumbnailPreview !== \"\" ? (\n                                                <img\n                                                    src={bannerThumbnailPreview}\n                                                    alt={room.alt_text || \"\"}\n                                                />\n                                            ) : (\n                                                <img\n                                                    src={require(\"./../../assets/img/placeholder.png\")}\n                                                    alt=\"\"\n                                                />\n                                            )\n                                        ) : typeof room.banner_img === typeof 0 ? (\n                                            // room.thumbnail && room.thumbnail !== \"\" ?\n                                            <img\n                                                src={bannerThumbnailPreview}\n                                                alt={room.alt_text || \"\"}\n                                            />\n                                        ) : (\n                                            <img src={room.banner_img} alt={room.alt_text || \"\"} />\n                                        )}\n                                    </div>\n                                    <Fragment>\n                                        <MaterialButton\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                            startIcon={<Image />}\n                                            className=\"mt-1\"\n                                            fullWidth\n                                            onClick={() => {\n                                                setIsSingle(false);\n                                                setIsBanner(true);\n                                                setShowGallery(true);\n                                            }}\n                                        >\n                                            {isEdit ? \"Change\" : \"Upload\"} Banner Image\n                                        </MaterialButton>\n                                    </Fragment>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} sm={12}>\n                            <hr />\n                            <h4 style={{ fontWeight: \"400\" }}>Short Description</h4>\n                            <CKEditor\n                                onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                data={room.short_description}\n                                onChange={(e) =>\n                                    setRoom({ ...room, short_description: e.editor.getData() })\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <hr />\n                            <h4 style={{ fontWeight: \"400\" }}>Detailed Content</h4>\n\n                            <CKEditor\n                                onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                data={room.description}\n                                onChange={(e) =>\n                                    setRoom({ ...room, description: e.editor.getData() })\n                                }\n                            />\n                        </Grid>\n                        <div className=\"clearfix clear-fix\"></div>\n                        {/* GALLERY DIALOG BOX START */}\n\n                        <GalleryDialog\n                            open={showGallery} handleImageSelect={handleImageSelect} handleClose={() => {\n                                setShowGallery(false);\n                            }}\n                            refreshGallery={getGalleryImages}\n                            data={imagesData} />\n                        {/* GALLERY DIALOG BOX END */}\n                    </Grid>\n                    <hr />\n\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mt-2\">\n                        SEO Information\n                    </h4>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                required\n                                id=\"meta_title\"\n                                name=\"meta_title\"\n                                label=\"Meta Title\"\n                                value={room?.seo?.meta_title}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleSEOInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                required\n                                id=\"meta_description\"\n                                name=\"meta_description\"\n                                label=\"Meta Description\"\n                                value={room?.seo?.meta_description}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleSEOInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                required\n                                id=\"schema_markup\"\n                                name=\"schema_markup\"\n                                label=\"Schema Markup\"\n                                value={room?.seo?.schema_markup}\n                                variant=\"outlined\"\n                                fullWidth\n                                multiline\n                                rows={4}\n                                rowsMax={4}\n                                onChange={handleSEOInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        {/* <Grid item xs={12} sm={6}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup\n                                    aria-label=\"is_followed\"\n                                    row\n                                    defaultChecked\n                                    name=\"is_followed\"\n                                    value={room?.seo?.is_followed}\n                                    onChange={(e) => {\n                                        setRoom({ ...room, is_followed: !room.is_followed });\n                                    }}\n                                >\n                                    <FormControlLabel\n                                        value={true}\n                                        control={<Radio />}\n                                        label=\"Follow\"\n                                    />\n                                    <FormControlLabel\n                                        value={false}\n                                        control={<Radio />}\n                                        label=\"No Follow\"\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup\n                                    aria-label=\"is_indexed\"\n                                    row\n                                    defaultChecked\n                                    name=\"is_indexed\"\n                                    value={room.is_indexed}\n                                    onChange={(e) => {\n                                        setRoom({ ...room, is_indexed: !room.is_indexed });\n                                    }}\n                                >\n                                    <FormControlLabel\n                                        value={true}\n                                        control={<Radio />}\n                                        label=\"Index\"\n                                    />\n                                    <FormControlLabel\n                                        value={false}\n                                        control={<Radio />}\n                                        label=\"No Index\"\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid> */}\n                    </Grid>\n                </CardBody>\n            </Card>\n\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                    <MaterialButton\n                        onClick={handleSubmit}\n                        style={{ float: \"right\" }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                    >\n                        Submit\n                    </MaterialButton>\n                </Grid>\n            </Grid>\n        </div>\n    );\n});\n"]},"metadata":{},"sourceType":"module"}