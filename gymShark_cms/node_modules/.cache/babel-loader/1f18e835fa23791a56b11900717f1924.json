{"ast":null,"code":"import _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\src\\\\views\\\\Gallery\\\\List.jsx\";\nimport React, { Component } from \"react\";\nimport LangAPI from \"langapi/http\";\nimport API from \"utils/http\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { Avatar, Box, Card, FormControl, FormControlLabel, Grid, Radio, RadioGroup, TextField, Button } from \"@material-ui/core\";\nimport { CloudUploadOutlined, DeleteForever, DeleteOutlined, DeleteRounded, VisibilityOutlined, VisibilityRounded } from \"@material-ui/icons\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CardBody from \"components/Card/CardBody\";\nimport Lightbox from \"react-image-lightbox\";\nimport UpdateGalleryDialog from \"./UpdateGalleryDialog\";\n\nvar GalleryList = /*#__PURE__*/function (_Component) {\n  _inherits(GalleryList, _Component);\n\n  var _super = _createSuper(GalleryList);\n\n  function GalleryList() {\n    var _this;\n\n    _classCallCheck(this, GalleryList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showEditBox: false,\n      selectedImage: null,\n      mainSrc: null,\n      currentFiles: [],\n      gallery: [],\n      photoIndex: 0\n    };\n\n    _this.handleDelete = function (id) {\n      if (window.confirm(\"Are you sure you want to delete this ?\")) {\n        LangAPI[\"delete\"](\"/offers/\".concat(id)).then(function (response) {\n          if (response.status === 200) {\n            alert(\"Offer deleted successfully !\");\n          }\n        })[\"catch\"](function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.handleFileDrop = function (files) {\n      var updatedFiles = files.map(function (x) {\n        return {\n          image: x,\n          is360: false,\n          alt_text: \"\"\n        };\n      });\n      var currentFiles = [].concat(_toConsumableArray(_this.state.currentFiles), _toConsumableArray(updatedFiles));\n\n      _this.setState({\n        currentFiles: currentFiles\n      });\n    };\n\n    _this.handleImageAltChange = function (e, index) {\n      var updatedFiles = _toConsumableArray(_this.state.currentFiles);\n\n      updatedFiles[index].alt_text = e.target.value;\n\n      _this.setState({\n        currentFiles: updatedFiles\n      });\n    };\n\n    _this.handleMultipleSubmit = function () {\n      var imagesFormData = new FormData();\n\n      _this.state.currentFiles.forEach(function (x) {\n        imagesFormData.append(\"images[]\", x.image);\n        imagesFormData.append(\"data[]\", JSON.stringify(x));\n      });\n\n      console.log(\"imagesFormData :: \", imagesFormData);\n      LangAPI.post(\"/upload_media\", imagesFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data; boundary=\".concat(imagesFormData._boundary)\n        }\n      }).then(function (response) {\n        if (response.status === 200) {\n          var _response$data;\n\n          alert((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) || \"Success\");\n\n          _this.setState({\n            currentFiles: []\n          });\n        }\n      }).then(function () {\n        LangAPI.get(\"/uploads\").then(function (response) {\n          if (response.status === 200) {\n            _this.setState({\n              gallery: response.data.data\n            });\n\n            _this.setState({\n              mainSrc: response.data.data[0]\n            });\n          }\n        });\n      })[\"catch\"](function (err) {\n        return alert(\"Something went wrong\");\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      LangAPI[\"delete\"](\"/uploads/\".concat(id)).then(function (response) {\n        if (response.status === 200) {\n          alert(\"Image delete successfully.\"); // this.setState({currentFiles: []})\n        }\n      }).then(function () {\n        LangAPI.get(\"/uploads\").then(function (response) {\n          if (response.status === 200) {\n            _this.setState({\n              gallery: response.data.data\n            });\n\n            _this.setState({\n              mainSrc: response.data.data[0]\n            });\n          }\n        });\n      })[\"catch\"](function (err) {\n        return alert(\"Something went wrong\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GalleryList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      LangAPI.get(\"/uploads\").then(function (response) {\n        if (response.status === 200) {\n          _this2.setState({\n            gallery: response.data.data\n          }); // this.setState({ mainSrc: response.data.data[0] });\n\n\n          console.log(response.data.data);\n        }\n      })[\"catch\"](function (err) {\n        alert(\"SORRY ! Couldn't fetch gallery images, please try again by refreshing the page.\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$currentFi,\n          _this$state$currentFi2,\n          _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        marginBottom: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DropzoneArea // showPreviews={true}\n      , {\n        dropzoneClass: \"dropzone-wrapper-small\",\n        Icon: CloudUploadOutlined,\n        showAlerts: false,\n        acceptedFiles: [\"image/*\"],\n        filesLimit: 15,\n        showPreviewsInDropzone: false,\n        showFileNamesInPreview: false,\n        onDrop: this.handleFileDrop // useChipsForPreview\n        ,\n        dropzoneText: \"Drag and Drop Images here or simply click here\",\n        previewGridProps: {\n          container: {\n            spacing: 1,\n            direction: \"row\",\n            wrap: \"nowrap\",\n            style: {\n              overflowX: \"auto\",\n              padding: \"1rem\"\n            }\n          },\n          item: {\n            xs: 3\n          }\n        } // previewChipProps={}\n        ,\n        previewText: \"Selected files\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      })), ((_this$state$currentFi = this.state.currentFiles) === null || _this$state$currentFi === void 0 ? void 0 : _this$state$currentFi.length) > 0 && /*#__PURE__*/React.createElement(Box, {\n        marginBottom: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        type: \"post\",\n        encType: \"multipart/form-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, \"Selected Images\"), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }, (_this$state$currentFi2 = this.state.currentFiles) === null || _this$state$currentFi2 === void 0 ? void 0 : _this$state$currentFi2.map(function (x, i) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          sm: 1,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          src: URL.createObjectURL(x.image),\n          alt: x.alt_text || \"\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          sm: 5,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          required: true,\n          id: \"alt_text\".concat(i),\n          name: \"alt_text\",\n          label: \"Image Alt Text\",\n          value: x.alt_text,\n          variant: \"outlined\",\n          fullWidth: true,\n          onChange: function onChange(e) {\n            return _this3.handleImageAltChange(e, i);\n          },\n          size: \"small\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 27\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          sm: 5,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormControl, {\n          component: \"fieldset\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(RadioGroup, {\n          \"aria-label\": \"is360\",\n          row: true,\n          defaultChecked: true,\n          name: \"is360\",\n          value: x.is360,\n          onChange: function onChange(e) {\n            _this3.setState({\n              currentFiles: _this3.state.currentFiles.map(function (y, ind) {\n                if (ind === i) {\n                  return _objectSpread(_objectSpread({}, y), {}, {\n                    is360: !y.is360\n                  });\n                } else {\n                  return y;\n                }\n              })\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(FormControlLabel, {\n          value: false,\n          control: /*#__PURE__*/React.createElement(Radio, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 42\n            }\n          }),\n          label: \"Regular/Slider\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(FormControlLabel, {\n          value: true,\n          control: /*#__PURE__*/React.createElement(Radio, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 42\n            }\n          }),\n          label: /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 35\n            }\n          }, \"360\", /*#__PURE__*/React.createElement(\"sup\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 40\n            }\n          }, \"o\"), \" View\"),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 31\n          }\n        })))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          sm: 1,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: function onClick() {\n            return _this3.setState({\n              currentFiles: _toConsumableArray(_this3.state.currentFiles.filter(function (z, index) {\n                return index !== i;\n              }))\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }\n        }))));\n      }), this.state.currentFiles.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        color: \"primary\",\n        onClick: this.handleMultipleSubmit,\n        style: {\n          \"float\": \"right\",\n          marginTop: \"1rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }\n      }, \"Upload New Images\"))))))), /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GridList, {\n        cellHeight: 150,\n        className: \"\",\n        spacing: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }\n      }, this.state.gallery.map(function (tile, index) {\n        return /*#__PURE__*/React.createElement(GridListTile, {\n          className: \"gallery-tile\",\n          cols: 0.4,\n          key: tile.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: tile.avatar,\n          alt: tile.alt_tag,\n          onClick: function onClick() {\n            _this3.setState({\n              selectedImage: _this3.state.gallery[index]\n            });\n\n            _this3.setState({\n              showEditBox: true\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(GridListTileBar, {\n          title: /*#__PURE__*/React.createElement(\"small\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 26\n            }\n          }, tile.alt_tag) // subtitle={<span>by: {tile.author}</span>}\n          ,\n          actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n            \"aria-label\": \"info about \".concat(tile.alt_tag),\n            onClick: function onClick() {\n              return _this3.handleDelete(tile.id);\n            },\n            className: \"\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(DeleteRounded, {\n            fontSize: \"small\",\n            color: \"secondary\",\n            style: {\n              color: \"rgba(255,255,255,0.7)\"\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 23\n            }\n          })),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(UpdateGalleryDialog, {\n        open: this.state.showEditBox,\n        onClose: function onClose() {\n          return _this3.setState({\n            showEditBox: false\n          });\n        },\n        image: this.state.selectedImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return GalleryList;\n}(Component);\n\nexport default GalleryList;","map":{"version":3,"sources":["E:/laragon/www/Prism/bafco_cms/src/views/Gallery/List.jsx"],"names":["React","Component","LangAPI","API","DropzoneArea","Avatar","Box","Card","FormControl","FormControlLabel","Grid","Radio","RadioGroup","TextField","Button","CloudUploadOutlined","DeleteForever","DeleteOutlined","DeleteRounded","VisibilityOutlined","VisibilityRounded","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","CardBody","Lightbox","UpdateGalleryDialog","GalleryList","state","showEditBox","selectedImage","mainSrc","currentFiles","gallery","photoIndex","handleDelete","id","window","confirm","then","response","status","alert","err","console","log","handleFileDrop","files","updatedFiles","map","x","image","is360","alt_text","setState","handleImageAltChange","e","index","target","value","handleMultipleSubmit","imagesFormData","FormData","forEach","append","JSON","stringify","post","headers","_boundary","data","message","get","container","spacing","direction","wrap","style","overflowX","padding","item","xs","length","i","URL","createObjectURL","y","ind","filter","z","marginTop","tile","avatar","alt_tag","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport LangAPI from \"langapi/http\";\nimport API from \"utils/http\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport {\n  Avatar,\n  Box,\n  Card,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  CloudUploadOutlined,\n  DeleteForever,\n  DeleteOutlined,\n  DeleteRounded,\n  VisibilityOutlined,\n  VisibilityRounded,\n} from \"@material-ui/icons\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CardBody from \"components/Card/CardBody\";\nimport Lightbox from \"react-image-lightbox\";\nimport UpdateGalleryDialog from \"./UpdateGalleryDialog\";\n\nclass GalleryList extends Component {\n  state = {\n    showEditBox: false,\n    selectedImage: null,\n    mainSrc: null,\n    currentFiles: [],\n    gallery: [],\n    photoIndex: 0,\n  };\n\n  componentDidMount() {\n    LangAPI.get(\"/uploads\")\n      .then((response) => {\n        if (response.status === 200) {\n          this.setState({ gallery: response.data.data });\n          // this.setState({ mainSrc: response.data.data[0] });\n          console.log(response.data.data)\n        }\n      })\n      .catch((err) => {\n        alert(\n          \"SORRY ! Couldn't fetch gallery images, please try again by refreshing the page.\"\n        );\n      });\n  }\n\n  handleDelete = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this ?\")) {\n      LangAPI.delete(`/offers/${id}`)\n        .then((response) => {\n          if (response.status === 200) {\n            alert(\"Offer deleted successfully !\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  handleFileDrop = (files) => {\n    let updatedFiles = files.map((x) => ({\n      image: x,\n      is360: false,\n      alt_text: \"\",\n    }));\n    let currentFiles = [...this.state.currentFiles, ...updatedFiles];\n    this.setState({ currentFiles });\n  };\n\n  handleImageAltChange = (e, index) => {\n    let updatedFiles = [...this.state.currentFiles];\n    updatedFiles[index].alt_text = e.target.value;\n    this.setState({ currentFiles: updatedFiles });\n  };\n\n  handleMultipleSubmit = () => {\n    let imagesFormData = new FormData();\n    this.state.currentFiles.forEach((x) => {\n      imagesFormData.append(\"images[]\", x.image);\n      imagesFormData.append(\"data[]\", JSON.stringify(x));\n    });\n    console.log(\"imagesFormData :: \", imagesFormData);\n    LangAPI.post(`/upload_media`, imagesFormData, {\n      headers: {\n        \"Content-Type\": `multipart/form-data; boundary=${imagesFormData._boundary}`,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          alert(response?.data?.message || \"Success\");\n          this.setState({ currentFiles: [] });\n        }\n      })\n      .then(() => {\n        LangAPI.get(\"/uploads\").then((response) => {\n          if (response.status === 200) {\n            this.setState({ gallery: response.data.data });\n            this.setState({ mainSrc: response.data.data[0] });\n          }\n        });\n      })\n      .catch((err) => alert(\"Something went wrong\"));\n  };\n\n  handleDelete = (id) => {\n    LangAPI.delete(`/uploads/${id}`)\n      .then((response) => {\n        if (response.status === 200) {\n          alert(\"Image delete successfully.\");\n          // this.setState({currentFiles: []})\n        }\n      })\n      .then(() => {\n        LangAPI.get(\"/uploads\").then((response) => {\n          if (response.status === 200) {\n            this.setState({ gallery: response.data.data });\n            this.setState({ mainSrc: response.data.data[0] });\n          }\n        });\n      })\n      .catch((err) => alert(\"Something went wrong\"));\n  };\n\n  render() {\n    return (\n      <div>\n        {/* <h2 className=\"text-center main-title mb-4\">Gallery</h2> */}\n\n        <Box marginBottom={4}>\n          <DropzoneArea\n            // showPreviews={true}\n            dropzoneClass=\"dropzone-wrapper-small\"\n            Icon={CloudUploadOutlined}\n            showAlerts={false}\n            acceptedFiles={[\"image/*\"]}\n            filesLimit={15}\n            showPreviewsInDropzone={false}\n            showFileNamesInPreview={false}\n            onDrop={this.handleFileDrop}\n            // useChipsForPreview\n            dropzoneText=\"Drag and Drop Images here or simply click here\"\n            previewGridProps={{\n              container: {\n                spacing: 1,\n                direction: \"row\",\n                wrap: \"nowrap\",\n                style: { overflowX: \"auto\", padding: \"1rem\" },\n              },\n              item: { xs: 3 },\n            }}\n            // previewChipProps={}\n            previewText=\"Selected files\"\n          />\n        </Box>\n        {this.state.currentFiles?.length > 0 && (\n          <Box marginBottom={4}>\n            <Card>\n              <CardBody>\n                <form type=\"post\" encType=\"multipart/form-data\">\n                  <h4 className=\"mb-4\">Selected Images</h4>\n                  <Grid container spacing={2}>\n                    {this.state.currentFiles?.map((x, i) => (\n                      <>\n                        <Grid item xs={12} sm={1}>\n                          <Avatar\n                            src={URL.createObjectURL(x.image)}\n                            alt={x.alt_text || \"\"}\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={5}>\n                          <TextField\n                            required\n                            id={`alt_text${i}`}\n                            name=\"alt_text\"\n                            label=\"Image Alt Text\"\n                            value={x.alt_text}\n                            variant=\"outlined\"\n                            fullWidth\n                            onChange={(e) => this.handleImageAltChange(e, i)}\n                            size=\"small\"\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={5}>\n                          <FormControl component=\"fieldset\">\n                            <RadioGroup\n                              aria-label=\"is360\"\n                              row\n                              defaultChecked\n                              name=\"is360\"\n                              value={x.is360}\n                              onChange={(e) => {\n                                this.setState({\n                                  currentFiles: this.state.currentFiles.map(\n                                    (y, ind) => {\n                                      if (ind === i) {\n                                        return { ...y, is360: !y.is360 };\n                                      } else {\n                                        return y;\n                                      }\n                                    }\n                                  ),\n                                });\n                              }}\n                            >\n                              <FormControlLabel\n                                value={false}\n                                control={<Radio />}\n                                label=\"Regular/Slider\"\n                              />\n                              <FormControlLabel\n                                value={true}\n                                control={<Radio />}\n                                label={\n                                  <span>\n                                    360<sup>o</sup> View\n                                  </span>\n                                }\n                              />\n                            </RadioGroup>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={1}>\n                          <Button\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                              this.setState({\n                                currentFiles: [\n                                  ...this.state.currentFiles.filter(\n                                    (z, index) => index !== i\n                                  ),\n                                ],\n                              })\n                            }\n                          >\n                            <DeleteOutlined />\n                          </Button>\n                        </Grid>\n                      </>\n                    ))}\n                    {this.state.currentFiles.length > 0 && (\n                      <Grid item xs={12} sm={12}>\n                        <Button\n                          variant=\"contained\"\n                          size=\"large\"\n                          color=\"primary\"\n                          onClick={this.handleMultipleSubmit}\n                          style={{ float: \"right\", marginTop: \"1rem\" }}\n                        >\n                          Upload New Images\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                </form>\n              </CardBody>\n            </Card>\n          </Box>\n        )}\n        <Box>\n          <GridList cellHeight={150} className=\"\" spacing={10}>\n            {this.state.gallery.map((tile, index) => (\n              <GridListTile className=\"gallery-tile\" cols={0.4} key={tile.id}>\n                <img\n                  src={tile.avatar}\n                  alt={tile.alt_tag}\n                  onClick={() => {\n                    this.setState({ selectedImage: this.state.gallery[index] });\n                    this.setState({ showEditBox: true });\n                  }}\n                />\n                <GridListTileBar\n                  title={<small>{tile.alt_tag}</small>}\n                  // subtitle={<span>by: {tile.author}</span>}\n                  actionIcon={\n                    <IconButton\n                      aria-label={`info about ${tile.alt_tag}`}\n                      onClick={() => this.handleDelete(tile.id)}\n                      className=\"\"\n                    >\n                      <DeleteRounded\n                        fontSize=\"small\"\n                        color=\"secondary\"\n                        style={{ color: \"rgba(255,255,255,0.7)\" }}\n                      />\n                    </IconButton>\n                  }\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </Box>\n        <Box>\n          <UpdateGalleryDialog\n            open={this.state.showEditBox}\n            onClose={() => this.setState({ showEditBox: false })}\n            image={this.state.selectedImage}\n          />\n        </Box>\n      </div>\n    );\n  }\n}\n\nexport default GalleryList;\n"]},"metadata":{},"sourceType":"module"}