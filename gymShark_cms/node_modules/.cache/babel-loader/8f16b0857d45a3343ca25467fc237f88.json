{"ast":null,"code":"import _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\src\\\\views\\\\Common\\\\GalleryDialog.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent'; // import DialogContentText from '@material-ui/core/DialogContentText';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Avatar, Box, Card, Checkbox, FormControl, FormControlLabel, FormGroup, Grid, Radio, RadioGroup } from '@material-ui/core';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { CloudUploadOutlined, DeleteOutlined } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport API from 'langapi/http';\nexport default function GalleryDialog(props) {\n  var _this = this,\n      _props$data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentFiles = _useState2[0],\n      setCurrentFiles = _useState2[1]; // useMemo(() => {\n  //     if (props.data !== undefined && props.selectedData !== undefined)\n  //         if (props.data.length > 0 && props.selectedData.length > 0) {\n  //             props.data.map(x => {\n  //                 props.selectedData.filter(d => {\n  //                     if (d === x.id) {\n  //                         x.isChecked = true\n  //                     }\n  //                 })\n  //                 return x\n  //             })\n  //         }\n  // }, [props])\n\n\n  var handleFileDrop = function handleFileDrop(files) {\n    var updatedFiles = files.map(function (x) {\n      return {\n        image: x,\n        is360: false,\n        alt_text: \"\"\n      };\n    });\n\n    if (currentFiles.length > 0) {\n      setCurrentFiles([].concat(_toConsumableArray(currentFiles), _toConsumableArray(updatedFiles)));\n    } else {\n      setCurrentFiles(updatedFiles);\n    }\n  };\n\n  var handleImageAltChange = function handleImageAltChange(e, index) {\n    var updatedFiles = _toConsumableArray(currentFiles);\n\n    updatedFiles[index].alt_text = e.target.value;\n    setCurrentFiles(updatedFiles);\n  };\n\n  var handleMultipleSubmit = function handleMultipleSubmit() {\n    var imagesFormData = new FormData();\n    console.log(\"imagesFormData :: \", currentFiles);\n    currentFiles.forEach(function (x) {\n      imagesFormData.append(\"images[]\", x.image);\n      imagesFormData.append(\"data[]\", JSON.stringify(x));\n    });\n    API.post(\"/uploads\", imagesFormData, {\n      headers: {\n        'Content-Type': \"multipart/form-data; boundary=\".concat(imagesFormData._boundary)\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Files Uploaded\");\n        setCurrentFiles([]);\n        props.refreshGallery();\n      }\n    })[\"catch\"](function (err) {\n      return alert(\"Something went wrong\");\n    });\n  }; // const getCheckedValue = (checked) => {\n  //     if (props.isSingle) {\n  //         return props.isSingle && checked\n  //     } else if(props.isBanner){\n  //         return props.isBanner && checked\n  //     }else{\n  //         return !props.isSingle && !props.isBanner && checked\n  //     }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Select Images\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-fallery-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"If the image you are looking for is not in gallery, then add it here first.\"), /*#__PURE__*/React.createElement(DropzoneArea // showPreviews={true}\n  , {\n    dropzoneClass: \"dropzone-wrapper-small\",\n    Icon: CloudUploadOutlined,\n    showAlerts: false,\n    acceptedFiles: ['image/*'],\n    filesLimit: 15,\n    showPreviewsInDropzone: false,\n    showFileNamesInPreview: false,\n    onDrop: handleFileDrop // useChipsForPreview\n    ,\n    dropzoneText: \"Drag and Drop Images here or simply click here\",\n    previewGridProps: {\n      container: {\n        spacing: 1,\n        direction: 'row',\n        wrap: 'nowrap',\n        style: {\n          overflowX: 'auto',\n          padding: '1rem'\n        }\n      },\n      item: {\n        xs: 3\n      }\n    } // previewChipProps={}\n    ,\n    previewText: \"Selected files\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  })), currentFiles.length > 0 && /*#__PURE__*/React.createElement(Box, {\n    marginBottom: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    type: \"post\",\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 45\n    }\n  }, currentFiles.map(function (x, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: URL.createObjectURL(x.image),\n      alt: x.alt_text || \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"alt_text\".concat(i),\n      name: \"alt_text\",\n      label: \"Image Alt Text\",\n      value: x.alt_text,\n      variant: \"outlined\",\n      fullWidth: true,\n      onChange: function onChange(e) {\n        return handleImageAltChange(e, i);\n      },\n      size: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(RadioGroup, {\n      \"aria-label\": \"is360\",\n      row: true,\n      defaultChecked: true,\n      name: \"is360\",\n      value: x.is360,\n      onChange: function onChange(e) {\n        setCurrentFiles(currentFiles.map(function (y, ind) {\n          if (ind === i) {\n            return _objectSpread(_objectSpread({}, y), {}, {\n              is360: !y.is360\n            });\n          } else {\n            return y;\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: false,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 114\n        }\n      }),\n      label: \"Regular/Slider\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: true,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 113\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 131\n        }\n      }, \"360\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 140\n        }\n      }, \"o\"), \" View\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 73\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setCurrentFiles(_toConsumableArray(currentFiles.filter(function (z, index) {\n          return index !== i;\n        })));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 69\n      }\n    }))));\n  }), currentFiles.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleMultipleSubmit,\n    style: {\n      \"float\": 'right',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 57\n    }\n  }, \"Upload New Images\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-wrap gallery-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.map(function (x, index) {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      style: {\n        width: '25%',\n        margin: 0\n      },\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: x.isChecked,\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(e) {\n          return props.handleImageSelect(e, index, props.section);\n        },\n        color: \"primary\",\n        icon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '150px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 193\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"img-thumbnail\",\n          width: \"100%\",\n          style: {\n            height: '100%',\n            objectFit: 'cover'\n          },\n          src: x.avatar,\n          alt: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 41\n          }\n        })),\n        checkedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            height: '150px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"img-thumbnail\",\n          width: \"100%\",\n          src: x.avatar,\n          alt: \"\",\n          style: {\n            height: '100%',\n            objectFit: 'cover'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"img-checked\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 45\n          }\n        })),\n        name: \"image\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 46\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleClose,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, \"Done\"))));\n}","map":{"version":3,"sources":["E:/laragon/www/Prism/bafco_cms/src/views/Common/GalleryDialog.js"],"names":["React","useEffect","useMemo","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Avatar","Box","Card","Checkbox","FormControl","FormControlLabel","FormGroup","Grid","Radio","RadioGroup","DropzoneArea","CloudUploadOutlined","DeleteOutlined","CardBody","API","GalleryDialog","props","currentFiles","setCurrentFiles","handleFileDrop","files","updatedFiles","map","x","image","is360","alt_text","length","handleImageAltChange","e","index","target","value","handleMultipleSubmit","imagesFormData","FormData","console","log","forEach","append","JSON","stringify","post","headers","_boundary","then","response","status","alert","refreshGallery","err","open","handleClose","container","spacing","direction","wrap","style","overflowX","padding","item","xs","i","URL","createObjectURL","y","ind","filter","z","marginTop","data","width","margin","isChecked","handleImageSelect","section","height","objectFit","avatar"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Avatar, Box, Card, Checkbox, FormControl, FormControlLabel, FormGroup, Grid, Radio, RadioGroup } from '@material-ui/core';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { CloudUploadOutlined, DeleteOutlined } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport API from 'langapi/http';\n\nexport default function GalleryDialog(props) {\n    const [currentFiles, setCurrentFiles] = useState([]);\n\n    // useMemo(() => {\n    //     if (props.data !== undefined && props.selectedData !== undefined)\n    //         if (props.data.length > 0 && props.selectedData.length > 0) {\n    //             props.data.map(x => {\n    //                 props.selectedData.filter(d => {\n    //                     if (d === x.id) {\n    //                         x.isChecked = true\n    //                     }\n    //                 })\n    //                 return x\n    //             })\n    //         }\n    // }, [props])\n\n    const handleFileDrop = (files) => {\n        let updatedFiles = files.map(x => (\n            {\n                image: x,\n                is360: false,\n                alt_text: \"\"\n            }\n        ));\n\n        if (currentFiles.length > 0) {\n            setCurrentFiles([...currentFiles, ...updatedFiles]);\n        } else {\n            setCurrentFiles(updatedFiles);\n        }\n    }\n\n    const handleImageAltChange = (e, index) => {\n        let updatedFiles = [...currentFiles];\n        updatedFiles[index].alt_text = e.target.value;\n        setCurrentFiles(updatedFiles)\n    }\n\n    const handleMultipleSubmit = () => {\n        let imagesFormData = new FormData();\n        console.log(\"imagesFormData :: \", currentFiles);\n        currentFiles.forEach(x => {\n            imagesFormData.append(\"images[]\", x.image);\n            imagesFormData.append(\"data[]\", JSON.stringify(x))\n        })\n        API.post(`/uploads`, imagesFormData, {\n            headers: {\n                'Content-Type': `multipart/form-data; boundary=${imagesFormData._boundary}`,\n            }\n        }).then(response => {\n            if (response.status === 200) {\n                alert(\"Files Uploaded\");\n                setCurrentFiles([]);\n                props.refreshGallery();\n            }\n        }).catch(err => alert(\"Something went wrong\"));\n    }\n\n    // const getCheckedValue = (checked) => {\n    //     if (props.isSingle) {\n    //         return props.isSingle && checked\n    //     } else if(props.isBanner){\n    //         return props.isBanner && checked\n    //     }else{\n    //         return !props.isSingle && !props.isBanner && checked\n    //     }\n    // }\n\n    return (\n        <div>\n            <Dialog open={props.open} onClose={props.handleClose} maxWidth=\"md\" fullWidth aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Images</DialogTitle>\n                <DialogContent>\n                    {/* <Grid container spacing={2}> */}\n                    <div className=\"add-fallery-wrapper\">\n                        <Box marginBottom={4}>\n                            <h6>If the image you are looking for is not in gallery, then add it here first.</h6>\n                            <DropzoneArea\n                                // showPreviews={true}\n                                dropzoneClass=\"dropzone-wrapper-small\"\n                                Icon={CloudUploadOutlined}\n                                showAlerts={false}\n                                acceptedFiles={['image/*']}\n                                filesLimit={15}\n                                showPreviewsInDropzone={false}\n                                showFileNamesInPreview={false}\n                                onDrop={handleFileDrop}\n                                // useChipsForPreview\n                                dropzoneText=\"Drag and Drop Images here or simply click here\"\n                                previewGridProps={{ container: { spacing: 1, direction: 'row', wrap: 'nowrap', style: { overflowX: 'auto', padding: '1rem' } }, item: { xs: 3 } }}\n                                // previewChipProps={}\n                                previewText=\"Selected files\"\n                            />\n                        </Box>\n                        {\n                            currentFiles.length > 0 &&\n                            <Box marginBottom={4}>\n                                <Card>\n                                    <CardBody>\n                                        <form type=\"post\" encType=\"multipart/form-data\">\n\n                                            <Grid container spacing={1}>\n\n                                                {\n                                                    currentFiles.map((x, i) => (\n                                                        <>\n                                                            <Grid item xs={12} sm={1}>\n                                                                <Avatar src={URL.createObjectURL(x.image)} alt={x.alt_text || \"\"} />\n                                                            </Grid>\n                                                            <Grid item xs={12} sm={5}>\n                                                                <TextField\n                                                                    required\n                                                                    id={`alt_text${i}`}\n                                                                    name=\"alt_text\"\n                                                                    label=\"Image Alt Text\"\n                                                                    value={x.alt_text}\n                                                                    variant=\"outlined\"\n                                                                    fullWidth\n                                                                    onChange={(e) => handleImageAltChange(e, i)}\n                                                                    size=\"small\"\n                                                                />\n                                                            </Grid>\n                                                            <Grid item xs={12} sm={5}>\n                                                                <FormControl component=\"fieldset\">\n                                                                    <RadioGroup aria-label=\"is360\" row defaultChecked name=\"is360\" value={x.is360} onChange={(e) => {\n                                                                        setCurrentFiles(\n                                                                            currentFiles.map((y, ind) => {\n                                                                                if (ind === i) {\n                                                                                    return { ...y, is360: !y.is360 }\n                                                                                } else {\n                                                                                    return y\n                                                                                }\n                                                                            })\n                                                                        )\n                                                                    }}>\n                                                                        <FormControlLabel value={false} control={<Radio />} label=\"Regular/Slider\" />\n                                                                        <FormControlLabel value={true} control={<Radio />} label={<span>360<sup>o</sup> View</span>} />\n                                                                    </RadioGroup>\n                                                                </FormControl>\n                                                            </Grid>\n                                                            <Grid item xs={12} sm={1}>\n                                                                <Button variant=\"outlined\" color=\"secondary\"\n                                                                    onClick={() => setCurrentFiles([...currentFiles.filter((z, index) => index !== i)])}>\n                                                                    <DeleteOutlined />\n                                                                </Button>\n                                                            </Grid>\n                                                        </>\n                                                    ))\n                                                }\n                                                {\n                                                    currentFiles.length > 0 &&\n                                                    <Grid item xs={12} sm={12}>\n                                                        <Button variant=\"contained\" size=\"small\" color=\"primary\"\n                                                            onClick={handleMultipleSubmit} style={{ float: 'right', marginTop: '1rem' }} >\n                                                            Upload New Images\n                                                        </Button>\n                                                    </Grid>\n                                                }\n                                            </Grid>\n                                        </form>\n                                    </CardBody>\n                                </Card>\n                            </Box>\n                        }\n                    </div>\n                    <div className=\"d-flex flex-wrap gallery-grid\">\n                        {\n                            props.data?.map((x, index) => (\n                                <FormControlLabel\n                                    style={{ width: '25%', margin: 0 }}\n                                    control={<Checkbox checked={x.isChecked} style={{ width: '100%' }} onChange={(e) => props.handleImageSelect(e, index, props.section)} color=\"primary\" icon={<div style={{ width: '100%', height: '150px' }}>\n                                        <img className=\"img-thumbnail\" width=\"100%\" style={{ height: '100%', objectFit: 'cover' }} src={x.avatar} alt=\"\" />\n                                    </div>} checkedIcon={\n                                        <div style={{ width: '100%', height: '150px' }}>\n                                            <img className=\"img-thumbnail\" width=\"100%\" src={x.avatar} alt=\"\" style={{ height: '100%', objectFit: 'cover' }} />\n                                            <div className=\"img-checked\"></div>\n                                        </div>\n                                    } name=\"image\" />}\n                                />\n                            ))\n                        }\n                    </div>\n                    {/* </Grid> */}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} variant=\"contained\" color=\"primary\">\n                        Done\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}