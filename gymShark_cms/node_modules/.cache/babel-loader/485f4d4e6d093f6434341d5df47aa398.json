{"ast":null,"code":"import _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymshark_cms\\\\src\\\\views\\\\SpaWellness\\\\Add.js\";\nimport React, { Fragment, useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // core components\n// import GridItem from \"components/Grid/GridItem.js\";\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport avatar from \"assets/img/faces/marc.jpg\";\nimport { MenuItem, Select, FormControl, TextField, RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { ckEditorConfig } from \"utils/data\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@arslanshahab/ckeditor5-build-classic';\nimport { Image } from \"@material-ui/icons\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1 // width:'60%',\n      // margin:'auto'\n\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default function SpaWellnessAdd() {\n  var classes = useStyles();\n\n  var _useState = useState({\n    post_name: '',\n    post_content: \"<p>Detailed content goes here!</p>\",\n    short_description: \"<p>Short description goes here!</p>\",\n    category_id: -1,\n    thumbnail: '',\n    alt_text: '',\n    meta_title: '',\n    meta_description: '',\n    schema_markup: '',\n    permalink: '',\n    is_followed: true,\n    is_indexed: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      spaWellness = _useState2[0],\n      setSpaWellness = _useState2[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    var updatedSpaWellness = _objectSpread({}, spaWellness);\n\n    updatedSpaWellness[e.target.name] = e.target.value;\n    setSpaWellness(updatedSpaWellness);\n  };\n\n  var handleFileChange = function handleFileChange(e) {\n    var files = e.target.files || e.dataTransfer.files;\n    if (!files.length) return;\n    createImage(files[0]);\n  };\n\n  var createImage = function createImage(file) {\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setSpaWellness(_objectSpread(_objectSpread({}, spaWellness), {}, {\n        thumbnail: e.target.result\n      }));\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Add SpaWellness Activity\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"General Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"post_name\",\n    name: \"post_name\",\n    label: \"Name\",\n    value: spaWellness.post_name,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"alt_text\",\n    name: \"alt_text\",\n    label: \"Image Alt Text\",\n    value: spaWellness.alt_text,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    color: \"primary\",\n    accept: \"image/*\",\n    type: \"file\",\n    onChange: handleFileChange,\n    id: \"thumbnail\",\n    name: \"thumbnail\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    className: classes.button,\n    size: \"large\",\n    color: \"primary\",\n    style: {\n      margin: 0,\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: classes.extendedIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  }), \" Upload Featured Image\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"room_type-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"room_type-label\",\n    id: \"room_type\",\n    name: \"room_type\",\n    value: spaWellness.room_type,\n    onChange: handleInputChange,\n    label: \"Type\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 23\n    }\n  }, \"Select\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"SpaWellness\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Suite\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"category_id-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"category_id-label\",\n    id: \"category_id\",\n    name: \"category_id\",\n    value: spaWellness.category_id,\n    onChange: handleInputChange,\n    label: \"Category\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }\n  }, \"Select\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, \"Family\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"Deluxe\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"Partial Ocean View\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, \"Full Ocean View\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Short Description\"), /*#__PURE__*/React.createElement(CKEditor, {\n    config: ckEditorConfig,\n    editor: ClassicEditor,\n    data: spaWellness.short_description // config={{\n    //   toolbar: ['bold', 'italic']\n    // }}\n    ,\n    onReady: function onReady(editor) {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n      editor.editing.view.change(function (writer) {\n        writer.setStyle(\"height\", \"150px\", editor.editing.view.document.getRoot());\n      });\n    },\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setSpaWellness(_objectSpread(_objectSpread({}, spaWellness), {}, {\n        short_description: data\n      }));\n    },\n    onBlur: function onBlur(event, editor) {\n      console.log('Blur.', editor);\n    },\n    onFocus: function onFocus(event, editor) {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Detailed Content\"), /*#__PURE__*/React.createElement(CKEditor, {\n    config: ckEditorConfig,\n    editor: ClassicEditor,\n    data: spaWellness.post_content // config={{\n    //   toolbar: ['bold', 'italic']\n    // }}\n    ,\n    onReady: function onReady(editor) {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n      editor.editing.view.change(function (writer) {\n        writer.setStyle(\"height\", \"150px\", editor.editing.view.document.getRoot());\n      });\n    },\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setSpaWellness(_objectSpread(_objectSpread({}, spaWellness), {}, {\n        post_content: data\n      }));\n    },\n    onBlur: function onBlur(event, editor) {\n      console.log('Blur.', editor);\n    },\n    onFocus: function onFocus(event, editor) {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"SEO Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"meta_title\",\n    name: \"meta_title\",\n    label: \"Meta Title\",\n    value: spaWellness.meta_title,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"meta_description\",\n    name: \"meta_description\",\n    label: \"Meta Description\",\n    value: spaWellness.meta_description,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"schema_markup\",\n    name: \"schema_markup\",\n    label: \"Schema Markup\",\n    value: spaWellness.schema_markup,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"permalink\",\n    name: \"permalink\",\n    label: \"Permalink\",\n    value: spaWellness.permalink,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"is_followed\",\n    row: true,\n    defaultChecked: true,\n    name: \"is_followed\",\n    value: spaWellness.is_followed,\n    onChange: function onChange(e) {\n      setSpaWellness(_objectSpread(_objectSpread({}, spaWellness), {}, {\n        is_followed: !spaWellness.is_followed\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: true,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 61\n      }\n    }),\n    label: \"Follow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: false,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 62\n      }\n    }),\n    label: \"No Follow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"is_indexed\",\n    row: true,\n    defaultChecked: true,\n    name: \"is_indexed\",\n    value: spaWellness.is_indexed,\n    onChange: function onChange(e) {\n      setSpaWellness(_objectSpread(_objectSpread({}, spaWellness), {}, {\n        is_indexed: !spaWellness.is_indexed\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: true,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 61\n      }\n    }),\n    label: \"Index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: false,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 62\n      }\n    }),\n    label: \"No Index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, \"SpaWellness Images\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"alt_text\",\n    name: \"alt_text\",\n    label: \"Image Alt Text\",\n    value: spaWellness.alt_text,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    color: \"primary\",\n    accept: \"image/*\",\n    type: \"file\",\n    onChange: handleInputChange,\n    id: \"thumbnail\",\n    name: \"thumbnail\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    className: classes.button,\n    size: \"large\",\n    color: \"primary\",\n    style: {\n      margin: 0,\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: classes.extendedIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 23\n    }\n  }), \" Upload Multiple Image\")))))))));\n}","map":{"version":3,"sources":["E:/laragon/www/Prism/gymShark/gymshark_cms/src/views/SpaWellness/Add.js"],"names":["React","Fragment","useState","makeStyles","InputLabel","Grid","Paper","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","avatar","MenuItem","Select","FormControl","TextField","RadioGroup","Radio","FormControlLabel","ckEditorConfig","CKEditor","ClassicEditor","Image","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","SpaWellnessAdd","classes","post_name","post_content","short_description","category_id","thumbnail","alt_text","meta_title","meta_description","schema_markup","permalink","is_followed","is_indexed","spaWellness","setSpaWellness","handleInputChange","e","updatedSpaWellness","target","name","value","handleFileChange","files","dataTransfer","length","createImage","file","reader","FileReader","onload","result","readAsDataURL","display","button","margin","height","extendedIcon","formControl","room_type","editor","console","log","editing","view","change","writer","setStyle","document","getRoot","event","data","getData"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// core components\n// import GridItem from \"components/Grid/GridItem.js\";\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport avatar from \"assets/img/faces/marc.jpg\";\nimport { MenuItem, Select, FormControl, TextField, RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\nimport { ckEditorConfig } from \"utils/data\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@arslanshahab/ckeditor5-build-classic';\nimport { Image } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // width:'60%',\n    // margin:'auto'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nexport default function SpaWellnessAdd() {\n  const classes = useStyles();\n  const [spaWellness, setSpaWellness] = useState({\n    post_name: '',\n    post_content: \"<p>Detailed content goes here!</p>\",\n    short_description: \"<p>Short description goes here!</p>\",\n    category_id: -1,\n    thumbnail:'',\n    alt_text: '',\n    meta_title: '',\n    meta_description: '',\n    schema_markup: '',\n    permalink: '',\n    is_followed: true,\n    is_indexed: true\n  })\n\n  const handleInputChange = (e) => {\n    let updatedSpaWellness = { ...spaWellness };\n    updatedSpaWellness[e.target.name] = e.target.value;\n    setSpaWellness(updatedSpaWellness);\n  }\n\n  const handleFileChange = (e) => {\n    let files = e.target.files || e.dataTransfer.files;\n    if (!files.length)\n      return;\n    createImage(files[0]);\n  }\n\n  const createImage = (file) => {\n    let reader = new FileReader();\n    reader.onload = (e) => {\n      setSpaWellness({ ...spaWellness, thumbnail: e.target.result })\n    };\n    reader.readAsDataURL(file);\n  }\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Card>\n          <CardHeader color=\"primary\">\n            <h4 className=\"mb-0\">Add SpaWellness Activity</h4>\n            {/* <p className={classes.cardCategoryWhite}>Complete your profile</p> */}\n          </CardHeader>\n          <CardBody>\n            <h4 className=\"mt-1\">General Information</h4>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  required\n                  id=\"post_name\"\n                  name=\"post_name\"\n                  label=\"Name\"\n                  value={spaWellness.post_name}\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"alt_text\"\n                  name=\"alt_text\"\n                  label=\"Image Alt Text\"\n                  value={spaWellness.alt_text}\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <Fragment>\n                  <input\n                    color=\"primary\"\n                    accept=\"image/*\"\n                    type=\"file\"\n                    onChange={handleFileChange}\n                    id=\"thumbnail\"\n                    name=\"thumbnail\"\n                    style={{ display: 'none', }}\n                  />\n                  <label htmlFor=\"thumbnail\">\n                    <Button\n                      variant=\"contained\"\n                      component=\"span\"\n                      className={classes.button}\n                      size=\"large\"\n                      color=\"primary\"\n                      style={{ margin: 0, height: '100%', }}\n                    >\n                      <Image className={classes.extendedIcon} /> Upload Featured Image\n                    </Button>\n                  </label>\n                </Fragment>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n                  <InputLabel id=\"room_type-label\">Type</InputLabel>\n                  <Select\n                    labelId=\"room_type-label\"\n                    id=\"room_type\"\n                    name=\"room_type\"\n                    value={spaWellness.room_type}\n                    onChange={handleInputChange}\n                    label=\"Type\"\n                    fullWidth\n                  >\n                    <MenuItem value={-1}>\n                      <em>Select</em>\n                    </MenuItem>\n                    <MenuItem value={1}>SpaWellness</MenuItem>\n                    <MenuItem value={2}>Suite</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n                  <InputLabel id=\"category_id-label\">Category</InputLabel>\n                  <Select\n                    labelId=\"category_id-label\"\n                    id=\"category_id\"\n                    name=\"category_id\"\n                    value={spaWellness.category_id}\n                    onChange={handleInputChange}\n                    label=\"Category\"\n                    fullWidth\n                  >\n                    <MenuItem value={-1}>\n                      <em>Select</em>\n                    </MenuItem>\n                    <MenuItem value={1}>Family</MenuItem>\n                    <MenuItem value={2}>Deluxe</MenuItem>\n                    <MenuItem value={3}>Partial Ocean View</MenuItem>\n                    <MenuItem value={4}>Full Ocean View</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <p>Short Description</p>\n                <CKEditor\n                    config={ckEditorConfig}\n                  editor={ClassicEditor}\n                  data={spaWellness.short_description}\n                  // config={{\n                  //   toolbar: ['bold', 'italic']\n                  // }}\n                  onReady={editor => {\n                    // You can store the \"editor\" and use when it is needed.\n                    console.log('Editor is ready to use!', editor);\n                    editor.editing.view.change(writer => {\n                      writer.setStyle(\n                        \"height\",\n                        \"150px\",\n                        editor.editing.view.document.getRoot()\n                      );\n                    });\n                  }}\n                  onChange={(event, editor) => {\n                    const data = editor.getData();\n                    setSpaWellness({ ...spaWellness, short_description: data })\n                  }}\n                  onBlur={(event, editor) => {\n                    console.log('Blur.', editor);\n                  }}\n                  onFocus={(event, editor) => {\n                    console.log('Focus.', editor);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <p>Detailed Content</p>\n                <CKEditor\n                    config={ckEditorConfig}\n                  editor={ClassicEditor}\n                  data={spaWellness.post_content}\n                  // config={{\n                  //   toolbar: ['bold', 'italic']\n                  // }}\n                  onReady={editor => {\n                    // You can store the \"editor\" and use when it is needed.\n                    console.log('Editor is ready to use!', editor);\n                    editor.editing.view.change(writer => {\n                      writer.setStyle(\n                        \"height\",\n                        \"150px\",\n                        editor.editing.view.document.getRoot()\n                      );\n                    });\n                  }}\n                  onChange={(event, editor) => {\n                    const data = editor.getData();\n                    setSpaWellness({ ...spaWellness, post_content: data })\n                  }}\n                  onBlur={(event, editor) => {\n                    console.log('Blur.', editor);\n                  }}\n                  onFocus={(event, editor) => {\n                    console.log('Focus.', editor);\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <h4 className=\"mt-2\">SEO Information</h4>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"meta_title\"\n                  name=\"meta_title\"\n                  label=\"Meta Title\"\n                  value={spaWellness.meta_title}\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"meta_description\"\n                  name=\"meta_description\"\n                  label=\"Meta Description\"\n                  value={spaWellness.meta_description}\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"schema_markup\"\n                  name=\"schema_markup\"\n                  label=\"Schema Markup\"\n                  value={spaWellness.schema_markup}\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"permalink\"\n                  name=\"permalink\"\n                  label=\"Permalink\"\n                  value={spaWellness.permalink}\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl component=\"fieldset\">\n                  <RadioGroup aria-label=\"is_followed\" row defaultChecked name=\"is_followed\" value={spaWellness.is_followed} onChange={(e) => {\n                    setSpaWellness({ ...spaWellness, is_followed: !spaWellness.is_followed })\n                  }}>\n                    <FormControlLabel value={true} control={<Radio />} label=\"Follow\" />\n                    <FormControlLabel value={false} control={<Radio />} label=\"No Follow\" />\n                  </RadioGroup>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl component=\"fieldset\">\n                  <RadioGroup aria-label=\"is_indexed\" row defaultChecked name=\"is_indexed\" value={spaWellness.is_indexed} onChange={(e) => {\n                    setSpaWellness({ ...spaWellness, is_indexed: !spaWellness.is_indexed })\n                  }}>\n                    <FormControlLabel value={true} control={<Radio />} label=\"Index\" />\n                    <FormControlLabel value={false} control={<Radio />} label=\"No Index\" />\n                  </RadioGroup>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n            <h3>SpaWellness Images</h3>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  id=\"alt_text\"\n                  name=\"alt_text\"\n                  label=\"Image Alt Text\"\n                  value={spaWellness.alt_text}\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <Fragment>\n                  <input\n                    color=\"primary\"\n                    accept=\"image/*\"\n                    type=\"file\"\n                    onChange={handleInputChange}\n                    id=\"thumbnail\"\n                    name=\"thumbnail\"\n                    style={{ display: 'none', }}\n                  />\n                  <label htmlFor=\"thumbnail\">\n                    <Button\n                      variant=\"contained\"\n                      component=\"span\"\n                      className={classes.button}\n                      size=\"large\"\n                      color=\"primary\"\n                      style={{ margin: 0, height: '100%', }}\n                    >\n                      <Image className={classes.extendedIcon} /> Upload Multiple Image\n                    </Button>\n                  </label>\n                </Fragment>\n              </Grid>\n            </Grid>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}