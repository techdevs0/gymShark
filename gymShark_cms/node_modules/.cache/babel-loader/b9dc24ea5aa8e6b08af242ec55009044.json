{"ast":null,"code":"import _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\src\\\\views\\\\Dashboard\\\\AddTodoDialog.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent'; // import DialogContentText from '@material-ui/core/DialogContentText';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Image } from '@material-ui/icons';\nimport API from 'utils/http';\nimport { Grid, FormControl, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\nexport default function AddTodoDialog(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      todo_name = _React$useState2[0],\n      setTodoName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      todo_description = _React$useState4[0],\n      setTodoDescription = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      is_read = _React$useState6[0],\n      setIsRead = _React$useState6[1];\n\n  var handleSubmit = function handleSubmit() {\n    API.post(\"/todo\", {\n      todo_name: todo_name,\n      todo_description: todo_description,\n      is_read: is_read\n    }).then(function (response) {\n      if (response.status === 200) {\n        var _response$data;\n\n        alert(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) || \"Success\");\n        props.success();\n        window.location.reload(true);\n      }\n    })[\"catch\"](function (err) {\n      return alert(\"Something went wrong\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Add Todo Task\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"todo_name\",\n    label: \"Task Name\",\n    type: \"text\",\n    fullWidth: true,\n    size: \"small\",\n    value: todo_name,\n    onChange: function onChange(e) {\n      return setTodoName(e.target.value);\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"todo_description\",\n    label: \"Description\",\n    type: \"text\",\n    fullWidth: true,\n    size: \"small\",\n    value: todo_description,\n    onChange: function onChange(e) {\n      return setTodoDescription(e.target.value);\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      marginTop: '1rem'\n    },\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"is_read\",\n    row: true,\n    defaultChecked: true,\n    name: \"is_read\",\n    value: is_read,\n    onChange: function onChange(e) {\n      setIsRead(!is_read);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: false,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 78\n      }\n    }),\n    label: \"Pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: true,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 77\n      }\n    }),\n    label: \"Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  })))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onClose,\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["E:/laragon/www/Prism/gymShark/gymShark_cms/src/views/Dashboard/AddTodoDialog.js"],"names":["React","Fragment","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Image","API","Grid","FormControl","FormControlLabel","Radio","RadioGroup","AddTodoDialog","props","useState","todo_name","setTodoName","todo_description","setTodoDescription","is_read","setIsRead","handleSubmit","post","then","response","status","alert","data","message","success","window","location","reload","err","open","handleClose","e","target","value","marginTop","onClose"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Image } from '@material-ui/icons';\nimport API from 'utils/http';\nimport { Grid, FormControl, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\n\nexport default function AddTodoDialog(props) {\n    const [todo_name, setTodoName] = React.useState(\"\");\n    const [todo_description, setTodoDescription] = React.useState(\"\");\n    const [is_read, setIsRead] = React.useState(false);\n\n    const handleSubmit = () => {\n        API.post(`/todo`, {\n            todo_name,\n            todo_description,\n            is_read \n        }).then(response => {\n            if (response.status === 200) {\n                alert(response.data?.message || \"Success\");\n                props.success();\n                window.location.reload(true);\n            }\n        }).catch(err => alert(\"Something went wrong\"));\n\n    }\n\n    return (\n        <div>\n            <Dialog open={props.open} onClose={props.handleClose} maxWidth=\"sm\" fullWidth aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Todo Task</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={5}>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                id=\"todo_name\"\n                                label=\"Task Name\"\n                                type=\"text\"\n                                fullWidth\n                                size=\"small\"\n                                value={todo_name}\n                                onChange={(e) => setTodoName(e.target.value)}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n\n                            <TextField\n                                id=\"todo_description\"\n                                label=\"Description\"\n                                type=\"text\"\n                                fullWidth\n                                size=\"small\"\n                                value={todo_description}\n                                onChange={(e) => setTodoDescription(e.target.value)}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n\n                            <FormControl style={{ marginTop: '1rem' }} component=\"fieldset\">\n                                <RadioGroup aria-label=\"is_read\" row defaultChecked name=\"is_read\" value={is_read} onChange={(e) => { setIsRead(!is_read) }}>\n                                    <FormControlLabel value={false} control={<Radio />} label=\"Pending\" />\n                                    <FormControlLabel value={true} control={<Radio />} label={\"Completed\"} />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.onClose} variant=\"contained\" color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n                        Submit\n                     </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}