{"ast":null,"code":"import _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymshark_cms\\\\src\\\\views\\\\SubCategories\\\\Add.js\";\nimport React, { Fragment, useEffect, useState } from \"react\"; //Suspense\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField } from \"@material-ui/core\";\nimport CKEditor from \"ckeditor4-react\";\nimport { Image } from \"@material-ui/icons\";\nimport LangAPI from \"langapi/http\";\nimport { useParams, withRouter, useLocation } from \"react-router-dom\";\nimport GalleryDialog from \"views/Common/GalleryDialog\";\nvar website_url = \"https://fishermanscove-resort.com/blog-inner/\";\nvar append_url = \"blog-inner\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default withRouter(function AddSubCategory(props) {\n  var _this = this,\n      _room$seo,\n      _room$seo2;\n\n  var _useLocation = useLocation(),\n      search = _useLocation.search;\n\n  var query = new URLSearchParams(search);\n  var lang = query.get('lang');\n  var classes = useStyles();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var initialObject = {\n    name: \"\",\n    sub_title: \"\",\n    description: \"\",\n    featured_image: \"\",\n    route: \"\",\n    parent_id: \"\",\n    seo: {\n      meta_title: \"\",\n      meta_description: \"\"\n    }\n  };\n\n  var _useState = useState(_objectSpread({}, initialObject)),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEdit = _useState4[0],\n      setIsEdit = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imagesData = _useState6[0],\n      setImagesData = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showGallery = _useState8[0],\n      setShowGallery = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isSingle = _useState10[0],\n      setIsSingle = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isAuthorImg = _useState12[0],\n      setIsAuthorImg = _useState12[1];\n\n  var _useState13 = useState(lang || \"en\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedLang = _useState14[0],\n      setSelectedLang = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      authorthumbnailPreview = _useState16[0],\n      setAuthorThumbnailPreview = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      thumbnailPreview = _useState18[0],\n      setThumbnailPreview = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isBanner = _useState20[0],\n      setIsBanner = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      bannerThumbnailPreview = _useState22[0],\n      setBannerThumbnailPreview = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      categories = _useState24[0],\n      setCategories = _useState24[1];\n\n  useEffect(function () {\n    if (id && id != null) {\n      setIsEdit(true);\n      LangAPI.get(\"/sub-categories/\".concat(id)).then(function (response) {\n        if (response.status === 200) {\n          var data = _objectSpread({}, response === null || response === void 0 ? void 0 : response.data);\n\n          console.log(\"response?.data?.data\", response === null || response === void 0 ? void 0 : response.data); // data.route = website_url + data.route;\n\n          if (response === null || response === void 0 ? void 0 : response.data) {\n            setRoom(_objectSpread(_objectSpread({}, room), data));\n          } else {\n            setRoom(_objectSpread({}, initialObject));\n          }\n        }\n      });\n    }\n\n    if (!imagesData.length > 0) {\n      getGalleryImages();\n    }\n\n    LangAPI.get(\"/categories\").then(function (response) {\n      if (response.status === 200) {\n        console.log(\"response?.data?.data\", response === null || response === void 0 ? void 0 : response.data);\n        setCategories(response === null || response === void 0 ? void 0 : response.data);\n      }\n    });\n  }, [selectedLang]);\n\n  var getGalleryImages = function getGalleryImages() {\n    LangAPI.get(\"/files\").then(function (response) {\n      if (response.status === 200) {\n        var _response$data;\n\n        setImagesData((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.map(function (x) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: false\n          });\n        }));\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    updatedRoom[e.target.name] = e.target.value;\n    setRoom(updatedRoom);\n  };\n\n  var handleInputChangeSEO = function handleInputChangeSEO(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    if (!updatedRoom.seo) {\n      updatedRoom.seo = {\n        meta_title: \"\",\n        meta_description: \"\"\n      };\n    }\n\n    updatedRoom.seo[e.target.name] = e.target.value;\n    setRoom(updatedRoom);\n  };\n\n  var handleSlugChange = function handleSlugChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    var updatedValue = e.target.value.replace(/\\s+/g, \"-\");\n    updatedValue = updatedValue.replace(/--/g, \"-\");\n    updatedRoom[e.target.name] = updatedValue.toLowerCase();\n    setRoom(updatedRoom);\n  };\n\n  var handleImageSelect = function handleImageSelect(e, index) {\n    if (e.target.checked) {\n      if (isSingle && !isBanner && !isAuthorImg) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          featured_image: imagesData[index].avatar\n        }));\n        setThumbnailPreview(imagesData[index].avatar);\n        setTimeout(function () {\n          setShowGallery(false);\n        }, 500);\n      } else if (isBanner && !isSingle && !isAuthorImg) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          banner_img: imagesData[index].avatar\n        }));\n        setBannerThumbnailPreview(imagesData[index].avatar);\n        setTimeout(function () {\n          setShowGallery(false);\n        }, 500);\n      } else if (isAuthorImg && !isSingle && !isBanner) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          author_img: imagesData[index].avatar\n        }));\n        setAuthorThumbnailPreview(imagesData[index].avatar);\n        setTimeout(function () {\n          setShowGallery(false);\n        }, 500);\n      }\n\n      var imagesDataUpdated = imagesData.map(function (x, i) {\n        if (i === index) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: true\n          });\n        } else {\n          return x;\n        }\n      });\n      setImagesData(imagesDataUpdated); // }\n    } else {\n      if (isSingle && !isBanner && !isAuthorImg) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          featured_image: \"\"\n        }));\n        setThumbnailPreview(\"\");\n      } else if (isBanner && !isSingle && !isAuthorImg) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          banner_img: \"\"\n        }));\n        setBannerThumbnailPreview(\"\");\n      } else if (isAuthorImg && !isSingle && !isBanner) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          author_img: \"\"\n        }));\n        setAuthorThumbnailPreview(\"\");\n      }\n\n      setImagesData(imagesData.map(function (x, i) {\n        if (i === index) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: false\n          });\n        } else {\n          return x;\n        }\n      }));\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var finalRoom = room;\n\n    if (finalRoom.child) {\n      delete finalRoom.child;\n    }\n\n    if (finalRoom.created_at) {\n      delete finalRoom.created_at;\n    }\n\n    if (finalRoom.updated_at) {\n      delete finalRoom.updated_at;\n    } // console.log(\"finalRoom\",finalRoom) ;return false\n\n\n    if (!finalRoom.name || finalRoom.name == \"\") {\n      alert(\"Please Enter name before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.sub_title || finalRoom.sub_title == \"\") {\n      alert(\"Please Enter Sub name before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.route || finalRoom.route == \"\") {\n      alert(\"Please Enter route before Submiting\");\n      return false;\n    }\n\n    var token = localStorage.getItem(\"authToken\") || \"\";\n\n    if (id && id != null) {\n      setIsEdit(true);\n      LangAPI.put(\"/sub-categories/\".concat(id), finalRoom).then(function (response) {\n        console.log(response);\n\n        if (response.status === 201) {\n          console.log(response);\n          alert(\"Sub Ctegory Updated\");\n          setRoom(_objectSpread({}, initialObject));\n          props.history.push(\"/admin/sub-categories\");\n        }\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    } else {\n      LangAPI.post(\"/sub-categories\", finalRoom, {\n        headers: {\n          'Authorization': \"Bearer \".concat(token)\n        }\n      }).then(function (response) {\n        console.log(response);\n\n        if (response.status === 201) {\n          console.log(response);\n          alert(\"Category/Sub Ctegory Added\");\n          setRoom(_objectSpread({}, initialObject));\n          props.history.push(\"/admin/sub-categories\");\n        }\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (event.target.value != selectedLang) {\n      setSelectedLang(event.target.value);\n    }\n  };\n\n  var handleChangeCategory = function handleChangeCategory(event) {\n    if (event.target.value != room.parent_id) {\n      var updatedRoom = _objectSpread({}, room);\n\n      updatedRoom.parent_id = event.target.value;\n      setRoom(updatedRoom);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 21\n    }\n  }, \"Add Category\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  }, \"General Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"name\",\n    name: \"name\",\n    label: \"Name\",\n    value: room.name,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"sub_title\",\n    name: \"sub_title\",\n    label: \"Sub_Title\",\n    value: room.sub_title,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"route\",\n    name: \"route\",\n    label: \"Route\",\n    value: room.route,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      width: \"100%\",\n      color: \"\"\n    } // fullWidth\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"parent_id\",\n    style: {\n      color: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 41\n    }\n  }, \"Select Category\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"parent_id\",\n    id: \"parent_id\",\n    name: \"parent_id\",\n    value: room.parent_id,\n    label: \"Select Category\",\n    fullWidth: true,\n    style: {\n      color: \"\"\n    },\n    onChange: handleChangeCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 41\n    }\n  }, categories === null || categories === void 0 ? void 0 : categories.map(function (item) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: item._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 49\n      }\n    }, item.name);\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnail-preview-wrapper img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 37\n    }\n  }, !isEdit ? room.featured_image && room.featured_image !== \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n    src: room.featured_image,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./../../assets/img/placeholder.png\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 49\n    }\n  }) : typeof room.featured_image === typeof 0 ?\n  /*#__PURE__*/\n  // room.thumbnail && room.thumbnail !== \"\" ?\n  React.createElement(\"img\", {\n    src: room.featured_image,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: room.featured_image,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(Image, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 56\n      }\n    }),\n    className: \"mt-1\",\n    fullWidth: true,\n    onClick: function onClick() {\n      setIsSingle(true);\n      setIsAuthorImg(false);\n      setIsBanner(false);\n      setShowGallery(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 41\n    }\n  }, isEdit ? \"Change\" : \"Upload\", \" Featured Image\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 29\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(CKEditor, {\n    onBeforeLoad: function onBeforeLoad(CKEDITOR) {\n      return CKEDITOR.disableAutoInline = true;\n    },\n    data: room.description,\n    onChange: function onChange(e) {\n      return setRoom(_objectSpread(_objectSpread({}, room), {}, {\n        description: e.editor.getData()\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clearfix clear-fix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(GalleryDialog, {\n    open: showGallery,\n    handleImageSelect: handleImageSelect,\n    handleClose: function handleClose() {\n      setShowGallery(false);\n    },\n    refreshGallery: getGalleryImages,\n    data: imagesData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 21\n    }\n  }, \"SEO Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"meta_title\",\n    name: \"meta_title\",\n    label: \"Meta name\",\n    value: room === null || room === void 0 ? void 0 : (_room$seo = room.seo) === null || _room$seo === void 0 ? void 0 : _room$seo.meta_title,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChangeSEO,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"meta_description\",\n    name: \"meta_description\",\n    label: \"Meta Description\",\n    value: room === null || room === void 0 ? void 0 : (_room$seo2 = room.seo) === null || _room$seo2 === void 0 ? void 0 : _room$seo2.meta_description,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChangeSEO,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    onClick: handleSubmit,\n    style: {\n      \"float\": \"right\"\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n});","map":{"version":3,"sources":["E:/laragon/www/Prism/gymShark/gymshark_cms/src/views/SubCategories/Add.js"],"names":["React","Fragment","useEffect","useState","makeStyles","InputLabel","Grid","MaterialButton","Card","CardHeader","CardBody","FormControl","FormControlLabel","MenuItem","Radio","RadioGroup","Select","TextField","CKEditor","Image","LangAPI","useParams","withRouter","useLocation","GalleryDialog","website_url","append_url","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","AddSubCategory","props","search","query","URLSearchParams","lang","get","classes","id","initialObject","name","sub_title","description","featured_image","route","parent_id","seo","meta_title","meta_description","room","setRoom","isEdit","setIsEdit","imagesData","setImagesData","showGallery","setShowGallery","isSingle","setIsSingle","isAuthorImg","setIsAuthorImg","selectedLang","setSelectedLang","authorthumbnailPreview","setAuthorThumbnailPreview","thumbnailPreview","setThumbnailPreview","isBanner","setIsBanner","bannerThumbnailPreview","setBannerThumbnailPreview","categories","setCategories","then","response","status","data","console","log","length","getGalleryImages","map","x","isChecked","err","handleInputChange","e","updatedRoom","target","value","handleInputChangeSEO","handleSlugChange","updatedValue","replace","toLowerCase","handleImageSelect","index","checked","avatar","setTimeout","banner_img","author_img","imagesDataUpdated","i","handleSubmit","finalRoom","child","created_at","updated_at","alert","token","localStorage","getItem","put","history","push","error","post","headers","handleChange","event","handleChangeCategory","fontWeight","display","width","item","_id","alt_text","require","CKEDITOR","disableAutoInline","editor","getData"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"; //Suspense\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField, } from \"@material-ui/core\";\nimport CKEditor from \"ckeditor4-react\";\nimport { Image } from \"@material-ui/icons\";\nimport LangAPI from \"langapi/http\";\n\nimport { useParams, withRouter, useLocation } from \"react-router-dom\";\nimport GalleryDialog from \"views/Common/GalleryDialog\";\n\nconst website_url = \"https://fishermanscove-resort.com/blog-inner/\";\nconst append_url = \"blog-inner\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default withRouter(function AddSubCategory(props) {\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const lang = query.get('lang');\n    const classes = useStyles();\n    let { id } = useParams();\n\n    const initialObject = {\n        name: \"\",\n        sub_title: \"\",\n        description: \"\",\n        featured_image: \"\",\n        route: \"\",\n        parent_id: \"\",\n        seo: {\n            meta_title: \"\",\n            meta_description: \"\"\n        }\n    };\n    const [room, setRoom] = useState({ ...initialObject });\n\n    const [isEdit, setIsEdit] = useState(false);\n\n    const [imagesData, setImagesData] = useState([]);\n    const [showGallery, setShowGallery] = useState(false);\n    const [isSingle, setIsSingle] = useState(false);\n    const [isAuthorImg, setIsAuthorImg] = useState(false);\n    const [selectedLang, setSelectedLang] = useState(lang || \"en\");\n    const [authorthumbnailPreview, setAuthorThumbnailPreview] = useState(\"\");\n    const [thumbnailPreview, setThumbnailPreview] = useState(\"\");\n    const [isBanner, setIsBanner] = useState(false);\n    const [bannerThumbnailPreview, setBannerThumbnailPreview] = useState(\"\");\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        if (id && id != null) {\n            setIsEdit(true);\n            LangAPI.get(`/sub-categories/${id}`).then((response) => {\n                if (response.status === 200) {\n                    let data = { ...response?.data };\n                    console.log(\"response?.data?.data\", response?.data)\n                    // data.route = website_url + data.route;\n                    if (response?.data) {\n                        setRoom({ ...room, ...data });\n                    } else {\n                        setRoom({ ...initialObject });\n                    }\n                }\n            });\n        }\n        if (!imagesData.length > 0) {\n            getGalleryImages();\n        }\n\n        LangAPI.get(`/categories`).then((response) => {\n            if (response.status === 200) {\n\n                console.log(\"response?.data?.data\", response?.data)\n                setCategories(response?.data);\n            }\n        });\n\n\n    }, [selectedLang]);\n\n    const getGalleryImages = () => {\n        LangAPI.get(`/files`).then((response) => {\n            if (response.status === 200) {\n                setImagesData(response.data?.map((x) => ({ ...x, isChecked: false })));\n            }\n        }).catch(err => console.log(err));\n    };\n\n    const handleInputChange = (e) => {\n        let updatedRoom = { ...room };\n        updatedRoom[e.target.name] = e.target.value;\n        setRoom(updatedRoom);\n    };\n    const handleInputChangeSEO = (e) => {\n        let updatedRoom = { ...room };\n        if (!updatedRoom.seo) {\n            updatedRoom.seo = {\n                meta_title: \"\",\n                meta_description: \"\"\n            }\n        }\n        updatedRoom.seo[e.target.name] = e.target.value;\n        setRoom(updatedRoom);\n    };\n\n    const handleSlugChange = (e) => {\n        let updatedRoom = { ...room };\n        let updatedValue = e.target.value.replace(/\\s+/g, \"-\");\n        updatedValue = updatedValue.replace(/--/g, \"-\");\n        updatedRoom[e.target.name] = updatedValue.toLowerCase();\n        setRoom(updatedRoom);\n    };\n\n    const handleImageSelect = (e, index) => {\n        if (e.target.checked) {\n            if (isSingle && !isBanner && !isAuthorImg) {\n                setRoom({ ...room, featured_image: imagesData[index].avatar });\n                setThumbnailPreview(imagesData[index].avatar);\n                setTimeout(() => {\n                    setShowGallery(false);\n                }, 500);\n            }\n            else if (isBanner && !isSingle && !isAuthorImg) {\n                setRoom({ ...room, banner_img: imagesData[index].avatar });\n                setBannerThumbnailPreview(imagesData[index].avatar);\n                setTimeout(() => {\n                    setShowGallery(false);\n                }, 500);\n            }\n            else if (isAuthorImg && !isSingle && !isBanner) {\n                setRoom({ ...room, author_img: imagesData[index].avatar });\n                setAuthorThumbnailPreview(imagesData[index].avatar);\n                setTimeout(() => {\n                    setShowGallery(false);\n                }, 500);\n            }\n            let imagesDataUpdated = imagesData.map((x, i) => {\n                if (i === index) {\n                    return {\n                        ...x,\n                        isChecked: true,\n                    };\n                } else {\n                    return x;\n                }\n            });\n            setImagesData(imagesDataUpdated);\n            // }\n        } else {\n            if (isSingle && !isBanner && !isAuthorImg) {\n                setRoom({ ...room, featured_image: \"\" });\n                setThumbnailPreview(\"\");\n            }\n            else if (isBanner && !isSingle && !isAuthorImg) {\n                setRoom({ ...room, banner_img: \"\" });\n                setBannerThumbnailPreview(\"\");\n            }\n            else if (isAuthorImg && !isSingle && !isBanner) {\n                setRoom({ ...room, author_img: \"\" });\n                setAuthorThumbnailPreview(\"\");\n            }\n            setImagesData(\n                imagesData.map((x, i) => {\n                    if (i === index) {\n                        return {\n                            ...x,\n                            isChecked: false,\n                        };\n                    } else {\n                        return x;\n                    }\n                })\n            );\n        }\n    };\n\n    const handleSubmit = () => {\n        let finalRoom = room;\n        if (finalRoom.child) {\n            delete finalRoom.child;\n\n        }\n        if (finalRoom.created_at) {\n            delete finalRoom.created_at;\n        }\n        if (finalRoom.updated_at) {\n            delete finalRoom.updated_at;\n        }\n        // console.log(\"finalRoom\",finalRoom) ;return false\n        if (!finalRoom.name || finalRoom.name == \"\") {\n            alert(\"Please Enter name before Submiting\")\n            return false;\n        }\n        if (!finalRoom.sub_title || finalRoom.sub_title == \"\") {\n            alert(\"Please Enter Sub name before Submiting\")\n            return false;\n        }\n        if (!finalRoom.route || finalRoom.route == \"\") {\n            alert(\"Please Enter route before Submiting\")\n            return false;\n        }\n\n\n\n        let token = localStorage.getItem(\"authToken\") || \"\";\n\n        if (id && id != null) {\n            setIsEdit(true);\n            LangAPI.put(`/sub-categories/${id}`, finalRoom).then((response) => {\n                console.log(response)\n                if (response.status === 201) {\n                    console.log(response)\n                    alert(\"Sub Ctegory Updated\");\n                    setRoom({ ...initialObject });\n                    props.history.push(\"/admin/sub-categories\");\n                }\n            }).catch(function (error) {\n                console.log(error);\n            });\n        } else {\n            LangAPI.post(`/sub-categories`, finalRoom, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            }).then((response) => {\n                console.log(response)\n                if (response.status === 201) {\n                    console.log(response)\n                    alert(\"Category/Sub Ctegory Added\");\n                    setRoom({ ...initialObject });\n                    props.history.push(\"/admin/sub-categories\");\n                }\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n\n\n    };\n\n    const handleChange = (event) => {\n        if (event.target.value != selectedLang) {\n            setSelectedLang(event.target.value)\n        }\n    };\n    const handleChangeCategory = (event) => {\n        if (event.target.value != room.parent_id) {\n            let updatedRoom = { ...room };\n            updatedRoom.parent_id = event.target.value;\n            setRoom(updatedRoom);\n        }\n    };\n    return (\n        <div className={classes.root}>\n            <Card>\n                <CardHeader color=\"primary\" className=\"d-flex justify-content-between align-items-center\">\n                    {/* <div className=\"d-flex justify-content-between align-items-center\"> */}\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mb-0\">\n                        Add Category\n                    </h4>\n                    {/* <FormControl\n                        variant=\"outlined\"\n                        size=\"small\"\n                        style={{ width: \"20%\", color: \"white\" }}\n                    // fullWidth\n                    >\n                        <InputLabel id=\"language\"\n                            style={{ color: \"white\" }}\n                        >Select Language</InputLabel>\n                        <Select\n                            labelId=\"language\"\n                            id=\"language\"\n                            name=\"language\"\n                            value={selectedLang}\n                            label=\"Select Language\"\n                            fullWidth\n                            style={{ color: \"white\" }}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'en'}>En</MenuItem>\n                            <MenuItem value={'fr'}>FR</MenuItem>\n                            <MenuItem value={'de'}>DE</MenuItem>\n\n                        </Select>\n                    </FormControl> */}\n                    {/* </div> */}\n\n                </CardHeader>\n                <CardBody>\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mt-3\">\n                        General Information\n                    </h4>\n                    <Grid container spacing={2} style={{ display: \"flex\" }}>\n                        <Grid item xs={12} sm={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Name\"\n                                        value={room.name}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"sub_title\"\n                                        name=\"sub_title\"\n                                        label=\"Sub_Title\"\n                                        value={room.sub_title}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        id=\"route\"\n                                        name=\"route\"\n                                        label=\"Route\"\n                                        value={room.route}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        style={{ width: \"100%\", color: \"\" }}\n                                    // fullWidth\n                                    >\n                                        <InputLabel id=\"parent_id\"\n                                            style={{ color: \"\" }}\n                                        >Select Category</InputLabel>\n                                        <Select\n                                            labelId=\"parent_id\"\n                                            id=\"parent_id\"\n                                            name=\"parent_id\"\n                                            value={room.parent_id}\n                                            label=\"Select Category\"\n                                            fullWidth\n                                            style={{ color: \"\" }}\n                                            onChange={handleChangeCategory}\n                                        >\n                                            {categories?.map(item => (\n                                                <MenuItem value={item._id}>{item.name}</MenuItem>\n                                            ))}\n\n\n                                            {/* <MenuItem value={'de'}>DE</MenuItem> */}\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <div className=\"thumbnail-preview-wrapper img-thumbnail\">\n                                        {!isEdit ? (\n                                            room.featured_image && room.featured_image !== \"\" ? (\n                                                <img src={room.featured_image} alt={room.alt_text || \"\"} />\n                                            ) : (\n                                                <img\n                                                    src={require(\"./../../assets/img/placeholder.png\")}\n                                                    alt=\"\"\n                                                />\n                                            )\n                                        ) : typeof room.featured_image === typeof 0 ? (\n                                            // room.thumbnail && room.thumbnail !== \"\" ?\n                                            <img src={room.featured_image} alt={room.alt_text || \"\"} />\n                                        ) : (\n                                            <img src={room.featured_image} alt={room.alt_text || \"\"} />\n                                        )}\n                                    </div>\n                                    <Fragment>\n                                        <MaterialButton\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                            startIcon={<Image />}\n                                            className=\"mt-1\"\n                                            fullWidth\n                                            onClick={() => {\n                                                setIsSingle(true);\n                                                setIsAuthorImg(false);\n                                                setIsBanner(false);\n                                                setShowGallery(true);\n                                            }}\n                                        >\n                                            {isEdit ? \"Change\" : \"Upload\"} Featured Image\n                                        </MaterialButton>\n                                    </Fragment>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} sm={12}>\n                            <hr />\n                            <h4 style={{ fontWeight: \"400\" }}>Description</h4>\n                            <CKEditor\n                                onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                data={room.description}\n                                onChange={(e) =>\n                                    setRoom({ ...room, description: e.editor.getData() })\n                                }\n                            />\n                        </Grid>\n                        <div className=\"clearfix clear-fix\"></div>\n                        {/* GALLERY DIALOG BOX START */}\n\n                        <GalleryDialog\n                            open={showGallery} handleImageSelect={handleImageSelect} handleClose={() => {\n                                setShowGallery(false);\n                            }}\n                            refreshGallery={getGalleryImages}\n                            data={imagesData} />\n                        {/* GALLERY DIALOG BOX END */}\n                    </Grid>\n                    <hr />\n\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mt-2\">\n                        SEO Information\n                    </h4>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                id=\"meta_title\"\n                                name=\"meta_title\"\n                                label=\"Meta name\"\n                                value={room?.seo?.meta_title}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleInputChangeSEO}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        {/* <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                id=\"route\"\n                                name=\"route\"\n                                label=\"Permalink\"\n                                value={room.route}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleRouteChange}\n                                size=\"small\"\n                            />\n                        </Grid> */}\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                id=\"meta_description\"\n                                name=\"meta_description\"\n                                label=\"Meta Description\"\n                                value={room?.seo?.meta_description}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleInputChangeSEO}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        {/* <Grid item xs={12} sm={12}>\n                            <TextField\n                                required\n                                id=\"schema_markup\"\n                                name=\"schema_markup\"\n                                label=\"Schema Markup\"\n                                value={room.schema_markup}\n                                variant=\"outlined\"\n                                fullWidth\n                                multiline\n                                rows={4}\n                                rowsMax={4}\n                                onChange={handleInputChange}\n                                size=\"small\"\n                            />\n                        </Grid> */}\n                        {/* <Grid item xs={12} sm={6}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup\n                                    aria-label=\"is_followed\"\n                                    row\n                                    defaultChecked\n                                    name=\"is_followed\"\n                                    value={room.is_followed}\n                                    onChange={(e) => {\n                                        setRoom({ ...room, is_followed: !room.is_followed });\n                                    }}\n                                >\n                                    <FormControlLabel\n                                        value={true}\n                                        control={<Radio />}\n                                        label=\"Follow\"\n                                    />\n                                    <FormControlLabel\n                                        value={false}\n                                        control={<Radio />}\n                                        label=\"No Follow\"\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup\n                                    aria-label=\"is_indexed\"\n                                    row\n                                    defaultChecked\n                                    name=\"is_indexed\"\n                                    value={room.is_indexed}\n                                    onChange={(e) => {\n                                        setRoom({ ...room, is_indexed: !room.is_indexed });\n                                    }}\n                                >\n                                    <FormControlLabel\n                                        value={true}\n                                        control={<Radio />}\n                                        label=\"Index\"\n                                    />\n                                    <FormControlLabel\n                                        value={false}\n                                        control={<Radio />}\n                                        label=\"No Index\"\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid> */}\n                    </Grid>\n                </CardBody>\n            </Card>\n\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                    <MaterialButton\n                        onClick={handleSubmit}\n                        style={{ float: \"right\" }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                    >\n                        Submit\n                    </MaterialButton>\n                </Grid>\n            </Grid>\n        </div>\n    );\n});\n"]},"metadata":{},"sourceType":"module"}