{"ast":null,"code":"import _toConsumableArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\bafco_cms\\\\src\\\\views\\\\Header\\\\Add.js\";\nimport React, { Fragment, Suspense, useEffect, useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { TextField, Paper } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\"; // import API from \"utils/http\";\n\nimport API from \"langapi/http\";\nimport { AddCircleOutline, CloseOutlined, DragHandleOutlined } from \"@material-ui/icons\";\nimport { Select, MenuItem, FormControl } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nvar append_url_dining = \"dining\";\nvar append_url_room = \"rooms\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1 // width:'60%',\n      // margin:'auto'\n\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default function UpdateHeader() {\n  var _headerContent$menuIt16,\n      _this = this,\n      _headerContent$contac,\n      _headerContent$contac2,\n      _headerContent$contac3,\n      _headerContent$contac4;\n\n  var classes = useStyles(); // const [open, setOpen] = React.useState(false);\n\n  var initialObject = {\n    menuItems: [],\n    menuId: null,\n    contactId: null,\n    type: \"header\",\n    contact: {\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      whatsapp: \"\"\n    }\n  };\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragId = _useState2[0],\n      setDragId = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submenuDragId = _useState4[0],\n      setSubmenuDragId = _useState4[1];\n\n  var _useState5 = useState(_objectSpread({}, initialObject)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      headerContent = _useState6[0],\n      setHeaderContent = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pages = _useState8[0],\n      setPages = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pagesFilter = _useState10[0],\n      setPagesFilter = _useState10[1];\n\n  var _useState11 = useState(\"en\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedLang = _useState12[0],\n      setSelectedLang = _useState12[1];\n\n  useEffect(function () {\n    // API.get(`/pages?lang=${selectedLang}`).then((response) => {\n    API.get(\"/drop-down\").then(function (response) {\n      var _response$data, _response$data$data;\n\n      var a = [];\n\n      if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.length) > 0) {\n        var _response$data2;\n\n        // response.data.data.forEach(element => {\n        var _pages = [];\n        response.data.data[1].forEach(function (element) {\n          var obj = _objectSpread({}, element);\n\n          obj.name = obj.post_name;\n          obj.name_de = obj.name_de || \"\";\n          obj.name_fr = obj.name_fr || \"\";\n          obj.base_url = \"dining\";\n\n          _pages.push(obj);\n        });\n        response.data.data[0].forEach(function (element) {\n          var obj = _objectSpread({}, element);\n\n          obj.name = obj.post_name;\n          obj.name_de = obj.name_de || \"\";\n          obj.name_fr = obj.name_fr || \"\";\n          obj.base_url = \"rooms\";\n\n          _pages.push(obj);\n        });\n        a = [].concat(_toConsumableArray(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data[2]), _pages);\n        console.log(a, \"element\");\n        setPages(a);\n      }\n\n      setPagesFilter(a);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  useEffect(function () {\n    API.get(\"/common?lang=\".concat(selectedLang)).then(function (response) {\n      var _response$data3;\n\n      var contactdata = response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data.find(function (x) {\n        return x.type === \"header\";\n      });\n\n      if (contactdata) {\n        setHeaderContent(contactdata);\n      } else {\n        setHeaderContent(initialObject);\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, [selectedLang]);\n\n  var handleChange = function handleChange(event) {\n    if (event.target.value != selectedLang) {\n      setSelectedLang(event.target.value);\n    }\n  };\n\n  var handleMenuItemChange = function handleMenuItemChange(e, slug, index) {\n    var updatedItems = _toConsumableArray(headerContent.menuItems);\n\n    updatedItems[index][e.target.name] = e.target.value;\n    updatedItems[index][\"slug\"] = slug;\n    setHeaderContent(_objectSpread(_objectSpread({}, headerContent), {}, {\n      menuItems: updatedItems\n    })); // setPagesFilter(pagesFilter.filter(x => x.name !== e.target.value))\n  };\n\n  var handleSubMenuItemChange = function handleSubMenuItemChange(e, slug, index, ind, base_url) {\n    var _updatedSubMenu$find;\n\n    // eslint-disable-next-line no-debugger\n    // debugger;\n    var updatedHeaderContent = _objectSpread({}, headerContent);\n\n    var updatedSubMenu = _toConsumableArray(updatedHeaderContent.menuItems[index].subMenu);\n\n    if ((_updatedSubMenu$find = updatedSubMenu.find(function (x) {\n      return x.text === e.target.value;\n    })) === null || _updatedSubMenu$find === void 0 ? void 0 : _updatedSubMenu$find.text) {\n      alert(\"Submenu item already added. Please select different\");\n      return;\n    }\n\n    updatedSubMenu[ind][e.target.name] = e.target.value;\n    updatedSubMenu[ind][\"slug\"] = slug;\n    updatedSubMenu[ind][\"base_url\"] = base_url; // if()\n\n    updatedHeaderContent.menuItems[index].subMenu = updatedSubMenu;\n    setHeaderContent(updatedHeaderContent); // setPagesFilter(pagesFilter.filter(x => x.name !== e.target.value))\n  };\n\n  var handleContactItemChange = function handleContactItemChange(e) {\n    var updatedContact = _objectSpread({}, headerContent.contact);\n\n    updatedContact[e.target.name] = e.target.value;\n    setHeaderContent(_objectSpread(_objectSpread({}, headerContent), {}, {\n      contact: updatedContact\n    }));\n  };\n\n  var addNewLink = function addNewLink() {\n    var _headerContent$menuIt;\n\n    if ((headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt = headerContent.menuItems) === null || _headerContent$menuIt === void 0 ? void 0 : _headerContent$menuIt.length) > 0) {\n      setPagesFilter(pagesFilter.filter(function (x) {\n        var _headerContent$menuIt2, _headerContent$menuIt3;\n\n        return x.name !== (headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt2 = headerContent.menuItems[(headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt3 = headerContent.menuItems) === null || _headerContent$menuIt3 === void 0 ? void 0 : _headerContent$menuIt3.length) - 1]) === null || _headerContent$menuIt2 === void 0 ? void 0 : _headerContent$menuIt2.text);\n      }));\n    }\n\n    if (!headerContent.menuItems.length > 0) {\n      var _headerContent$menuIt4, _headerContent$menuIt5, _headerContent$menuIt6, _headerContent$menuIt7;\n\n      var newObj = _objectSpread({}, headerContent);\n\n      var data = {\n        text: \"\",\n        address: \"\",\n        temp_id: (headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt4 = headerContent.menuItems[(headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt5 = headerContent.menuItems) === null || _headerContent$menuIt5 === void 0 ? void 0 : _headerContent$menuIt5.length) - 1]) === null || _headerContent$menuIt4 === void 0 ? void 0 : _headerContent$menuIt4.order) + 1,\n        order: (headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt6 = headerContent.menuItems[(headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt7 = headerContent.menuItems) === null || _headerContent$menuIt7 === void 0 ? void 0 : _headerContent$menuIt7.length) - 1]) === null || _headerContent$menuIt6 === void 0 ? void 0 : _headerContent$menuIt6.order) + 1,\n        slug: \"\"\n      };\n      newObj.menuItems.push(data);\n      setHeaderContent(newObj);\n    } else {\n      var _headerContent$menuIt8, _headerContent$menuIt9;\n\n      setHeaderContent(_objectSpread(_objectSpread({}, headerContent), {}, {\n        menuItems: [].concat(_toConsumableArray(headerContent === null || headerContent === void 0 ? void 0 : headerContent.menuItems), [{\n          text: \"\",\n          address: \"\",\n          temp_id: (headerContent === null || headerContent === void 0 ? void 0 : headerContent.menuItems[(headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt8 = headerContent.menuItems) === null || _headerContent$menuIt8 === void 0 ? void 0 : _headerContent$menuIt8.length) - 1].order) + 1,\n          order: (headerContent === null || headerContent === void 0 ? void 0 : headerContent.menuItems[(headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt9 = headerContent.menuItems) === null || _headerContent$menuIt9 === void 0 ? void 0 : _headerContent$menuIt9.length) - 1].order) + 1,\n          slug: \"\"\n        }])\n      }));\n    }\n  };\n\n  var addSubmenu = function addSubmenu(index) {\n    setHeaderContent(_objectSpread(_objectSpread({}, headerContent), {}, {\n      menuItems: [].concat(_toConsumableArray(headerContent.menuItems), [{\n        text: \"\",\n        address: \"\",\n        temp_id: headerContent.menuItems.length + 1,\n        order: headerContent.menuItems.length + 1,\n        slug: \"\"\n      }])\n    }));\n\n    var updatedHeaderContent = _objectSpread({}, headerContent);\n\n    var subMenu = updatedHeaderContent.menuItems[index].subMenu || [];\n    updatedHeaderContent.menuItems[index].subMenu = [].concat(_toConsumableArray(subMenu), [{\n      text: \"\",\n      address: \"\",\n      base_url: \"\",\n      temp_id: subMenu.length + 1,\n      order: subMenu.length + 1,\n      slug: \"\"\n    }]);\n    setHeaderContent(updatedHeaderContent);\n  };\n\n  var deleteSubmenuLink = function deleteSubmenuLink(index, ind) {\n    var _updatedHeaderContent;\n\n    var updatedHeaderContent = _objectSpread({}, headerContent);\n\n    var updatedSubMenu = (_updatedHeaderContent = updatedHeaderContent.menuItems[index].subMenu) === null || _updatedHeaderContent === void 0 ? void 0 : _updatedHeaderContent.filter(function (x, i) {\n      return i !== ind;\n    });\n    updatedHeaderContent.menuItems[index].subMenu = updatedSubMenu;\n    setHeaderContent(updatedHeaderContent);\n  };\n\n  var handleDrag = function handleDrag(ev) {\n    setDragId(ev.currentTarget.id);\n  };\n\n  var handleDrop = function handleDrop(ev) {\n    var dragBox = headerContent.menuItems.find(function (box) {\n      return box.temp_id == dragId;\n    });\n    var dropBox = headerContent.menuItems.find(function (box) {\n      return box.temp_id == ev.currentTarget.id;\n    });\n    var dragBoxOrder = dragBox.order;\n    var dropBoxOrder = dropBox.order;\n\n    if (dragBoxOrder == dropBoxOrder) {\n      return;\n    }\n\n    var updatedMenuItems = headerContent.menuItems.map(function (box) {\n      if (box.temp_id == dragId) {\n        box.order = dropBoxOrder;\n      }\n\n      if (box.temp_id == ev.currentTarget.id) {\n        box.order = dragBoxOrder;\n      }\n\n      return box;\n    });\n    setHeaderContent(_objectSpread(_objectSpread({}, headerContent), {}, {\n      menuItems: updatedMenuItems\n    }));\n  };\n\n  var handleSubMenuDrag = function handleSubMenuDrag(ev) {\n    setSubmenuDragId(ev.currentTarget.id);\n  };\n\n  var handleSubMenuDrop = function handleSubMenuDrop(ev, index) {\n    var _headerContent$menuIt10, _headerContent$menuIt11, _headerContent$menuIt12, _headerContent$menuIt13, _headerContent$menuIt14, _headerContent$menuIt15;\n\n    var dragBox = (_headerContent$menuIt10 = headerContent.menuItems[index]) === null || _headerContent$menuIt10 === void 0 ? void 0 : (_headerContent$menuIt11 = _headerContent$menuIt10.subMenu) === null || _headerContent$menuIt11 === void 0 ? void 0 : _headerContent$menuIt11.find(function (box) {\n      return box.temp_id == submenuDragId;\n    });\n    var dropBox = (_headerContent$menuIt12 = headerContent.menuItems[index]) === null || _headerContent$menuIt12 === void 0 ? void 0 : (_headerContent$menuIt13 = _headerContent$menuIt12.subMenu) === null || _headerContent$menuIt13 === void 0 ? void 0 : _headerContent$menuIt13.find(function (box) {\n      return box.temp_id == ev.currentTarget.id;\n    });\n    var dragBoxOrder = dragBox.order;\n    var dropBoxOrder = dropBox.order;\n    var updatedSubMenuItems = (_headerContent$menuIt14 = headerContent.menuItems[index]) === null || _headerContent$menuIt14 === void 0 ? void 0 : (_headerContent$menuIt15 = _headerContent$menuIt14.subMenu) === null || _headerContent$menuIt15 === void 0 ? void 0 : _headerContent$menuIt15.map(function (box) {\n      if (box.temp_id == submenuDragId) {\n        box.order = dropBoxOrder;\n      }\n\n      if (box.temp_id == ev.currentTarget.id) {\n        box.order = dragBoxOrder;\n      }\n\n      return box;\n    });\n\n    var updatedHeaderContent = _objectSpread({}, headerContent);\n\n    updatedHeaderContent.menuItems[index].subMenu = updatedSubMenuItems;\n    setHeaderContent(updatedHeaderContent);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var updatedHeaderContent = _objectSpread({}, headerContent);\n\n    API.post(\"/common?lang=\".concat(selectedLang), updatedHeaderContent).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Section updated successfully !\");\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, \"Update Site Header\"), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      width: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"language\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, \"Select Language\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"language\",\n    id: \"language\",\n    name: \"language\",\n    value: selectedLang,\n    label: \"Select Language\",\n    fullWidth: true,\n    onChange: handleChange,\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'en',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  }, \"En\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'fr',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, \"FR\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'de',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, \"DE\")))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, \"Menu Items (Drawer Menu)\")), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 21\n    }\n  }, headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$menuIt16 = headerContent.menuItems) === null || _headerContent$menuIt16 === void 0 ? void 0 : _headerContent$menuIt16.sort(function (a, b) {\n    return a.order - b.order;\n  }).map(function (x, index) {\n    var _pages$find3, _pages$find4, _pages$find5, _x$subMenu, _x$subMenu2;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: x.temp_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: \"px-2 py-3 header-menu-list-item\",\n      key: x.temp_id,\n      id: x.temp_id,\n      draggable: true,\n      onDragStart: handleDrag,\n      onDrop: handleDrop,\n      onDragOver: function onDragOver(ev) {\n        return ev.preventDefault();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(DragHandleOutlined, {\n      style: {\n        cursor: \"pointer\"\n      },\n      color: \"disabled\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 35\n      }\n    }, (pages === null || pages === void 0 ? void 0 : pages.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, selectedLang == 'en' && /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"text\".concat(x.temp_id),\n      name: \"text\",\n      options: pagesFilter,\n      size: \"small\",\n      value: pages.find(function (p) {\n        var _p$name, _x$text;\n\n        return ((_p$name = p.name) === null || _p$name === void 0 ? void 0 : _p$name.toLowerCase()) === ((_x$text = x.text) === null || _x$text === void 0 ? void 0 : _x$text.toLowerCase());\n      }) || {\n        name: \"\"\n      },\n      onChange: function onChange(e, newValue) {\n        var _pages$find;\n\n        return handleMenuItemChange({\n          target: {\n            value: newValue === null || newValue === void 0 ? void 0 : newValue.name,\n            name: \"text\"\n          }\n        }, newValue === null || newValue === void 0 ? void 0 : newValue.slug, index, (_pages$find = pages.find(function (p) {\n          var _p$name2, _newValue$name;\n\n          return ((_p$name2 = p.name) === null || _p$name2 === void 0 ? void 0 : _p$name2.toLowerCase()) === (newValue === null || newValue === void 0 ? void 0 : (_newValue$name = newValue.name) === null || _newValue$name === void 0 ? void 0 : _newValue$name.toLowerCase());\n        })) === null || _pages$find === void 0 ? void 0 : _pages$find.slug) || \"\";\n      },\n      getOptionLabel: function getOptionLabel(option) {\n        return option.name;\n      } // style={{ width: 300 }}\n      ,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/React.createElement(TextField, Object.assign({\n          required: true\n        }, params, {\n          label: \"Select Link Text\",\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 43\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 39\n      }\n    }), selectedLang == 'de' && /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"text\".concat(x.temp_id),\n      name: \"text\",\n      options: pagesFilter,\n      size: \"small\",\n      value: pages.find(function (p) {\n        var _p$name_de, _x$text2;\n\n        return ((_p$name_de = p.name_de) === null || _p$name_de === void 0 ? void 0 : _p$name_de.toLowerCase()) === ((_x$text2 = x.text) === null || _x$text2 === void 0 ? void 0 : _x$text2.toLowerCase());\n      }) || {\n        name_de: \"\"\n      },\n      onChange: function onChange(e, newValue) {\n        return (// handleMenuItemChange(\n          //   {\n          //     target: {\n          //       value: newValue?.name_de,\n          //       name: \"text\",\n          //     },\n          //   },\n          //   newValue?.slug,\n          //   index,\n          //   pages.find(\n          //     (p) =>\n          //       p.name_de?.toLowerCase() ===\n          //       newValue?.name?.toLowerCase()\n          //   )?.slug\n          // ) || \"\"\n          console.log(\"e, newValue\", e, newValue)\n        );\n      },\n      getOptionLabel: function getOptionLabel(option) {\n        return option.name_de;\n      } // style={{ width: 300 }}\n      ,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/React.createElement(TextField, Object.assign({\n          required: true\n        }, params, {\n          label: \"Select Link Text\",\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 43\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 39\n      }\n    }), selectedLang == 'fr' && /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"text\".concat(x.temp_id),\n      name: \"text\",\n      options: pagesFilter,\n      size: \"small\",\n      value: pages.find(function (p) {\n        var _p$name_fr, _x$text3;\n\n        return ((_p$name_fr = p.name_fr) === null || _p$name_fr === void 0 ? void 0 : _p$name_fr.toLowerCase()) === ((_x$text3 = x.text) === null || _x$text3 === void 0 ? void 0 : _x$text3.toLowerCase());\n      }) || {\n        name_fr: \"\"\n      },\n      onChange: function onChange(e, newValue) {\n        var _pages$find2;\n\n        return handleMenuItemChange({\n          target: {\n            value: newValue === null || newValue === void 0 ? void 0 : newValue.name_fr,\n            name: \"text\"\n          }\n        }, newValue === null || newValue === void 0 ? void 0 : newValue.slug, index, (_pages$find2 = pages.find(function (p) {\n          var _p$name_fr2, _newValue$name2;\n\n          return ((_p$name_fr2 = p.name_fr) === null || _p$name_fr2 === void 0 ? void 0 : _p$name_fr2.toLowerCase()) === (newValue === null || newValue === void 0 ? void 0 : (_newValue$name2 = newValue.name) === null || _newValue$name2 === void 0 ? void 0 : _newValue$name2.toLowerCase());\n        })) === null || _pages$find2 === void 0 ? void 0 : _pages$find2.slug) || \"\";\n      },\n      getOptionLabel: function getOptionLabel(option) {\n        return option.name_fr;\n      } // style={{ width: 300 }}\n      ,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/React.createElement(TextField, Object.assign({\n          required: true\n        }, params, {\n          label: \"Select Link Text\",\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 43\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 39\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"address\".concat(x.temp_id),\n      name: \"address\",\n      label: \"URL\",\n      value: selectedLang === \"en\" ? (pages === null || pages === void 0 ? void 0 : (_pages$find3 = pages.find(function (p) {\n        var _p$name3, _x$text4;\n\n        return ((_p$name3 = p.name) === null || _p$name3 === void 0 ? void 0 : _p$name3.toLowerCase()) === ((_x$text4 = x.text) === null || _x$text4 === void 0 ? void 0 : _x$text4.toLowerCase());\n      })) === null || _pages$find3 === void 0 ? void 0 : _pages$find3.slug) || \"\" : selectedLang === \"fr\" ? (pages === null || pages === void 0 ? void 0 : (_pages$find4 = pages.find(function (p) {\n        var _p$name_fr3, _x$text5;\n\n        return ((_p$name_fr3 = p.name_fr) === null || _p$name_fr3 === void 0 ? void 0 : _p$name_fr3.toLowerCase()) === ((_x$text5 = x.text) === null || _x$text5 === void 0 ? void 0 : _x$text5.toLowerCase());\n      })) === null || _pages$find4 === void 0 ? void 0 : _pages$find4.slug) || \"\" : selectedLang === \"de\" ? (pages === null || pages === void 0 ? void 0 : (_pages$find5 = pages.find(function (p) {\n        var _p$name_de2, _x$text6;\n\n        return ((_p$name_de2 = p.name_de) === null || _p$name_de2 === void 0 ? void 0 : _p$name_de2.toLowerCase()) === ((_x$text6 = x.text) === null || _x$text6 === void 0 ? void 0 : _x$text6.toLowerCase());\n      })) === null || _pages$find5 === void 0 ? void 0 : _pages$find5.slug) || \"\" : \"\",\n      variant: \"outlined\",\n      fullWidth: true,\n      disabled: true,\n      onChange: function onChange(e) {\n        return handleMenuItemChange(e, index);\n      },\n      size: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(MaterialButton, {\n      onClick: function onClick() {\n        return setHeaderContent(_objectSpread(_objectSpread({}, headerContent), {}, {\n          menuItems: headerContent.menuItems.filter(function (z) {\n            return z.temp_id !== x.temp_id;\n          })\n        }));\n      },\n      color: \"secondary\",\n      size: \"small\",\n      variant: \"outlined\",\n      style: {\n        height: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 37\n      }\n    }, \"Delete Link\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(AddCircleOutline, {\n      style: {\n        cursor: \"pointer\"\n      },\n      titleAccess: \"Add submenu\",\n      onClick: function onClick() {\n        return addSubmenu(index);\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: ((_x$subMenu = x.subMenu) === null || _x$subMenu === void 0 ? void 0 : _x$subMenu.length) > 0 ? \"\" : \"d-none\",\n      style: {\n        border: \"1px dashed #3f50b5\",\n        borderRadius: \"4px\",\n        margin: \"1rem 0\",\n        padding: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"primary\",\n      variant: \"caption\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 35\n      }\n    }, \"SUBMENU\"), (_x$subMenu2 = x.subMenu) === null || _x$subMenu2 === void 0 ? void 0 : _x$subMenu2.sort(function (a, b) {\n      return a.order - b.order;\n    }).map(function (y, ind) {\n      var _pages$find9, _pages$find10, _pages$find11;\n\n      return /*#__PURE__*/React.createElement(Paper, {\n        className: \"px-2 py-2 mt-2 header-menu-list-item\",\n        key: y.temp_id,\n        id: y.temp_id,\n        draggable: true,\n        onDragStart: handleSubMenuDrag,\n        onDrop: function onDrop(ev) {\n          return handleSubMenuDrop(ev, index);\n        },\n        onDragOver: function onDragOver(ev) {\n          return ev.preventDefault();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 1,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 1,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(DragHandleOutlined, {\n        style: {\n          cursor: \"pointer\"\n        },\n        color: \"disabled\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 43\n        }\n      }, (pages === null || pages === void 0 ? void 0 : pages.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, selectedLang == 'en' && /*#__PURE__*/React.createElement(Autocomplete, {\n        id: \"text\".concat(y.temp_id),\n        name: \"text\",\n        options: pages,\n        size: \"small\",\n        value: pages.find(function (p) {\n          var _p$name4, _y$text;\n\n          return ((_p$name4 = p.name) === null || _p$name4 === void 0 ? void 0 : _p$name4.toLowerCase()) === ((_y$text = y.text) === null || _y$text === void 0 ? void 0 : _y$text.toLowerCase());\n        }) || {\n          name: \"\"\n        },\n        onChange: function onChange(e, newValue) {\n          var _pages$find6;\n\n          return handleSubMenuItemChange({\n            target: {\n              value: newValue === null || newValue === void 0 ? void 0 : newValue.name,\n              name: \"text\"\n            }\n          }, newValue === null || newValue === void 0 ? void 0 : newValue.slug, index, ind, (newValue === null || newValue === void 0 ? void 0 : newValue.base_url) || \"\", (_pages$find6 = pages.find(function (p) {\n            var _p$name5, _newValue$name3;\n\n            return ((_p$name5 = p.name) === null || _p$name5 === void 0 ? void 0 : _p$name5.toLowerCase()) === (newValue === null || newValue === void 0 ? void 0 : (_newValue$name3 = newValue.name) === null || _newValue$name3 === void 0 ? void 0 : _newValue$name3.toLowerCase());\n          })) === null || _pages$find6 === void 0 ? void 0 : _pages$find6.slug) || \"\";\n        },\n        getOptionLabel: function getOptionLabel(option) {\n          return option.name;\n        } // style={{ width: 300 }}\n        ,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({\n            required: true\n          }, params, {\n            label: \"Select Link Text\",\n            variant: \"outlined\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 51\n            }\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 47\n        }\n      }), selectedLang == 'fr' && /*#__PURE__*/React.createElement(Autocomplete, {\n        id: \"text\".concat(y.temp_id),\n        name: \"text\",\n        options: pages,\n        size: \"small\",\n        value: pages.find(function (p) {\n          var _p$name_fr4, _y$text2;\n\n          return ((_p$name_fr4 = p.name_fr) === null || _p$name_fr4 === void 0 ? void 0 : _p$name_fr4.toLowerCase()) === ((_y$text2 = y.text) === null || _y$text2 === void 0 ? void 0 : _y$text2.toLowerCase());\n        }) || {\n          name_fr: \"\"\n        } // onChange={(e, newValue) =>\n        //   handleSubMenuItemChange(\n        //     {\n        //       target: {\n        //         value:\n        //           newValue?.name_fr,\n        //         name: \"text\",\n        //       },\n        //     },\n        //     newValue.slug,\n        //     index,\n        //     ind,\n        //     newValue.base_url || \"\",\n        //     pages.find(\n        //       (p) =>\n        //         p.name_fr?.toLowerCase() ===\n        //         newValue?.name?.toLowerCase()\n        //     )?.slug\n        //   ) || \"\"\n        // }\n        ,\n        onChange: function onChange(e, newValue) {\n          var _pages$find7;\n\n          return handleSubMenuItemChange({\n            target: {\n              value: newValue === null || newValue === void 0 ? void 0 : newValue.name_fr,\n              name: \"text\"\n            }\n          }, newValue === null || newValue === void 0 ? void 0 : newValue.slug, index, ind, (newValue === null || newValue === void 0 ? void 0 : newValue.base_url) || \"\", (_pages$find7 = pages.find(function (p) {\n            var _p$name_fr5, _newValue$name4;\n\n            return ((_p$name_fr5 = p.name_fr) === null || _p$name_fr5 === void 0 ? void 0 : _p$name_fr5.toLowerCase()) === (newValue === null || newValue === void 0 ? void 0 : (_newValue$name4 = newValue.name) === null || _newValue$name4 === void 0 ? void 0 : _newValue$name4.toLowerCase());\n          })) === null || _pages$find7 === void 0 ? void 0 : _pages$find7.slug) || \"\";\n        },\n        getOptionLabel: function getOptionLabel(option) {\n          return option === null || option === void 0 ? void 0 : option.name_fr;\n        } // style={{ width: 300 }}\n        ,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({\n            required: true\n          }, params, {\n            label: \"Select Link Text\",\n            variant: \"outlined\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 51\n            }\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 47\n        }\n      }), selectedLang == 'de' && /*#__PURE__*/React.createElement(Autocomplete, {\n        id: \"text\".concat(y.temp_id),\n        name: \"text\",\n        options: pages,\n        size: \"small\",\n        value: pages.find(function (p) {\n          var _p$name_de3, _y$text3;\n\n          return (p === null || p === void 0 ? void 0 : (_p$name_de3 = p.name_de) === null || _p$name_de3 === void 0 ? void 0 : _p$name_de3.toLowerCase()) === ((_y$text3 = y.text) === null || _y$text3 === void 0 ? void 0 : _y$text3.toLowerCase());\n        }) || {\n          name_de: \"\"\n        },\n        onChange: function onChange(e, newValue) {\n          var _pages$find8;\n\n          return handleSubMenuItemChange({\n            target: {\n              value: newValue === null || newValue === void 0 ? void 0 : newValue.name_de,\n              name: \"text\"\n            }\n          }, newValue === null || newValue === void 0 ? void 0 : newValue.slug, index, ind, (newValue === null || newValue === void 0 ? void 0 : newValue.base_url) || \"\", (_pages$find8 = pages.find(function (p) {\n            var _p$name_de4, _newValue$name5;\n\n            return ((_p$name_de4 = p.name_de) === null || _p$name_de4 === void 0 ? void 0 : _p$name_de4.toLowerCase()) === (newValue === null || newValue === void 0 ? void 0 : (_newValue$name5 = newValue.name) === null || _newValue$name5 === void 0 ? void 0 : _newValue$name5.toLowerCase());\n          })) === null || _pages$find8 === void 0 ? void 0 : _pages$find8.slug) || \"\";\n        },\n        getOptionLabel: function getOptionLabel(option) {\n          return option === null || option === void 0 ? void 0 : option.name_de;\n        } // style={{ width: 300 }}\n        ,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({\n            required: true\n          }, params, {\n            label: \"Select Link Text\",\n            variant: \"outlined\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 51\n            }\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 47\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"address\".concat(y.temp_id),\n        name: \"address\",\n        label: \"URL\",\n        value: selectedLang === \"en\" ? (pages === null || pages === void 0 ? void 0 : (_pages$find9 = pages.find(function (p) {\n          var _p$name6, _y$text4;\n\n          return ((_p$name6 = p.name) === null || _p$name6 === void 0 ? void 0 : _p$name6.toLowerCase()) === ((_y$text4 = y.text) === null || _y$text4 === void 0 ? void 0 : _y$text4.toLowerCase());\n        })) === null || _pages$find9 === void 0 ? void 0 : _pages$find9.slug) || \"\" : selectedLang === \"fr\" ? (pages === null || pages === void 0 ? void 0 : (_pages$find10 = pages.find(function (p) {\n          var _p$name_fr6, _y$text5;\n\n          return ((_p$name_fr6 = p.name_fr) === null || _p$name_fr6 === void 0 ? void 0 : _p$name_fr6.toLowerCase()) === ((_y$text5 = y.text) === null || _y$text5 === void 0 ? void 0 : _y$text5.toLowerCase());\n        })) === null || _pages$find10 === void 0 ? void 0 : _pages$find10.slug) || \"\" : selectedLang === \"de\" ? (pages === null || pages === void 0 ? void 0 : (_pages$find11 = pages.find(function (p) {\n          var _p$name_de5, _y$text6;\n\n          return ((_p$name_de5 = p.name_de) === null || _p$name_de5 === void 0 ? void 0 : _p$name_de5.toLowerCase()) === ((_y$text6 = y.text) === null || _y$text6 === void 0 ? void 0 : _y$text6.toLowerCase());\n        })) === null || _pages$find11 === void 0 ? void 0 : _pages$find11.slug) || \"\" : \"\",\n        variant: \"outlined\",\n        fullWidth: true,\n        disabled: true,\n        onChange: function onChange(e) {\n          return handleSubMenuItemChange(e, ind);\n        },\n        size: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 1,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(CloseOutlined, {\n        onClick: function onClick() {\n          return deleteSubmenuLink(index, ind);\n        },\n        color: \"secondary\",\n        fontSize: \"small\",\n        variant: \"outlined\",\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 45\n        }\n      }))));\n    })))));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    component: \"span\",\n    className: \"mb-3\" // size=\"small\"\n    ,\n    color: \"primary\",\n    onClick: addNewLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 25\n    }\n  }, \"Add a New Link\"))))))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel2a-content\",\n    id: \"panel2a-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 17\n    }\n  }, \"Header Contact Links\")), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"phone\",\n    name: \"phone\",\n    label: \"Phone Number\",\n    value: headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$contac = headerContent.contact) === null || _headerContent$contac === void 0 ? void 0 : _headerContent$contac.phone,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleContactItemChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"email\",\n    name: \"email\",\n    label: \"Email Address\",\n    value: headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$contac2 = headerContent.contact) === null || _headerContent$contac2 === void 0 ? void 0 : _headerContent$contac2.email,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleContactItemChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"whatsapp\",\n    name: \"whatsapp\",\n    label: \"Whatsapp\",\n    value: headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$contac3 = headerContent.contact) === null || _headerContent$contac3 === void 0 ? void 0 : _headerContent$contac3.whatsapp,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleContactItemChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"address\",\n    name: \"address\",\n    label: \"Location\",\n    value: headerContent === null || headerContent === void 0 ? void 0 : (_headerContent$contac4 = headerContent.contact) === null || _headerContent$contac4 === void 0 ? void 0 : _headerContent$contac4.address,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleContactItemChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      marginTop: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    onClick: function onClick() {\n      return handleSubmit();\n    },\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 17\n    }\n  }, \"Update Section\")))))));\n}","map":{"version":3,"sources":["E:/laragon/www/Prism/bafco_cms/src/views/Header/Add.js"],"names":["React","Fragment","Suspense","useEffect","useState","makeStyles","Grid","MaterialButton","Card","CardHeader","CardBody","TextField","Paper","Autocomplete","ExpandMoreIcon","Accordion","AccordionSummary","AccordionDetails","Typography","API","AddCircleOutline","CloseOutlined","DragHandleOutlined","Select","MenuItem","FormControl","InputLabel","append_url_dining","append_url_room","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","UpdateHeader","classes","initialObject","menuItems","menuId","contactId","type","contact","phone","email","address","whatsapp","dragId","setDragId","submenuDragId","setSubmenuDragId","headerContent","setHeaderContent","pages","setPages","pagesFilter","setPagesFilter","selectedLang","setSelectedLang","get","then","response","a","data","length","forEach","element","obj","name","post_name","name_de","name_fr","base_url","push","console","log","err","contactdata","find","x","handleChange","event","target","value","handleMenuItemChange","e","slug","index","updatedItems","handleSubMenuItemChange","ind","updatedHeaderContent","updatedSubMenu","subMenu","alert","handleContactItemChange","updatedContact","addNewLink","filter","newObj","temp_id","order","addSubmenu","deleteSubmenuLink","i","handleDrag","ev","currentTarget","id","handleDrop","dragBox","box","dropBox","dragBoxOrder","dropBoxOrder","updatedMenuItems","map","handleSubMenuDrag","handleSubMenuDrop","updatedSubMenuItems","handleSubmit","post","status","display","justifyContent","width","heading","sort","b","preventDefault","alignItems","cursor","p","toLowerCase","newValue","option","params","z","height","border","borderRadius","margin","y","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment, Suspense, useEffect, useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport { TextField, Paper } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\n// import API from \"utils/http\";\nimport API from \"langapi/http\";\nimport {\n  AddCircleOutline,\n  CloseOutlined,\n  DragHandleOutlined,\n} from \"@material-ui/icons\";\nimport { Select, MenuItem, FormControl } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nconst append_url_dining = \"dining\";\nconst append_url_room = \"rooms\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // width:'60%',\n    // margin:'auto'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function UpdateHeader() {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n  const initialObject = {\n    menuItems: [],\n    menuId: null,\n    contactId: null,\n    type: \"header\",\n    contact: {\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      whatsapp: \"\",\n    },\n  };\n\n  const [dragId, setDragId] = useState();\n  const [submenuDragId, setSubmenuDragId] = useState();\n  const [headerContent, setHeaderContent] = useState({ ...initialObject });\n  const [pages, setPages] = useState([]);\n  const [pagesFilter, setPagesFilter] = useState([]);\n  const [selectedLang, setSelectedLang] = useState(\"en\");\n\n  useEffect(() => {\n\n    // API.get(`/pages?lang=${selectedLang}`).then((response) => {\n    API.get(`/drop-down`).then((response) => {\n      \n      let a = []\n      if(response?.data?.data?.length > 0){\n        // response.data.data.forEach(element => {\n          let pages = [] \n          response.data.data[1].forEach(element => {\n            let obj = {...element}\n            obj.name = obj.post_name\n            obj.name_de = obj.name_de || \"\"\n            obj.name_fr = obj.name_fr || \"\"\n            obj.base_url = \"dining\"\n            pages.push(obj) \n          });\n          response.data.data[0].forEach(element => {\n            let obj = {...element}\n            obj.name = obj.post_name\n            obj.name_de = obj.name_de || \"\"\n            obj.name_fr = obj.name_fr || \"\"\n            obj.base_url = \"rooms\"\n            pages.push(obj) \n          });\n\n          a = [...response?.data?.data[2],...pages]\n          console.log(a,\"element\")\n          setPages(a);\n        }\n        setPagesFilter(a);\n      }).catch(err => console.log(err));\n  }, []);\n\n  useEffect(() => {\n\n    API.get(`/common?lang=${selectedLang}`).then(response => {\n\n      const contactdata = response?.data?.data.find((x) => x.type === \"header\");\n      if(contactdata){\n        setHeaderContent(contactdata);\n      } else {\n        setHeaderContent(initialObject)\n      }\n      \n\n    }).catch(err => console.log(err));\n\n  }, [selectedLang]);\n\n  const handleChange = (event) => {\n    if (event.target.value != selectedLang) {\n      setSelectedLang(event.target.value)\n    }\n  };\n\n  const handleMenuItemChange = (e, slug, index) => {\n    let updatedItems = [...headerContent.menuItems];\n    updatedItems[index][e.target.name] = e.target.value;\n    updatedItems[index][\"slug\"] = slug;\n    setHeaderContent({ ...headerContent, menuItems: updatedItems });\n    // setPagesFilter(pagesFilter.filter(x => x.name !== e.target.value))\n  };\n\n  const handleSubMenuItemChange = (e, slug, index, ind, base_url) => {\n    // eslint-disable-next-line no-debugger\n    // debugger;\n    let updatedHeaderContent = { ...headerContent };\n    let updatedSubMenu = [...updatedHeaderContent.menuItems[index].subMenu];\n\n    if (updatedSubMenu.find((x) => x.text === e.target.value)?.text) {\n      alert(\"Submenu item already added. Please select different\");\n      return;\n    }\n\n    updatedSubMenu[ind][e.target.name] = e.target.value;\n    updatedSubMenu[ind][\"slug\"] = slug;\n    updatedSubMenu[ind][\"base_url\"] = base_url;\n    // if()\n\n    updatedHeaderContent.menuItems[index].subMenu = updatedSubMenu;\n    setHeaderContent(updatedHeaderContent);\n    // setPagesFilter(pagesFilter.filter(x => x.name !== e.target.value))\n  };\n\n  const handleContactItemChange = (e) => {\n    let updatedContact = { ...headerContent.contact };\n    updatedContact[e.target.name] = e.target.value;\n    setHeaderContent({ ...headerContent, contact: updatedContact });\n  };\n\n  const addNewLink = () => {\n    if (headerContent?.menuItems?.length > 0) {\n      setPagesFilter(\n        pagesFilter.filter(\n          (x) =>\n            x.name !==\n            headerContent?.menuItems[headerContent?.menuItems?.length - 1]?.text\n        )\n      );\n    }\n    \n    if(!headerContent.menuItems.length > 0){\n      let newObj = {...headerContent}\n      let data = {\n        text: \"\",\n        address: \"\",\n        temp_id:\n          headerContent?.menuItems[headerContent?.menuItems?.length - 1]?.order +\n          1,\n        order:\n          headerContent?.menuItems[headerContent?.menuItems?.length - 1]?.order +\n          1,\n        slug: \"\",\n      }\n      newObj.menuItems.push(data)\n      setHeaderContent(newObj)\n    } else {\n    setHeaderContent({\n      ...headerContent,\n      menuItems: [\n        ...headerContent?.menuItems,\n        {\n          text: \"\",\n          address: \"\",\n          temp_id:\n            headerContent?.menuItems[headerContent?.menuItems?.length - 1].order +\n            1,\n          order:\n            headerContent?.menuItems[headerContent?.menuItems?.length - 1].order +\n            1,\n          slug: \"\",\n        },\n      ],\n    });\n  }\n  };\n\n  const addSubmenu = (index) => {\n    setHeaderContent({\n      ...headerContent,\n      menuItems: [\n        ...headerContent.menuItems,\n        {\n          text: \"\",\n          address: \"\",\n          temp_id: headerContent.menuItems.length + 1,\n          order: headerContent.menuItems.length + 1,\n          slug: \"\",\n        },\n      ],\n    });\n\n    let updatedHeaderContent = { ...headerContent };\n\n    let subMenu = updatedHeaderContent.menuItems[index].subMenu || [];\n\n    updatedHeaderContent.menuItems[index].subMenu = [\n      ...subMenu,\n      {\n        text: \"\",\n        address: \"\",\n        base_url: \"\",\n        temp_id: subMenu.length + 1,\n        order: subMenu.length + 1,\n        slug: \"\",\n      },\n    ];\n\n    setHeaderContent(updatedHeaderContent);\n  };\n\n  const deleteSubmenuLink = (index, ind) => {\n    let updatedHeaderContent = { ...headerContent };\n    let updatedSubMenu = updatedHeaderContent.menuItems[index].subMenu?.filter(\n      (x, i) => i !== ind\n    );\n    updatedHeaderContent.menuItems[index].subMenu = updatedSubMenu;\n    setHeaderContent(updatedHeaderContent);\n  };\n\n  const handleDrag = (ev) => {\n    setDragId(ev.currentTarget.id);\n  };\n\n  const handleDrop = (ev) => {\n    const dragBox = headerContent.menuItems.find(\n      (box) => box.temp_id == dragId\n    );\n    const dropBox = headerContent.menuItems.find(\n      (box) => box.temp_id == ev.currentTarget.id\n    );\n\n    const dragBoxOrder = dragBox.order;\n    const dropBoxOrder = dropBox.order;\n\n    if (dragBoxOrder == dropBoxOrder) {\n      return;\n    }\n\n    const updatedMenuItems = headerContent.menuItems.map((box) => {\n      if (box.temp_id == dragId) {\n        box.order = dropBoxOrder;\n      }\n      if (box.temp_id == ev.currentTarget.id) {\n        box.order = dragBoxOrder;\n      }\n      return box;\n    });\n\n    setHeaderContent({ ...headerContent, menuItems: updatedMenuItems });\n  };\n\n  const handleSubMenuDrag = (ev) => {\n    setSubmenuDragId(ev.currentTarget.id);\n  };\n\n  const handleSubMenuDrop = (ev, index) => {\n    const dragBox = headerContent.menuItems[index]?.subMenu?.find(\n      (box) => box.temp_id == submenuDragId\n    );\n    const dropBox = headerContent.menuItems[index]?.subMenu?.find(\n      (box) => box.temp_id == ev.currentTarget.id\n    );\n\n    const dragBoxOrder = dragBox.order;\n    const dropBoxOrder = dropBox.order;\n\n    const updatedSubMenuItems = headerContent.menuItems[index]?.subMenu?.map(\n      (box) => {\n        if (box.temp_id == submenuDragId) {\n          box.order = dropBoxOrder;\n        }\n        if (box.temp_id == ev.currentTarget.id) {\n          box.order = dragBoxOrder;\n        }\n        return box;\n      }\n    );\n    let updatedHeaderContent = { ...headerContent };\n    updatedHeaderContent.menuItems[index].subMenu = updatedSubMenuItems;\n\n    setHeaderContent(updatedHeaderContent);\n  };\n\n  const handleSubmit = () => {\n\n    let updatedHeaderContent = { ...headerContent };\n\n    API.post(`/common?lang=${selectedLang}`, updatedHeaderContent).then(response => {\n      if (response.status === 200) {\n        alert(\"Section updated successfully !\");\n      }\n    }).catch(err => console.log(err))\n\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Card>\n          <CardHeader color=\"primary\" style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <h4 className=\"mb-0\">Update Site Header</h4>\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              style={{ width: \"20%\" }}\n            >\n\n              <InputLabel\n                id=\"language\"\n                style={{ color: \"white\" }}\n              >Select Language</InputLabel>\n\n              <Select\n                labelId=\"language\"\n                id=\"language\"\n                name=\"language\"\n                value={selectedLang}\n                label=\"Select Language\"\n                fullWidth\n                onChange={handleChange}\n                style={{ color: \"white\" }}\n              >\n\n                <MenuItem value={'en'}>En</MenuItem>\n                <MenuItem value={'fr'}>FR</MenuItem>\n                <MenuItem value={'de'}>DE</MenuItem>\n\n              </Select>\n\n            </FormControl>\n          </CardHeader>\n          <CardBody className=\"\">\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={classes.heading}>\n                  Menu Items (Drawer Menu)\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                {/* <h4 className=\"mt-2\"></h4> */}\n                <Grid container spacing={2}>\n                  {/* <Grid item xs={12}>\n                  </Grid> */}\n                  <Grid item xs={12} sm={12}>\n                    <Grid container spacing={2}>\n                      {headerContent?.menuItems\n                        ?.sort((a, b) => a.order - b.order)\n                        .map((x, index) => (\n                          <React.Fragment key={x.temp_id}>\n                            <Grid item xs={12} sm={12}>\n                              <Paper\n                                className=\"px-2 py-3 header-menu-list-item\"\n                                key={x.temp_id}\n                                id={x.temp_id}\n                                draggable\n                                onDragStart={handleDrag}\n                                onDrop={handleDrop}\n                                onDragOver={(ev) => ev.preventDefault()}\n                              >\n                                <Grid container spacing={1}>\n                                  <Grid\n                                    item\n                                    xs={12}\n                                    sm={1}\n                                    style={{\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <DragHandleOutlined\n                                      style={{ cursor: \"pointer\" }}\n                                      color=\"disabled\"\n                                    />\n                                  </Grid>\n\n                                  <Grid item xs={12} sm={4}>\n                                    {pages?.length > 0 && (\n                                      <>\n                                      {selectedLang == 'en' &&\n                                      <Autocomplete\n                                        id={`text${x.temp_id}`}\n                                        name=\"text\"\n                                        options={pagesFilter}\n                                        size=\"small\"\n                                        value={\n                                          pages.find(\n                                            (p) =>\n                                              p.name?.toLowerCase() ===\n                                              x.text?.toLowerCase()\n                                          ) || { name: \"\" }\n                                        }\n                                        onChange={(e, newValue) =>\n                                          handleMenuItemChange(\n                                            {\n                                              target: {\n                                                value: newValue?.name,\n                                                name: \"text\",\n                                              },\n                                            },\n                                            newValue?.slug,\n                                            index,\n                                            pages.find(\n                                              (p) =>\n                                                p.name?.toLowerCase() ===\n                                                newValue?.name?.toLowerCase()\n                                            )?.slug\n                                          ) || \"\"\n                                        }\n                                        getOptionLabel={(option) =>\n                                          option.name\n                                        }\n                                        // style={{ width: 300 }}\n                                        renderInput={(params) => (\n                                          <TextField\n                                            required\n                                            {...params}\n                                            label=\"Select Link Text\"\n                                            variant=\"outlined\"\n                                          />\n                                        )}\n                                      />\n                                      }\n                                    {\n                                    selectedLang == 'de' &&\n                                      <Autocomplete\n                                        id={`text${x.temp_id}`}\n                                        name=\"text\"\n                                        options={pagesFilter}\n                                        size=\"small\"\n                                        value={\n                                          pages.find(\n                                            (p) =>\n                                              p.name_de?.toLowerCase() ===\n                                              x.text?.toLowerCase()\n                                          ) || { name_de: \"\" }\n                                        }\n                                        onChange={(e, newValue) =>\n                                          \n                                          // handleMenuItemChange(\n                                          //   {\n                                          //     target: {\n                                          //       value: newValue?.name_de,\n                                          //       name: \"text\",\n                                          //     },\n                                          //   },\n                                          //   newValue?.slug,\n                                          //   index,\n                                          //   pages.find(\n                                          //     (p) =>\n                                          //       p.name_de?.toLowerCase() ===\n                                          //       newValue?.name?.toLowerCase()\n                                          //   )?.slug\n                                          // ) || \"\"\n                                          console.log(\"e, newValue\",e, newValue)\n\n                                        }\n                                        getOptionLabel={(option) =>\n                                          option.name_de\n                                        }\n                                        // style={{ width: 300 }}\n                                        renderInput={(params) => (\n                                          <TextField\n                                            required\n                                            {...params}\n                                            label=\"Select Link Text\"\n                                            variant=\"outlined\"\n                                          />\n                                        )}\n                                      />\n                                      }\n\n                                    {\n                                    selectedLang == 'fr' &&\n                                      <Autocomplete\n                                        id={`text${x.temp_id}`}\n                                        name=\"text\"\n                                        options={pagesFilter}\n                                        size=\"small\"\n                                        value={\n                                          pages.find(\n                                            (p) =>\n                                              p.name_fr?.toLowerCase() ===\n                                              x.text?.toLowerCase()\n                                          ) || { name_fr: \"\" }\n                                        }\n                                        onChange={(e, newValue) =>\n                                          handleMenuItemChange(\n                                            {\n                                              target: {\n                                                value: newValue?.name_fr,\n                                                name: \"text\",\n                                              },\n                                            },\n                                            newValue?.slug,\n                                            index,\n                                            pages.find(\n                                              (p) =>\n                                                p.name_fr?.toLowerCase() ===\n                                                newValue?.name?.toLowerCase()\n                                            )?.slug\n                                          ) || \"\"\n                                        }\n                                        getOptionLabel={(option) =>\n                                          option.name_fr\n                                        }\n                                        // style={{ width: 300 }}\n                                        renderInput={(params) => (\n                                          <TextField\n                                            required\n                                            {...params}\n                                            label=\"Select Link Text\"\n                                            variant=\"outlined\"\n                                          />\n                                        )}\n                                      />\n                                      }\n\n                                      </>\n                                    )}\n                                  </Grid>\n                                  <Grid item xs={12} sm={4}>\n                                    <TextField\n                                      required\n                                      id={`address${x.temp_id}`}\n                                      name=\"address\"\n                                      label=\"URL\"\n                                      value={\n                                        selectedLang === \"en\" ?\n\n                                        pages?.find(\n                                          (p) =>\n                                            p.name?.toLowerCase() ===\n                                            x.text?.toLowerCase()\n                                        )?.slug || \"\"\n                                        :\n                                        selectedLang === \"fr\" ?\n                                        pages?.find(\n                                          (p) =>\n                                            p.name_fr?.toLowerCase() ===\n                                            x.text?.toLowerCase()\n                                        )?.slug || \"\"\n                                        :\n                                        selectedLang === \"de\" ?\n                                        pages?.find(\n                                          (p) =>\n                                            p.name_de?.toLowerCase() ===\n                                            x.text?.toLowerCase()\n                                        )?.slug || \"\"\n                                        :\"\"\n                                      }\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      disabled\n                                      onChange={(e) =>\n                                        handleMenuItemChange(e, index)\n                                      }\n                                      size=\"small\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={12} sm={2}>\n                                    <MaterialButton\n                                      onClick={() =>\n                                        setHeaderContent({\n                                          ...headerContent,\n                                          menuItems: headerContent.menuItems.filter(\n                                            (z) => z.temp_id !== x.temp_id\n                                          ),\n                                        })\n                                      }\n                                      color=\"secondary\"\n                                      size=\"small\"\n                                      variant=\"outlined\"\n                                      style={{ height: \"100%\" }}\n                                    >\n                                      Delete Link\n                                    </MaterialButton>\n                                  </Grid>\n\n                                  <Grid\n                                    item\n                                    xs={12}\n                                    sm={1}\n                                    style={{\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <AddCircleOutline\n                                      style={{ cursor: \"pointer\" }}\n                                      titleAccess=\"Add submenu\"\n                                      onClick={() => addSubmenu(index)}\n                                      color=\"primary\"\n                                    />\n                                  </Grid>\n                                </Grid>\n\n                                {/* ************************* */}\n                                {/* SUBMENU LOGIC STARTS HERE */}\n                                {/* ************************* */}\n                                <div\n                                  className={\n                                    x.subMenu?.length > 0 ? \"\" : \"d-none\"\n                                  }\n                                  style={{\n                                    border: \"1px dashed #3f50b5\",\n                                    borderRadius: \"4px\",\n                                    margin: \"1rem 0\",\n                                    padding: \"1rem\",\n                                  }}\n                                >\n                                  <Typography color=\"primary\" variant=\"caption\">\n                                    SUBMENU\n                                  </Typography>\n                                  {x.subMenu\n                                    ?.sort((a, b) => a.order - b.order)\n                                    .map((y, ind) => (\n                                      <Paper\n                                        className=\"px-2 py-2 mt-2 header-menu-list-item\"\n                                        key={y.temp_id}\n                                        id={y.temp_id}\n                                        draggable\n                                        onDragStart={handleSubMenuDrag}\n                                        onDrop={(ev) =>\n                                          handleSubMenuDrop(ev, index)\n                                        }\n                                        onDragOver={(ev) => ev.preventDefault()}\n                                      >\n                                        <Grid container spacing={1}>\n                                          <Grid\n                                            item\n                                            xs={12}\n                                            sm={1}\n                                            style={{\n                                              display: \"flex\",\n                                              alignItems: \"center\",\n                                            }}\n                                          ></Grid>\n                                          <Grid\n                                            item\n                                            xs={12}\n                                            sm={1}\n                                            style={{\n                                              display: \"flex\",\n                                              alignItems: \"center\",\n                                            }}\n                                          >\n                                            <DragHandleOutlined\n                                              style={{ cursor: \"pointer\" }}\n                                              color=\"disabled\"\n                                            />\n                                          </Grid>\n\n                                          <Grid item xs={12} sm={4}>\n                                            {pages?.length > 0 && (\n                                              <>\n                                              {selectedLang == 'en' &&\n                                              <Autocomplete\n                                                id={`text${y.temp_id}`}\n                                                name=\"text\"\n                                                options={pages}\n                                                size=\"small\"\n                                                value={\n                                                  pages.find(\n                                                    (p) =>\n                                                      p.name?.toLowerCase() ===\n                                                      y.text?.toLowerCase()\n                                                  ) || { name: \"\" }\n                                                }\n                                                onChange={(e, newValue) =>\n                                                  \n                                                  handleSubMenuItemChange(\n                                                    {\n                                                      target: {\n                                                        value:\n                                                          newValue?.name,\n                                                        name: \"text\",\n                                                      },\n                                                    },\n                                                    newValue?.slug,\n                                                    index,\n                                                    ind,\n                                                    newValue?.base_url || \"\",\n                                                    pages.find(\n                                                      (p) =>\n                                                        p.name?.toLowerCase() ===\n                                                        newValue?.name?.toLowerCase()\n                                                    )?.slug\n                                                  ) || \"\"\n                                                }\n                                                getOptionLabel={(option) =>\n                                                  option.name\n                                                }\n                                                // style={{ width: 300 }}\n                                                renderInput={(params) => (\n                                                  <TextField\n                                                    required\n                                                    {...params}\n                                                    label=\"Select Link Text\"\n                                                    variant=\"outlined\"\n                                                  />\n                                                )}\n                                              />\n                                              }\n                                              {selectedLang == 'fr' &&\n                                              <Autocomplete\n                                                id={`text${y.temp_id}`}\n                                                name=\"text\"\n                                                options={pages}\n                                                size=\"small\"\n                                                value={\n                                                  pages.find(\n                                                    (p) =>\n                                                      p.name_fr?.toLowerCase() ===\n                                                      y.text?.toLowerCase()\n                                                  ) || { name_fr: \"\" }\n                                                }\n                                                // onChange={(e, newValue) =>\n                                                //   handleSubMenuItemChange(\n                                                //     {\n                                                //       target: {\n                                                //         value:\n                                                //           newValue?.name_fr,\n                                                //         name: \"text\",\n                                                //       },\n                                                //     },\n                                                //     newValue.slug,\n                                                //     index,\n                                                //     ind,\n                                                //     newValue.base_url || \"\",\n                                                //     pages.find(\n                                                //       (p) =>\n                                                //         p.name_fr?.toLowerCase() ===\n                                                //         newValue?.name?.toLowerCase()\n                                                //     )?.slug\n                                                //   ) || \"\"\n                                                // }\n                                                onChange={(e, newValue) =>\n                                                   handleSubMenuItemChange(\n                                                        {\n                                                          target: {\n                                                            value: newValue?.name_fr,\n                                                            name: \"text\",\n                                                          },\n                                                        },\n                                                        newValue?.slug,\n                                                        index,\n                                                        ind,\n                                                        newValue?.base_url || \"\",\n                                                        pages.find(\n                                                          (p) =>\n                                                            p.name_fr?.toLowerCase() ===\n                                                            newValue?.name?.toLowerCase()\n                                                        )?.slug\n                                                      ) || \"\"\n                                                }\n                                                getOptionLabel={(option) =>\n                                                  option?.name_fr\n                                                }\n                                                // style={{ width: 300 }}\n                                                renderInput={(params) => (\n                                                  <TextField\n                                                    required\n                                                    {...params}\n                                                    label=\"Select Link Text\"\n                                                    variant=\"outlined\"\n                                                  />\n                                                )}\n                                              />\n                                              }\n                                              {selectedLang == 'de' &&\n                                              <Autocomplete\n                                                id={`text${y.temp_id}`}\n                                                name=\"text\"\n                                                options={pages}\n                                                size=\"small\"\n                                                value={\n                                                  pages.find(\n                                                    (p) =>\n                                                      p?.name_de?.toLowerCase() ===\n                                                      y.text?.toLowerCase()\n                                                  ) || { name_de: \"\" }\n                                                }\n                                                onChange={(e, newValue) =>\n                                                  handleSubMenuItemChange(\n                                                    {\n                                                      target: {\n                                                        value:\n                                                          newValue?.name_de,\n                                                        name: \"text\",\n                                                      },\n                                                    },\n                                                    newValue?.slug,\n                                                    index,\n                                                    ind,\n                                                    newValue?.base_url || \"\",\n                                                    pages.find(\n                                                      (p) =>\n                                                        p.name_de?.toLowerCase() ===\n                                                        newValue?.name?.toLowerCase()\n                                                    )?.slug\n                                                  ) || \"\"\n                                                }\n                                                getOptionLabel={(option) =>\n                                                  option?.name_de\n                                                }\n                                                // style={{ width: 300 }}\n                                                renderInput={(params) => (\n                                                  <TextField\n                                                    required\n                                                    {...params}\n                                                    label=\"Select Link Text\"\n                                                    variant=\"outlined\"\n                                                  />\n                                                )}\n                                              />\n                                              }\n                                              </>\n                                            )}\n                                          </Grid>\n                                          <Grid item xs={12} sm={4}>\n                                            <TextField\n                                              required\n                                              id={`address${y.temp_id}`}\n                                              name=\"address\"\n                                              label=\"URL\"\n                                              value={\n                                                selectedLang === \"en\" ?\n                                                pages?.find(\n                                                  (p) =>\n                                                    p.name?.toLowerCase() ===\n                                                    y.text?.toLowerCase()\n                                                )?.slug || \"\"\n                                                :\n                                                selectedLang === \"fr\" ?\n                                                pages?.find(\n                                                  (p) =>\n                                                    p.name_fr?.toLowerCase() ===\n                                                    y.text?.toLowerCase()\n                                                )?.slug || \"\"\n                                                :\n                                                selectedLang === \"de\" ?\n                                                pages?.find(\n                                                  (p) =>\n                                                    p.name_de?.toLowerCase() ===\n                                                    y.text?.toLowerCase()\n                                                )?.slug || \"\"\n                                                :\"\"\n                                              }\n                                              variant=\"outlined\"\n                                              fullWidth\n                                              disabled\n                                              onChange={(e) =>\n                                                handleSubMenuItemChange(e, ind)\n                                              }\n                                              size=\"small\"\n                                            />\n                                          </Grid>\n                                          <Grid\n                                            item\n                                            xs={12}\n                                            sm={1}\n                                            style={{\n                                              display: \"flex\",\n                                              alignItems: \"center\",\n                                            }}\n                                          >\n                                            <CloseOutlined\n                                              onClick={() =>\n                                                deleteSubmenuLink(index, ind)\n                                              }\n                                              color=\"secondary\"\n                                              fontSize=\"small\"\n                                              variant=\"outlined\"\n                                              style={{ cursor: \"pointer\" }}\n                                            />\n                                          </Grid>\n\n                                          {/* <Grid item xs={12} sm={1} style={{ display: 'flex', alignItems: 'center' }}>\n                                        <AddCircleOutline style={{ cursor: 'pointer' }} onClick={() => addSubmenu(ind)} color=\"primary\" />\n                                      </Grid> */}\n                                        </Grid>\n                                      </Paper>\n                                    ))}\n                                </div>\n                                {/* ************************* */}\n                                {/* SUBMENU LOGIC ENDS HERE */}\n                                {/* ************************* */}\n                              </Paper>\n                            </Grid>\n                          </React.Fragment>\n                        ))}\n\n                      <Grid item xs={12}>\n                        <MaterialButton\n                          variant=\"outlined\"\n                          component=\"span\"\n                          className={\"mb-3\"}\n                          // size=\"small\"\n                          color=\"primary\"\n                          onClick={addNewLink}\n                        >\n                          Add a New Link\n                        </MaterialButton>\n                      </Grid>\n                      {/* <Grid\n                        item\n                        xs={12}\n                        style={{\n                          alignItems: \"flex-end\",\n                          display: \"flex\",\n                          justifyContent: \"flex-end\",\n                        }}\n                      >\n                        <MaterialButton\n                          disabled={headerContent.menuItems?.length < 1}\n                          onClick={() => handleSubmit(\"menuItems\")}\n                          color=\"primary\"\n                          variant=\"contained\"\n                        >\n                          Update Section\n                        </MaterialButton>\n                      </Grid> */}\n                    </Grid>\n                  </Grid>\n                  {/* <Grid item xs={12} sm={4}>\n                    <p>Drag and Drop the items to Re-Arrange the order</p>\n                    {\n                      headerContent.menuItems?.length > 0 ?\n\n                        <Paper>\n                          <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            {\n                              headerContent?.menuItems?.sort((a, b) => a.order - b.order).map(x => (\n                                <ListItem key={x.text} style={{ borderBottom: '1px solid #ddd', zIndex: 9999 }} button id={x.temp_id} draggable onDragStart={handleDrag} onDrop={handleDrop} onDragOver={(ev) => ev.preventDefault()} >\n                                  <ListItemText primary={x.text} />\n                                </ListItem>\n                              ))\n                            }\n                          </List>\n                        </Paper>\n                        :\n                        <em>No items added yet</em>\n                    }\n                  </Grid> */}\n                </Grid>\n              </AccordionDetails>\n            </Accordion>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel2a-content\"\n                id=\"panel2a-header\"\n              >\n                <Typography className={classes.heading}>\n                  Header Contact Links\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                {/* <h4 className=\"mt-2\"></h4> */}\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"phone\"\n                      name=\"phone\"\n                      label=\"Phone Number\"\n                      value={headerContent?.contact?.phone}\n                      variant=\"outlined\"\n                      fullWidth\n                      onChange={handleContactItemChange}\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"email\"\n                      name=\"email\"\n                      label=\"Email Address\"\n                      value={headerContent?.contact?.email}\n                      variant=\"outlined\"\n                      fullWidth\n                      onChange={handleContactItemChange}\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"whatsapp\"\n                      name=\"whatsapp\"\n                      label=\"Whatsapp\"\n                      value={headerContent?.contact?.whatsapp}\n                      variant=\"outlined\"\n                      fullWidth\n                      onChange={handleContactItemChange}\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"address\"\n                      name=\"address\"\n                      label=\"Location\"\n                      value={headerContent?.contact?.address}\n                      variant=\"outlined\"\n                      fullWidth\n                      onChange={handleContactItemChange}\n                      size=\"small\"\n                    />\n                  </Grid>\n                </Grid>\n              </AccordionDetails>\n            </Accordion>\n            <Grid container spacing={2} style={{ marginTop: '30px' }}>\n              <Grid item xs={12} sm={12}>\n                <MaterialButton\n                  onClick={() => handleSubmit()}\n                  color=\"primary\"\n                  variant=\"contained\"\n                >\n                  Update Section\n                </MaterialButton>\n              </Grid>\n            </Grid>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}