{"ast":null,"code":"import _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\src\\\\views\\\\VariationValues\\\\Add.js\";\nimport React, { Fragment, useEffect, useState } from \"react\"; //Suspense\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField } from \"@material-ui/core\";\nimport CKEditor from \"ckeditor4-react\";\nimport { Image } from \"@material-ui/icons\";\nimport LangAPI from \"langapi/http\";\nimport { useParams, withRouter, useLocation } from \"react-router-dom\";\nimport GalleryDialog from \"views/Common/GalleryDialog\";\nvar website_url = \"https://fishermanscove-resort.com/blog-inner/\";\nvar append_url = \"blog-inner\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default withRouter(function AddSubCategory(props) {\n  var _this = this;\n\n  var _useLocation = useLocation(),\n      search = _useLocation.search;\n\n  var query = new URLSearchParams(search);\n  var lang = query.get('lang');\n  var classes = useStyles();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var initialObject = {\n    name: \"\",\n    route: \"\",\n    variation_id: \"\",\n    type: 1,\n    type_value: \"\"\n  };\n\n  var _useState = useState(_objectSpread({}, initialObject)),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showGallery = _useState4[0],\n      setShowGallery = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSingle = _useState6[0],\n      setIsSingle = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isEdit = _useState8[0],\n      setIsEdit = _useState8[1];\n\n  var _useState9 = useState(lang || \"en\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedLang = _useState10[0],\n      setSelectedLang = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      veriations = _useState12[0],\n      setVeriations = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      imagesData = _useState14[0],\n      setImagesData = _useState14[1];\n\n  useEffect(function () {\n    if (id && id != null) {\n      setIsEdit(true);\n      LangAPI.get(\"/variation_values/\".concat(id, \"?lang=\").concat(selectedLang)).then(function (response) {\n        if (response.status === 200) {\n          var _response$data, _response$data2;\n\n          var data = _objectSpread({}, response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data);\n\n          console.log(\"response?.data?.data\", response === null || response === void 0 ? void 0 : response.data); // data.route = website_url + data.route;\n\n          if (response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data) {\n            setRoom(_objectSpread(_objectSpread({}, room), data));\n          } else {\n            setRoom(_objectSpread({}, initialObject));\n          }\n        }\n      });\n    }\n\n    getVeriations();\n\n    if (!imagesData.length > 0) {\n      getGalleryImages();\n    }\n  }, [selectedLang]);\n\n  var getGalleryImages = function getGalleryImages() {\n    LangAPI.get(\"/uploads\").then(function (response) {\n      if (response.status === 200) {\n        var _response$data3, _response$data3$data;\n\n        setImagesData((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$data = _response$data3.data) === null || _response$data3$data === void 0 ? void 0 : _response$data3$data.map(function (x) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: false\n          });\n        }));\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  var handleImageSelect = function handleImageSelect(e, index) {\n    console.log(\"Image:: \", imagesData[index].avatar);\n\n    if (e.target.checked) {\n      if (isSingle) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          type_value: imagesData[index].avatar\n        })); // console.log()\n\n        setTimeout(function () {\n          setShowGallery(false);\n        }, 500);\n      }\n\n      var imagesDataUpdated = imagesData.map(function (x, i) {\n        if (i === index) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: true\n          });\n        } else {\n          return x;\n        }\n      });\n      setImagesData(imagesDataUpdated); // }\n    } else {\n      // if (isSingle) {\n      //     setRoom({ ...initialObject, type_value: \"\" });\n      //     setThumbnailPreview(\"\");\n      // }\n      setImagesData(imagesData.map(function (x, i) {\n        if (i === index) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: false\n          });\n        } else {\n          return x;\n        }\n      }));\n    }\n  };\n\n  var getVeriations = function getVeriations() {\n    LangAPI.get(\"/variations\").then(function (response) {\n      if (response.status === 200) {\n        setVeriations(response.data);\n      }\n    });\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    updatedRoom[e.target.name] = e.target.value;\n    setRoom(updatedRoom);\n  }; // const handleTypeValueChange = (e) => {\n  //     let updatedRoom = { ...room };\n  //     updatedRoom[e.target.name] = e.target.value;\n  //     setRoom(updatedRoom);\n  // };\n\n\n  var handleSlugChange = function handleSlugChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    var updatedValue = e.target.value.replace(/\\s+/g, \"-\");\n    updatedValue = updatedValue.replace(/--/g, \"-\");\n    updatedRoom[e.target.name] = updatedValue.toLowerCase();\n    setRoom(updatedRoom);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var finalRoom = room;\n\n    if (!finalRoom.name || finalRoom.name == \"\") {\n      alert(\"Please Enter name before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.route || finalRoom.route == \"\") {\n      alert(\"Please Enter Route before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.variation_id || finalRoom.variation_id == \"\") {\n      alert(\"Please Select Variation before Submiting\");\n      return false;\n    }\n\n    if (!finalRoom.type_value || finalRoom.type_value == \"\") {\n      alert(\"Please Enter Type Value before Submiting\");\n      return false;\n    }\n\n    var token = localStorage.getItem(\"authToken\") || \"\";\n    LangAPI.post(\"/variation_values?lang=\".concat(selectedLang), finalRoom, {\n      headers: {\n        'Authorization': \"Bearer \".concat(token)\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Variation Value Added\");\n        setRoom(_objectSpread({}, initialObject));\n        props.history.push(\"/admin/variation-values\");\n      }\n    });\n  };\n\n  var handleChangeCategory = function handleChangeCategory(event) {\n    if (event.target.value != room.variation_id) {\n      var updatedRoom = _objectSpread({}, room);\n\n      updatedRoom.variation_id = event.target.value;\n      setRoom(updatedRoom);\n    }\n  };\n\n  var handleChangeType = function handleChangeType(event) {\n    if (event.target.value != room.type) {\n      var updatedRoom = _objectSpread({}, room);\n\n      updatedRoom.type = event.target.value;\n      updatedRoom.type_value = \"\";\n      setRoom(updatedRoom);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"Add Variation Item\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, \"General Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"name\",\n    name: \"name\",\n    label: \"Name\",\n    value: room.name,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"route\",\n    name: \"route\",\n    label: \"Route\",\n    value: room.route,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleSlugChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      width: \"100%\",\n      color: \"\"\n    } // fullWidth\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"Variation_id\",\n    style: {\n      color: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 41\n    }\n  }, \"Select Type\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"Variation\",\n    id: \"Variation\",\n    name: \"type\",\n    value: room.type,\n    label: \"Select Type\",\n    fullWidth: true,\n    style: {\n      color: \"\"\n    },\n    onChange: handleChangeType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: '1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 45\n    }\n  }, \"Plain Text\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 45\n    }\n  }, \"Text With Color Code\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: '3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 45\n    }\n  }, \"Text With Image\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      width: \"100%\",\n      color: \"\"\n    } // fullWidth\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"Variation_id\",\n    style: {\n      color: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 41\n    }\n  }, \"Select Variation\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"Variation\",\n    id: \"Variation\",\n    name: \"variation_id\",\n    value: room.variation_id,\n    label: \"Select Variation\",\n    fullWidth: true,\n    style: {\n      color: \"\"\n    },\n    onChange: handleChangeCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 41\n    }\n  }, veriations === null || veriations === void 0 ? void 0 : veriations.map(function (veriation) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: veriation.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 49\n      }\n    }, veriation.name);\n  })))))), room.type == 3 ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnail-preview-wrapper img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 41\n    }\n  }, !isEdit ? room.type_value && room.type_value !== \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n    src: room.type_value,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./../../assets/img/placeholder.png\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 49\n    }\n  }) : typeof room.type_value === typeof 0 ?\n  /*#__PURE__*/\n  // room.thumbnail && room.thumbnail !== \"\" ?\n  React.createElement(\"img\", {\n    src: room.type_value,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: room.type_value,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(Image, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 60\n      }\n    }),\n    className: \"mt-1\",\n    fullWidth: true,\n    onClick: function onClick() {\n      setIsSingle(true);\n      setShowGallery(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 45\n    }\n  }, \"Upload Image\"))))) : /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"type_value\",\n    name: \"type_value\",\n    label: \"type value\",\n    value: room.type_value,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    helperText: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clearfix clear-fix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(GalleryDialog, {\n    open: showGallery,\n    handleImageSelect: handleImageSelect,\n    handleClose: function handleClose() {\n      setShowGallery(false);\n    },\n    refreshGallery: getGalleryImages,\n    data: imagesData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    onClick: handleSubmit,\n    style: {\n      \"float\": \"right\"\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n});","map":{"version":3,"sources":["E:/laragon/www/Prism/gymShark/gymShark_cms/src/views/VariationValues/Add.js"],"names":["React","Fragment","useEffect","useState","makeStyles","InputLabel","Grid","MaterialButton","Card","CardHeader","CardBody","FormControl","FormControlLabel","MenuItem","Radio","RadioGroup","Select","TextField","CKEditor","Image","LangAPI","useParams","withRouter","useLocation","GalleryDialog","website_url","append_url","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","AddSubCategory","props","search","query","URLSearchParams","lang","get","classes","id","initialObject","name","route","variation_id","type","type_value","room","setRoom","showGallery","setShowGallery","isSingle","setIsSingle","isEdit","setIsEdit","selectedLang","setSelectedLang","veriations","setVeriations","imagesData","setImagesData","then","response","status","data","console","log","getVeriations","length","getGalleryImages","map","x","isChecked","err","handleImageSelect","e","index","avatar","target","checked","setTimeout","imagesDataUpdated","i","handleInputChange","updatedRoom","value","handleSlugChange","updatedValue","replace","toLowerCase","handleSubmit","finalRoom","alert","token","localStorage","getItem","post","headers","history","push","handleChangeCategory","event","handleChangeType","fontWeight","display","width","veriation","alt_text","require"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD,C,CAA8D;;AAC9D,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,QAAxC,EAAkDC,KAAlD,EAAyDC,UAAzD,EAAqEC,MAArE,EAA6EC,SAA7E,QAA+F,mBAA/F;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,WAAhC,QAAmD,kBAAnD;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,IAAMC,WAAW,GAAG,+CAApB;AACA,IAAMC,UAAU,GAAG,YAAnB;AAEA,IAAMC,SAAS,GAAGvB,UAAU,CAAC,UAACwB,KAAD;AAAA,SAAY;AACrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR,KAD+B;AAIrCC,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADN;AAEHC,MAAAA,SAAS,EAAE,QAFR;AAGHC,MAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHvB;AAJ8B,GAAZ;AAAA,CAAD,CAA5B;AAWA,eAAehB,UAAU,CAAC,SAASiB,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AACrD,qBAAiBjB,WAAW,EAA5B;AAAA,MAAMkB,MAAN,gBAAMA,MAAN;;AACA,MAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBF,MAApB,CAAd;AACA,MAAMG,IAAI,GAAGF,KAAK,CAACG,GAAN,CAAU,MAAV,CAAb;AACA,MAAMC,OAAO,GAAGnB,SAAS,EAAzB;;AACA,mBAAaN,SAAS,EAAtB;AAAA,MAAM0B,EAAN,cAAMA,EAAN;;AAEA,MAAMC,aAAa,GAAG;AAClBC,IAAAA,IAAI,EAAE,EADY;AAElBC,IAAAA,KAAK,EAAE,EAFW;AAGlBC,IAAAA,YAAY,EAAE,EAHI;AAIlBC,IAAAA,IAAI,EAAE,CAJY;AAKlBC,IAAAA,UAAU,EAAE;AALM,GAAtB;;AAOA,kBAAwBlD,QAAQ,mBAAM6C,aAAN,EAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAsCpD,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOqD,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAgCtD,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOuD,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4BxD,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOyD,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAwC1D,QAAQ,CAACyC,IAAI,IAAI,IAAT,CAAhD;AAAA;AAAA,MAAOkB,YAAP;AAAA,MAAqBC,eAArB;;AACA,oBAAoC5D,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAO6D,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAAoC9D,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAO+D,UAAP;AAAA,MAAmBC,aAAnB;;AAEAjE,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI6C,EAAE,IAAIA,EAAE,IAAI,IAAhB,EAAsB;AAClBc,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAzC,MAAAA,OAAO,CAACyB,GAAR,6BAAiCE,EAAjC,mBAA4Ce,YAA5C,GAA4DM,IAA5D,CAAiE,UAACC,QAAD,EAAc;AAC3E,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAAA;;AACzB,cAAIC,IAAI,qBAAQF,QAAR,aAAQA,QAAR,yCAAQA,QAAQ,CAAEE,IAAlB,mDAAQ,eAAgBA,IAAxB,CAAR;;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,QAApC,aAAoCA,QAApC,uBAAoCA,QAAQ,CAAEE,IAA9C,EAFyB,CAGzB;;AACA,cAAIF,QAAJ,aAAIA,QAAJ,0CAAIA,QAAQ,CAAEE,IAAd,oDAAI,gBAAgBA,IAApB,EAA0B;AACtBhB,YAAAA,OAAO,iCAAMD,IAAN,GAAeiB,IAAf,EAAP;AACH,WAFD,MAEO;AACHhB,YAAAA,OAAO,mBAAMP,aAAN,EAAP;AACH;AACJ;AACJ,OAXD;AAYH;;AAED0B,IAAAA,aAAa;;AACb,QAAI,CAACR,UAAU,CAACS,MAAZ,GAAqB,CAAzB,EAA4B;AACxBC,MAAAA,gBAAgB;AACnB;AAEJ,GAtBQ,EAsBN,CAACd,YAAD,CAtBM,CAAT;;AAwBA,MAAMc,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BxD,IAAAA,OAAO,CAACyB,GAAR,aAAwBuB,IAAxB,CAA6B,UAACC,QAAD,EAAc;AACvC,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAAA;;AACzBH,QAAAA,aAAa,oBAACE,QAAQ,CAACE,IAAV,4EAAC,gBAAeA,IAAhB,yDAAC,qBAAqBM,GAArB,CAAyB,UAACC,CAAD;AAAA,iDAAaA,CAAb;AAAgBC,YAAAA,SAAS,EAAE;AAA3B;AAAA,SAAzB,CAAD,CAAb;AACH;AACJ,KAJD,WAIS,UAAAC,GAAG;AAAA,aAAIR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAAJ;AAAA,KAJZ;AAKH,GAND;;AAQA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAIC,KAAJ,EAAc;AACpCX,IAAAA,OAAO,CAACC,GAAR,aAAwBP,UAAU,CAACiB,KAAD,CAAV,CAAkBC,MAA1C;;AACA,QAAIF,CAAC,CAACG,MAAF,CAASC,OAAb,EAAsB;AAClB,UAAI5B,QAAJ,EAAc;AACVH,QAAAA,OAAO,iCAAMD,IAAN;AAAYD,UAAAA,UAAU,EAAEa,UAAU,CAACiB,KAAD,CAAV,CAAkBC;AAA1C,WAAP,CADU,CAEV;;AACAG,QAAAA,UAAU,CAAC,YAAM;AACb9B,UAAAA,cAAc,CAAC,KAAD,CAAd;AACH,SAFS,EAEP,GAFO,CAAV;AAGH;;AACD,UAAI+B,iBAAiB,GAAGtB,UAAU,CAACW,GAAX,CAAe,UAACC,CAAD,EAAIW,CAAJ,EAAU;AAC7C,YAAIA,CAAC,KAAKN,KAAV,EAAiB;AACb,iDACOL,CADP;AAEIC,YAAAA,SAAS,EAAE;AAFf;AAIH,SALD,MAKO;AACH,iBAAOD,CAAP;AACH;AACJ,OATuB,CAAxB;AAUAX,MAAAA,aAAa,CAACqB,iBAAD,CAAb,CAlBkB,CAmBlB;AACH,KApBD,MAoBO;AACH;AACA;AACA;AACA;AACArB,MAAAA,aAAa,CACTD,UAAU,CAACW,GAAX,CAAe,UAACC,CAAD,EAAIW,CAAJ,EAAU;AACrB,YAAIA,CAAC,KAAKN,KAAV,EAAiB;AACb,iDACOL,CADP;AAEIC,YAAAA,SAAS,EAAE;AAFf;AAIH,SALD,MAKO;AACH,iBAAOD,CAAP;AACH;AACJ,OATD,CADS,CAAb;AAYH;AACJ,GAxCD;;AA0CA,MAAMJ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBtD,IAAAA,OAAO,CAACyB,GAAR,gBAA2BuB,IAA3B,CAAgC,UAACC,QAAD,EAAc;AAC1C,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBL,QAAAA,aAAa,CAACI,QAAQ,CAACE,IAAV,CAAb;AACH;AACJ,KAJD;AAKH,GAND;;AAQA,MAAMmB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,CAAD,EAAO;AAC7B,QAAIS,WAAW,qBAAQrC,IAAR,CAAf;;AACAqC,IAAAA,WAAW,CAACT,CAAC,CAACG,MAAF,CAASpC,IAAV,CAAX,GAA6BiC,CAAC,CAACG,MAAF,CAASO,KAAtC;AACArC,IAAAA,OAAO,CAACoC,WAAD,CAAP;AACH,GAJD,CAxGqD,CA6GrD;AACA;AACA;AACA;AACA;;;AAEA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACX,CAAD,EAAO;AAC5B,QAAIS,WAAW,qBAAQrC,IAAR,CAAf;;AACA,QAAIwC,YAAY,GAAGZ,CAAC,CAACG,MAAF,CAASO,KAAT,CAAeG,OAAf,CAAuB,MAAvB,EAA+B,GAA/B,CAAnB;AACAD,IAAAA,YAAY,GAAGA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4B,GAA5B,CAAf;AACAJ,IAAAA,WAAW,CAACT,CAAC,CAACG,MAAF,CAASpC,IAAV,CAAX,GAA6B6C,YAAY,CAACE,WAAb,EAA7B;AACAzC,IAAAA,OAAO,CAACoC,WAAD,CAAP;AACH,GAND;;AAQA,MAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAIC,SAAS,GAAG5C,IAAhB;;AACA,QAAI,CAAC4C,SAAS,CAACjD,IAAX,IAAmBiD,SAAS,CAACjD,IAAV,IAAkB,EAAzC,EAA6C;AACzCkD,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACA,aAAO,KAAP;AACH;;AACD,QAAI,CAACD,SAAS,CAAChD,KAAX,IAAoBgD,SAAS,CAAChD,KAAV,IAAmB,EAA3C,EAA+C;AAC3CiD,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACA,aAAO,KAAP;AACH;;AACD,QAAI,CAACD,SAAS,CAAC/C,YAAX,IAA2B+C,SAAS,CAAC/C,YAAV,IAA0B,EAAzD,EAA6D;AACzDgD,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACA,aAAO,KAAP;AACH;;AACD,QAAI,CAACD,SAAS,CAAC7C,UAAX,IAAyB6C,SAAS,CAAC7C,UAAV,IAAwB,EAArD,EAAyD;AACrD8C,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACA,aAAO,KAAP;AACH;;AAED,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,EAAjD;AAEAlF,IAAAA,OAAO,CAACmF,IAAR,kCAAuCzC,YAAvC,GAAuDoC,SAAvD,EAAkE;AAC9DM,MAAAA,OAAO,EAAE;AACL,0CAA2BJ,KAA3B;AADK;AADqD,KAAlE,EAIGhC,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB6B,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACA5C,QAAAA,OAAO,mBAAMP,aAAN,EAAP;AACAR,QAAAA,KAAK,CAACiE,OAAN,CAAcC,IAAd,CAAmB,yBAAnB;AACH;AACJ,KAVD;AAWH,GAhCD;;AAkCA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACpC,QAAIA,KAAK,CAACvB,MAAN,CAAaO,KAAb,IAAsBtC,IAAI,CAACH,YAA/B,EAA6C;AACzC,UAAIwC,WAAW,qBAAQrC,IAAR,CAAf;;AACAqC,MAAAA,WAAW,CAACxC,YAAZ,GAA2ByD,KAAK,CAACvB,MAAN,CAAaO,KAAxC;AACArC,MAAAA,OAAO,CAACoC,WAAD,CAAP;AACH;AACJ,GAND;;AAOA,MAAMkB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,KAAD,EAAW;AAChC,QAAIA,KAAK,CAACvB,MAAN,CAAaO,KAAb,IAAsBtC,IAAI,CAACF,IAA/B,EAAqC;AACjC,UAAIuC,WAAW,qBAAQrC,IAAR,CAAf;;AACAqC,MAAAA,WAAW,CAACvC,IAAZ,GAAmBwD,KAAK,CAACvB,MAAN,CAAaO,KAAhC;AACAD,MAAAA,WAAW,CAACtC,UAAZ,GAAyB,EAAzB;AACAE,MAAAA,OAAO,CAACoC,WAAD,CAAP;AACH;AACJ,GAPD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAE7C,OAAO,CAACjB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAC,mDAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,IAAA,KAAK,EAAE;AAAEiF,MAAAA,UAAU,EAAE;AAAd,KAAX;AAAkC,IAAA,SAAS,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CADJ,eAkCI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAU,EAAE;AAAd,KAAX;AAAkC,IAAA,SAAS,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAII,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAC,MAJV;AAKI,IAAA,KAAK,EAAEzD,IAAI,CAACL,IALhB;AAMI,IAAA,OAAO,EAAC,UANZ;AAOI,IAAA,SAAS,MAPb;AAQI,IAAA,QAAQ,EAAEyC,iBARd;AASI,IAAA,IAAI,EAAC,OATT;AAUI,IAAA,UAAU,EAAE,EAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eA6BI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,KAAK,EAAEpC,IAAI,CAACJ,KAJhB;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,QAAQ,EAAE2C,gBAPd;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,UAAU,EAAE,EAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA7BJ,eA0CI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAAE,MAAT;AAAiB7E,MAAAA,KAAK,EAAE;AAAxB,KAHX,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,cAAf;AACI,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,eASI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,EAAE,EAAC,WAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAEmB,IAAI,CAACF,IAJhB;AAKI,IAAA,KAAK,EAAC,aALV;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,KAAK,EAAE;AAAEjB,MAAAA,KAAK,EAAE;AAAT,KAPX;AAQI,IAAA,QAAQ,EAAE0E,gBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXJ,eAYI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZJ,CATJ,CADJ,CA1CJ,eAqEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE,MAAT;AAAiB7E,MAAAA,KAAK,EAAE;AAAxB,KAHX,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,cAAf;AACI,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eASI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,EAAE,EAAC,WAFP;AAGI,IAAA,IAAI,EAAC,cAHT;AAII,IAAA,KAAK,EAAEmB,IAAI,CAACH,YAJhB;AAKI,IAAA,KAAK,EAAC,kBALV;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,KAAK,EAAE;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAPX;AAQI,IAAA,QAAQ,EAAEwE,oBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUK3C,UAVL,aAUKA,UAVL,uBAUKA,UAAU,CAAEa,GAAZ,CAAgB,UAACoC,SAAD;AAAA,wBACb,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,SAAS,CAAClE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCkE,SAAS,CAAChE,IAA1C,CADa;AAAA,GAAhB,CAVL,CATJ,CADJ,CArEJ,CADJ,CADJ,EAmGKK,IAAI,CAACF,IAAL,IAAa,CAAb,gBACG,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACQ,MAAD,GAAWN,IAAI,CAACD,UAAL,IAAmBC,IAAI,CAACD,UAAL,KAAoB,EAAvC,gBACR;AAAK,IAAA,GAAG,EAAEC,IAAI,CAACD,UAAf;AAA2B,IAAA,GAAG,EAAEC,IAAI,CAAC4D,QAAL,IAAiB,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAGR;AACI,IAAA,GAAG,EAAEC,OAAO,CAAC,oCAAD,CADhB;AAEI,IAAA,GAAG,EAAC,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,GAQG,OAAO7D,IAAI,CAACD,UAAZ,KAA2B,OAAO,CAAlC;AAAA;AACA;AACA;AAAK,IAAA,GAAG,EAAEC,IAAI,CAACD,UAAf;AAA2B,IAAA,GAAG,EAAEC,IAAI,CAAC4D,QAAL,IAAiB,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,gBAIA;AAAK,IAAA,GAAG,EAAE5D,IAAI,CAACD,UAAf;AAA2B,IAAA,GAAG,EAAEC,IAAI,CAAC4D,QAAL,IAAiB,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbR,CADJ,eAiBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf;AAII,IAAA,SAAS,EAAC,MAJd;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,OAAO,EAAE,mBAAM;AACXvD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAjBJ,CADJ,CADJ,CADH,gBAuCG,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,YADP;AAEI,IAAA,IAAI,EAAC,YAFT;AAGI,IAAA,KAAK,EAAC,YAHV;AAII,IAAA,KAAK,EAAEH,IAAI,CAACD,UAJhB;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,QAAQ,EAAEqC,iBAPd;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,UAAU,EAAE,EAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA1IR,eAwJI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxJJ,CAJJ,eAgKI,oBAAC,aAAD;AACI,IAAA,IAAI,EAAElC,WADV;AACuB,IAAA,iBAAiB,EAAEyB,iBAD1C;AAC6D,IAAA,WAAW,EAAE,uBAAM;AACxExB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAHL;AAII,IAAA,cAAc,EAAEmB,gBAJpB;AAKI,IAAA,IAAI,EAAEV,UALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhKJ,eAuKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvKJ,CAlCJ,CADJ,eA6TI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,OAAO,EAAE+B,YADb;AAEI,IAAA,KAAK,EAAE;AAAE,eAAO;AAAT,KAFX;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,IAAI,EAAC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,CA7TJ,CADJ;AA6UH,CAzfwB,CAAzB","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"; //Suspense\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField, } from \"@material-ui/core\";\nimport CKEditor from \"ckeditor4-react\";\nimport { Image } from \"@material-ui/icons\";\nimport LangAPI from \"langapi/http\";\n\nimport { useParams, withRouter, useLocation } from \"react-router-dom\";\nimport GalleryDialog from \"views/Common/GalleryDialog\";\n\nconst website_url = \"https://fishermanscove-resort.com/blog-inner/\";\nconst append_url = \"blog-inner\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default withRouter(function AddSubCategory(props) {\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const lang = query.get('lang');\n    const classes = useStyles();\n    let { id } = useParams();\n\n    const initialObject = {\n        name: \"\",\n        route: \"\",\n        variation_id: \"\",\n        type: 1,\n        type_value: \"\"\n    };\n    const [room, setRoom] = useState({ ...initialObject });\n    const [showGallery, setShowGallery] = useState(false);\n    const [isSingle, setIsSingle] = useState(false);\n    const [isEdit, setIsEdit] = useState(false);\n    const [selectedLang, setSelectedLang] = useState(lang || \"en\");\n    const [veriations, setVeriations] = useState([]);\n    const [imagesData, setImagesData] = useState([]);\n\n    useEffect(() => {\n        if (id && id != null) {\n            setIsEdit(true);\n            LangAPI.get(`/variation_values/${id}?lang=${selectedLang}`).then((response) => {\n                if (response.status === 200) {\n                    let data = { ...response?.data?.data };\n                    console.log(\"response?.data?.data\", response?.data)\n                    // data.route = website_url + data.route;\n                    if (response?.data?.data) {\n                        setRoom({ ...room, ...data });\n                    } else {\n                        setRoom({ ...initialObject });\n                    }\n                }\n            });\n        }\n\n        getVeriations();\n        if (!imagesData.length > 0) {\n            getGalleryImages();\n        }\n\n    }, [selectedLang]);\n\n    const getGalleryImages = () => {\n        LangAPI.get(`/uploads`).then((response) => {\n            if (response.status === 200) {\n                setImagesData(response.data?.data?.map((x) => ({ ...x, isChecked: false })));\n            }\n        }).catch(err => console.log(err));\n    };\n\n    const handleImageSelect = (e, index) => {\n        console.log(`Image:: `, imagesData[index].avatar)\n        if (e.target.checked) {\n            if (isSingle) { \n                setRoom({ ...room, type_value: imagesData[index].avatar });\n                // console.log()\n                setTimeout(() => {\n                    setShowGallery(false);\n                }, 500);\n            }\n            let imagesDataUpdated = imagesData.map((x, i) => {\n                if (i === index) {\n                    return {\n                        ...x,\n                        isChecked: true,\n                    };\n                } else {\n                    return x;\n                }\n            });\n            setImagesData(imagesDataUpdated);\n            // }\n        } else {\n            // if (isSingle) {\n            //     setRoom({ ...initialObject, type_value: \"\" });\n            //     setThumbnailPreview(\"\");\n            // }\n            setImagesData(\n                imagesData.map((x, i) => {\n                    if (i === index) {\n                        return {\n                            ...x,\n                            isChecked: false,\n                        };\n                    } else {\n                        return x;\n                    }\n                })\n            );\n        }\n    };\n\n    const getVeriations = () => {\n        LangAPI.get(`/variations`).then((response) => {\n            if (response.status === 200) {\n                setVeriations(response.data);\n            }\n        });\n    };\n\n    const handleInputChange = (e) => {\n        let updatedRoom = { ...room };\n        updatedRoom[e.target.name] = e.target.value;\n        setRoom(updatedRoom);\n    };\n    // const handleTypeValueChange = (e) => {\n    //     let updatedRoom = { ...room };\n    //     updatedRoom[e.target.name] = e.target.value;\n    //     setRoom(updatedRoom);\n    // };\n\n    const handleSlugChange = (e) => {\n        let updatedRoom = { ...room };\n        let updatedValue = e.target.value.replace(/\\s+/g, \"-\");\n        updatedValue = updatedValue.replace(/--/g, \"-\");\n        updatedRoom[e.target.name] = updatedValue.toLowerCase();\n        setRoom(updatedRoom);\n    };\n\n    const handleSubmit = () => {\n        let finalRoom = room;\n        if (!finalRoom.name || finalRoom.name == \"\") {\n            alert(\"Please Enter name before Submiting\")\n            return false;\n        }\n        if (!finalRoom.route || finalRoom.route == \"\") {\n            alert(\"Please Enter Route before Submiting\")\n            return false;\n        }\n        if (!finalRoom.variation_id || finalRoom.variation_id == \"\") {\n            alert(\"Please Select Variation before Submiting\")\n            return false;\n        }\n        if (!finalRoom.type_value || finalRoom.type_value == \"\") {\n            alert(\"Please Enter Type Value before Submiting\")\n            return false;\n        }\n\n        let token = localStorage.getItem(\"authToken\") || \"\"\n\n        LangAPI.post(`/variation_values?lang=${selectedLang}`, finalRoom, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        }).then((response) => {\n            if (response.status === 200) {\n                alert(\"Variation Value Added\");\n                setRoom({ ...initialObject });\n                props.history.push(\"/admin/variation-values\");\n            }\n        });\n    };\n\n    const handleChangeCategory = (event) => {\n        if (event.target.value != room.variation_id) {\n            let updatedRoom = { ...room };\n            updatedRoom.variation_id = event.target.value;\n            setRoom(updatedRoom);\n        }\n    };\n    const handleChangeType = (event) => {\n        if (event.target.value != room.type) {\n            let updatedRoom = { ...room };\n            updatedRoom.type = event.target.value;\n            updatedRoom.type_value = \"\";\n            setRoom(updatedRoom);\n        }\n    };\n    return (\n        <div className={classes.root}>\n            <Card>\n                <CardHeader color=\"primary\" className=\"d-flex justify-content-between align-items-center\">\n                    {/* <div className=\"d-flex justify-content-between align-items-center\"> */}\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mb-0\">\n                        Add Variation Item\n                    </h4>\n                    {/* <FormControl\n                        variant=\"outlined\"\n                        size=\"small\"\n                        style={{ width: \"20%\", color: \"white\" }}\n                    // fullWidth\n                    >\n                        <InputLabel id=\"language\"\n                            style={{ color: \"white\" }}\n                        >Select Language</InputLabel>\n                        <Select\n                            labelId=\"language\"\n                            id=\"language\"\n                            name=\"language\"\n                            value={selectedLang}\n                            label=\"Select Language\"\n                            fullWidth\n                            style={{ color: \"white\" }}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'en'}>En</MenuItem>\n                            <MenuItem value={'fr'}>FR</MenuItem>\n                            <MenuItem value={'de'}>DE</MenuItem>\n\n                        </Select>\n                    </FormControl> */}\n                    {/* </div> */}\n\n                </CardHeader>\n                <CardBody>\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mt-3\">\n                        General Information\n                    </h4>\n                    <Grid container spacing={2} style={{ display: \"flex\" }}>\n                        <Grid item xs={12} sm={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Name\"\n                                        value={room.name}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid>\n                                {/* <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"sub_title\"\n                                        name=\"sub_title\"\n                                        label=\"Sub_Title\"\n                                        value={room.sub_title}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid> */}\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        id=\"route\"\n                                        name=\"route\"\n                                        label=\"Route\"\n                                        value={room.route}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleSlugChange}\n                                        size=\"small\"\n                                        helperText={''}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        style={{ width: \"100%\", color: \"\" }}\n                                    // fullWidth\n                                    >\n                                        <InputLabel id=\"Variation_id\"\n                                            style={{ color: \"\" }}\n                                        >Select Type</InputLabel>\n                                        <Select\n                                            labelId=\"Variation\"\n                                            id=\"Variation\"\n                                            name=\"type\"\n                                            value={room.type}\n                                            label=\"Select Type\"\n                                            fullWidth\n                                            style={{ color: \"\" }}\n                                            onChange={handleChangeType}\n                                        >\n                                            <MenuItem value={'1'}>Plain Text</MenuItem>\n                                            <MenuItem value={'2'}>Text With Color Code</MenuItem>\n                                            <MenuItem value={'3'}>Text With Image</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        style={{ width: \"100%\", color: \"\" }}\n                                    // fullWidth\n                                    >\n                                        <InputLabel id=\"Variation_id\"\n                                            style={{ color: \"\" }}\n                                        >Select Variation</InputLabel>\n                                        <Select\n                                            labelId=\"Variation\"\n                                            id=\"Variation\"\n                                            name=\"variation_id\"\n                                            value={room.variation_id}\n                                            label=\"Select Variation\"\n                                            fullWidth\n                                            style={{ color: \"\" }}\n                                            onChange={handleChangeCategory}\n                                        >\n                                            {veriations?.map((veriation) => (\n                                                <MenuItem value={veriation.id}>{veriation.name}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {room.type == 3 ?\n                            <Grid item xs={12} sm={12}>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={6}>\n                                        <div className=\"thumbnail-preview-wrapper img-thumbnail\">\n                                            {!isEdit ? (room.type_value && room.type_value !== \"\" ? (\n                                                <img src={room.type_value} alt={room.alt_text || \"\"} />\n                                            ) : (\n                                                <img\n                                                    src={require(\"./../../assets/img/placeholder.png\")}\n                                                    alt=\"\"\n                                                />\n                                            )\n                                            ) : typeof room.type_value === typeof 0 ? (\n                                                // room.thumbnail && room.thumbnail !== \"\" ?\n                                                <img src={room.type_value} alt={room.alt_text || \"\"} />\n                                            ) : (\n                                                <img src={room.type_value} alt={room.alt_text || \"\"} />\n                                            )}\n                                        </div>\n                                        <Fragment>\n                                            <MaterialButton\n                                                variant=\"outlined\"\n                                                color=\"primary\"\n                                                startIcon={<Image />}\n                                                className=\"mt-1\"\n                                                fullWidth\n                                                onClick={() => {\n                                                    setIsSingle(true);\n                                                    setShowGallery(true);\n                                                }}\n                                            >\n                                                Upload Image\n                                            </MaterialButton>\n                                        </Fragment>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            :\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    id=\"type_value\"\n                                    name=\"type_value\"\n                                    label=\"type value\"\n                                    value={room.type_value}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    onChange={handleInputChange}\n                                    size=\"small\"\n                                    helperText={''}\n                                />\n                            </Grid>\n                        }\n                        <div className=\"clearfix clear-fix\"></div>\n                    </Grid>\n                    {/* GALLERY DIALOG BOX START */}\n\n                    <GalleryDialog\n                        open={showGallery} handleImageSelect={handleImageSelect} handleClose={() => {\n                            setShowGallery(false);\n                        }}\n                        refreshGallery={getGalleryImages}\n                        data={imagesData} />\n                    {/* GALLERY DIALOG BOX END */}\n                    <hr />\n\n                    {/* <h4 style={{ fontWeight: \"400\" }} className=\"mt-2\">\n                        SEO Information\n                    </h4>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                id=\"meta_title\"\n                                name=\"meta_title\"\n                                label=\"Meta name\"\n                                value={room.meta_title}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                id=\"route\"\n                                name=\"route\"\n                                label=\"Permalink\"\n                                value={room.route}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleRouteChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                required\n                                id=\"meta_description\"\n                                name=\"meta_description\"\n                                label=\"Meta Description\"\n                                value={room.meta_description}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                required\n                                id=\"schema_markup\"\n                                name=\"schema_markup\"\n                                label=\"Schema Markup\"\n                                value={room.schema_markup}\n                                variant=\"outlined\"\n                                fullWidth\n                                multiline\n                                rows={4}\n                                rowsMax={4}\n                                onChange={handleInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup\n                                    aria-label=\"is_followed\"\n                                    row\n                                    defaultChecked\n                                    name=\"is_followed\"\n                                    value={room.is_followed}\n                                    onChange={(e) => {\n                                        setRoom({ ...room, is_followed: !room.is_followed });\n                                    }}\n                                >\n                                    <FormControlLabel\n                                        value={true}\n                                        control={<Radio />}\n                                        label=\"Follow\"\n                                    />\n                                    <FormControlLabel\n                                        value={false}\n                                        control={<Radio />}\n                                        label=\"No Follow\"\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup\n                                    aria-label=\"is_indexed\"\n                                    row\n                                    defaultChecked\n                                    name=\"is_indexed\"\n                                    value={room.is_indexed}\n                                    onChange={(e) => {\n                                        setRoom({ ...room, is_indexed: !room.is_indexed });\n                                    }}\n                                >\n                                    <FormControlLabel\n                                        value={true}\n                                        control={<Radio />}\n                                        label=\"Index\"\n                                    />\n                                    <FormControlLabel\n                                        value={false}\n                                        control={<Radio />}\n                                        label=\"No Index\"\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                    </Grid> */}\n                </CardBody>\n            </Card>\n\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                    <MaterialButton\n                        onClick={handleSubmit}\n                        style={{ float: \"right\" }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                    >\n                        Submit\n                    </MaterialButton>\n                </Grid>\n            </Grid>\n        </div>\n    );\n});\n"]},"metadata":{},"sourceType":"module"}