{"ast":null,"code":"import _toConsumableArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\src\\\\views\\\\RoomsSuites\\\\Add.js\";\nimport React, { Fragment, useEffect, useState } from \"react\"; //Suspense\n// @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // core components\n// import GridItem from \"components/Grid/GridItem.js\";\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport Grid from \"@material-ui/core/Grid\"; // import Paper from '@material-ui/core/Paper';\n\nimport MaterialButton from \"@material-ui/core/Button\"; // import Button from \"components/CustomButtons/Button.js\";\n\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\"; // import CardAvatar from \"components/Card/CardAvatar.js\";\n\nimport CardBody from \"components/Card/CardBody.js\"; // import avatar from \"assets/img/faces/marc.jpg\";\n\nimport { FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField } from \"@material-ui/core\";\nimport LangAPI from \"langapi/http\";\nimport CKEditor from \"ckeditor4-react\";\nimport { ckEditorConfig } from \"utils/data\"; // import { CKEditor } from '@ckeditor/ckeditor5-react';\n// import ClassicEditor from '@arslanshahab/ckeditor5-build-classic';\n// import ClassicEditor from \"../../plugins/ckeditor.js\";\n// import CodeBlock from \"@ckeditor/ckeditor5-code-block/src/codeblock\";\n\nimport { Image } from \"@material-ui/icons\";\nimport { useParams, withRouter, useLocation } from \"react-router-dom\"; // ClassicEditor.b\n// import FormGroup from '@material-ui/core/FormGroup';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import Favorite from '@material-ui/icons/Favorite';\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport GalleryDialog from \"views/Common/GalleryDialog\";\nimport SelectedImagesThumbnails from \"../Common/SelectedImagesThumbnails\";\nvar website_url = \"https://fishermanscove-resort.com/rooms/\";\nvar append_url = \"rooms-inner\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1 // width:'60%',\n      // margin:'auto'\n\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default withRouter(function AddRoom(props) {\n  var _imagesData$filter,\n      _this = this;\n\n  var classes = useStyles(); //check if edit or add request\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useLocation = useLocation(),\n      search = _useLocation.search;\n\n  var query = new URLSearchParams(search);\n  var lang = query.get('lang');\n  var initialObject = {\n    post_name: \"\",\n    post_content: \"\",\n    short_description: \"\",\n    room_type: -1,\n    slug: \"\",\n    parent_id: -1,\n    thumbnail: \"\",\n    banner_img: \"\",\n    banner_text: \"\",\n    alt_text: \"\",\n    meta_title: \"\",\n    meta_description: \"\",\n    schema_markup: \"\",\n    post_url: \"\",\n    route: website_url,\n    inner_route: append_url,\n    is_followed: true,\n    is_indexed: true,\n    is_indexed_or_is_followed: \"0,0\",\n    images_list: []\n  };\n\n  var _useState = useState(_objectSpread({}, initialObject)),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roomImages = _useState4[0],\n      setRoomImages = _useState4[1];\n\n  var _useState5 = useState(website_url),\n      _useState6 = _slicedToArray(_useState5, 2),\n      maskedRoute = _useState6[0],\n      setMaskedRoute = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isEdit = _useState8[0],\n      setIsEdit = _useState8[1];\n\n  var _useState9 = useState(-1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      post_id = _useState10[0],\n      setPostId = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imagesData = _useState12[0],\n      setImagesData = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      uploadsPreview = _useState14[0],\n      setUploadsPreview = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedImages = _useState16[0],\n      setSelectedImages = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showGallery = _useState18[0],\n      setShowGallery = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isSingle = _useState20[0],\n      setIsSingle = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      renderPreviews = _useState22[0],\n      setRenderPreviews = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      thumbnailPreview = _useState24[0],\n      setThumbnailPreview = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      isBanner = _useState26[0],\n      setIsBanner = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      isImagesList = _useState28[0],\n      setImagesList = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      bannerThumbnailPreview = _useState30[0],\n      setBannerThumbnailPreview = _useState30[1];\n\n  var _useState31 = useState(lang || \"en\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      selectedLang = _useState32[0],\n      setSelectedLang = _useState32[1];\n\n  useEffect(function () {\n    if (id && id != null) {\n      setIsEdit(true); // setPostId(id);\n\n      LangAPI.get(\"/rooms/\".concat(id, \"?lang=\").concat(selectedLang)).then(function (response) {\n        if (response.status === 200) {\n          var _response$data, _response$data2;\n\n          var data = _objectSpread({}, response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data);\n\n          data.route = website_url + data.route;\n\n          if (response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data) {\n            var _response$data3, _response$data5, _response$data5$data, _response$data6, _response$data6$data;\n\n            setRoom(_objectSpread(_objectSpread({}, room), data)); // setUploadsPreview(response.data?.uploads);\n\n            var images = [];\n\n            if (response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data.images_list) {\n              var _response$data4;\n\n              images = JSON.parse(response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data.images_list);\n            }\n\n            setSelectedImages(images);\n            setThumbnailPreview(response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : (_response$data5$data = _response$data5.data) === null || _response$data5$data === void 0 ? void 0 : _response$data5$data.thumbnailPreview);\n            setBannerThumbnailPreview(response === null || response === void 0 ? void 0 : (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : (_response$data6$data = _response$data6.data) === null || _response$data6$data === void 0 ? void 0 : _response$data6$data.banner_imgPreview);\n          } else {\n            setRoom(initialObject);\n            setUploadsPreview(false);\n            setSelectedImages([]);\n          }\n        }\n      });\n    }\n\n    if (!imagesData.length > 0) {\n      getGalleryImages();\n    }\n  }, [selectedLang]);\n\n  var getGalleryImages = function getGalleryImages() {\n    LangAPI.get(\"/get_all_images\").then(function (response) {\n      if (response.status === 200) {\n        setImagesData(response.data.data);\n      }\n    });\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    updatedRoom[e.target.name] = e.target.value;\n\n    if (e.target.name === \"post_name\" && !isEdit) {\n      var updatedValue = e.target.value.replace(/\\s+/g, \"-\");\n      updatedValue = updatedValue.replace(/--/g, \"-\");\n      updatedRoom[\"route\"] = website_url + updatedValue.toLowerCase();\n    }\n\n    setRoom(updatedRoom);\n  };\n\n  var handleRouteChange = function handleRouteChange(e) {\n    var updatedRoom = _objectSpread({}, room);\n\n    var splitValues = e.target.value.split(website_url);\n    var updatedValue = splitValues[1] ? splitValues[1].replace(/\\s+/g, \"-\") : \"\";\n    updatedValue = updatedValue.replace(/--/g, \"-\");\n    updatedRoom[e.target.name] = website_url + updatedValue.toLowerCase();\n    setRoom(updatedRoom);\n  };\n\n  var handleImageSelect = function handleImageSelect(e, index) {\n    if (e.target.checked) {\n      if (isSingle && !isBanner && !isImagesList) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          thumbnail: imagesData[index].avatar,\n          thumbnailPreview: imagesData[index].avatar\n        }));\n        setThumbnailPreview(imagesData[index].avatar);\n        setTimeout(function () {\n          setShowGallery(false);\n        }, 500);\n      } else if (!isSingle && isBanner && !isImagesList) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          banner_img: imagesData[index].avatar,\n          banner_imgPreview: imagesData[index].avatar\n        }));\n        setBannerThumbnailPreview(imagesData[index].avatar);\n        setTimeout(function () {\n          setShowGallery(false);\n        }, 500);\n      } else if (!isSingle && !isBanner && isImagesList) {\n        setSelectedImages([].concat(_toConsumableArray(selectedImages), [imagesData[index]]));\n        var imagesDataUpdated = imagesData.map(function (x, i) {\n          if (i === index) {\n            return _objectSpread(_objectSpread({}, x), {}, {\n              isChecked: true\n            });\n          } else {\n            return x;\n          }\n        });\n        setImagesData(imagesDataUpdated);\n      } // }\n\n    } else {\n      if (isSingle && !isBanner) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          thumbnail: \"\"\n        }));\n        setThumbnailPreview(\"\");\n      } else if (!isSingle && isBanner) {\n        setRoom(_objectSpread(_objectSpread({}, room), {}, {\n          banner_img: \"\"\n        }));\n        setBannerThumbnailPreview(\"\");\n      } else {\n        setSelectedImages(selectedImages.filter(function (x) {\n          return x !== imagesData[index]._id;\n        }));\n      }\n\n      setImagesData(imagesData.map(function (x, i) {\n        if (i === index) {\n          return _objectSpread(_objectSpread({}, x), {}, {\n            isChecked: false\n          });\n        } else {\n          return x;\n        }\n      }));\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var _finalRoom$route, _finalRoom$route$spli;\n\n    var finalRoom = room;\n    finalRoom.route = finalRoom === null || finalRoom === void 0 ? void 0 : (_finalRoom$route = finalRoom.route) === null || _finalRoom$route === void 0 ? void 0 : (_finalRoom$route$spli = _finalRoom$route.split(website_url)) === null || _finalRoom$route$spli === void 0 ? void 0 : _finalRoom$route$spli[1];\n    finalRoom.inner_route = append_url;\n    finalRoom.images_list = JSON.stringify(selectedImages);\n    finalRoom.is_indexed_or_is_followed = \"\".concat(finalRoom.is_indexed ? \"1\" : \"0\", \",\").concat(finalRoom.is_followed ? \"1\" : \"0\");\n\n    if (!finalRoom.post_name || finalRoom.post_name == \"\") {\n      alert(\"Please Add Room/Suite Name\");\n      return false;\n    }\n\n    if (!finalRoom.banner_text || finalRoom.banner_text == \"\") {\n      alert(\"Please Add Banner Text\");\n      return false;\n    }\n\n    if (!finalRoom.thumbnailPreview || finalRoom.thumbnailPreview == \"\") {\n      alert(\"Please Select Featured Image\");\n      return false;\n    }\n\n    if (!finalRoom.banner_imgPreview || finalRoom.banner_imgPreview == \"\") {\n      alert(\"Please Select Banner Image\");\n      return false;\n    }\n\n    if (!finalRoom.room_type || finalRoom.room_type == \"\") {\n      alert(\"Please Select Room/Suite Type\");\n      return false;\n    }\n\n    if (!finalRoom.slug || finalRoom.slug == \"\") {\n      alert(\"Please Select Slug for The Room/Suite\");\n      return false;\n    }\n\n    if (!finalRoom.post_url || finalRoom.post_url == \"\") {\n      alert(\"Please Select Synesis Link\");\n      return false;\n    }\n\n    if (!finalRoom.short_description || finalRoom.short_description == \"\") {\n      alert(\"Please Add Short Description\");\n      return false;\n    }\n\n    if (!finalRoom.post_content || finalRoom.post_content == \"\") {\n      alert(\"Please Add Detailed Content\");\n      return false;\n    }\n\n    if (!selectedImages.length > 0) {\n      alert(\"Please Select Room Images\");\n      return false;\n    }\n\n    if (isEdit) {\n      LangAPI.post(\"/rooms?lang=\".concat(selectedLang), finalRoom).then(function (response) {\n        if (response.status === 200) {\n          alert(\"Record Updated\");\n          setRoom(_objectSpread({}, initialObject)); //clear all fields\n\n          props.history.push(\"/admin/room-suites\");\n        }\n      });\n    } else {\n      LangAPI.post(\"/rooms?lang=\".concat(selectedLang), finalRoom).then(function (response) {\n        if (response.status === 200) {\n          var _response$data7;\n\n          setPostId((_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : _response$data7.post_id);\n          alert(\"Record Updated\");\n          setRoom(_objectSpread({}, initialObject));\n          props.history.push(\"/admin/room-suites\");\n        }\n      });\n    }\n  };\n\n  var _handleRemoveSelectedImage = function handleRemoveSelectedImage(x, arrayListType) {\n    switch (arrayListType) {\n      case \"uploadsPreview\":\n        var updatePreview = uploadsPreview.filter(function (u) {\n          return u._id !== x._id;\n        });\n        setUploadsPreview(updatePreview);\n        setImagesData(imagesData.map(function (im) {\n          if (im._id === x._id) {\n            im.isChecked = false;\n          }\n\n          return im;\n        }));\n        setSelectedImages(updatePreview.map(function (u) {\n          return u._id;\n        }));\n        break;\n\n      case \"selectedImages\":\n        var updateData = selectedImages.filter(function (u) {\n          return u._id !== x._id;\n        });\n        setImagesData(imagesData.map(function (im) {\n          if (im._id === x._id) {\n            im.isChecked = false;\n          }\n\n          return im;\n        }));\n        setSelectedImages(updateData);\n        break;\n\n      default:\n        return setUploadsPreview(uploadsPreview.filter(function (u) {\n          return u._id !== x._id;\n        }));\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    // setAge(event.target.value as string);\n    if (event.target.value != selectedLang) {\n      setSelectedLang(event.target.value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }, \"Add Room/Suite\"), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      width: \"20%\",\n      color: \"white\"\n    } // fullWidth\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"language\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 25\n    }\n  }, \"Select Language\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"language\",\n    id: \"language\",\n    name: \"language\",\n    value: selectedLang,\n    label: \"Select Language\",\n    fullWidth: true,\n    style: {\n      color: \"white\"\n    },\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'en',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 29\n    }\n  }, \"En\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'fr',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 29\n    }\n  }, \"FR\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'de',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, \"DE\")))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 21\n    }\n  }, \"General Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"post_name\",\n    name: \"post_name\",\n    label: \"Name\",\n    value: room.post_name,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnail-preview-wrapper img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 37\n    }\n  }, !isEdit ? thumbnailPreview && thumbnailPreview !== \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnailPreview,\n    alt: room.alt_tag || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./../../assets/img/placeholder.png\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 49\n    }\n  }) : typeof room.thumbnail === typeof 0 ?\n  /*#__PURE__*/\n  // room.thumbnail && room.thumbnail !== \"\" ?\n  React.createElement(\"img\", {\n    src: thumbnailPreview,\n    alt: room.alt_tag || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: room.thumbnail,\n    alt: room.alt_tag || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(Image, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 56\n      }\n    }),\n    className: \"mt-1\",\n    fullWidth: true,\n    onClick: function onClick() {\n      setIsSingle(true);\n      setIsBanner(false);\n      setShowGallery(true);\n      setImagesList(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 41\n    }\n  }, isEdit ? \"Change\" : \"Upload\", \" Featured Image\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"banner_text\",\n    name: \"banner_text\",\n    label: \"Banner Text\",\n    value: room.banner_text,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnail-preview-wrapper img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 37\n    }\n  }, !isEdit ? bannerThumbnailPreview && bannerThumbnailPreview !== \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n    src: bannerThumbnailPreview,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./../../assets/img/placeholder.png\"),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 49\n    }\n  }) : typeof room.banner_img === typeof 0 ?\n  /*#__PURE__*/\n  // room.thumbnail && room.thumbnail !== \"\" ?\n  React.createElement(\"img\", {\n    src: bannerThumbnailPreview,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: room.banner_img,\n    alt: room.alt_text || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(Image, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 56\n      }\n    }),\n    className: \"mt-1\",\n    fullWidth: true,\n    onClick: function onClick() {\n      setIsSingle(false);\n      setIsBanner(true);\n      setShowGallery(true);\n      setImagesList(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 41\n    }\n  }, isEdit ? \"Change\" : \"Upload\", \" Banner Image\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"room_type-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 41\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"room_type-label\",\n    id: \"room_type\",\n    name: \"room_type\",\n    value: room.room_type,\n    onChange: handleInputChange,\n    label: \"Type\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 49\n    }\n  }, \"Select\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 45\n    }\n  }, \"Room\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 45\n    }\n  }, \"Suite\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"slug\",\n    name: \"slug\",\n    label: \"Slug\",\n    value: room.slug,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"post_url\",\n    name: \"post_url\",\n    label: \"Synesis Link\",\n    value: room.post_url,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 29\n    }\n  }, \"Short Description\"), /*#__PURE__*/React.createElement(CKEditor, {\n    onBeforeLoad: function onBeforeLoad(CKEDITOR) {\n      return CKEDITOR.disableAutoInline = true;\n    },\n    data: room.short_description,\n    onChange: function onChange(e) {\n      return setRoom(_objectSpread(_objectSpread({}, room), {}, {\n        short_description: e.editor.getData()\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 29\n    }\n  }, \"Detailed Content\"), /*#__PURE__*/React.createElement(CKEditor, {\n    onBeforeLoad: function onBeforeLoad(CKEDITOR) {\n      return CKEDITOR.disableAutoInline = true;\n    },\n    data: room.post_content,\n    onChange: function onChange(e) {\n      return setRoom(_objectSpread(_objectSpread({}, room), {}, {\n        post_content: e.editor.getData()\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 21\n    }\n  }, \"SEO Information\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"meta_title\",\n    name: \"meta_title\",\n    label: \"Meta Title\",\n    value: room.meta_title,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 25\n    }\n  }, isEdit ? /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"route\",\n    name: \"route\",\n    label: \"Permalink\",\n    value: room.route,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleRouteChange,\n    size: \"small\",\n    InputProps: {\n      disabled: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"route\",\n    name: \"route\",\n    label: \"Permalink\",\n    value: room.route,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleRouteChange,\n    size: \"small\",\n    InputProps: {\n      disabled: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"meta_description\",\n    name: \"meta_description\",\n    label: \"Meta Description\",\n    value: room.meta_description,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"schema_markup\",\n    name: \"schema_markup\",\n    label: \"Schema Markup\",\n    value: room.schema_markup,\n    variant: \"outlined\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    rowsMax: 4,\n    onChange: handleInputChange,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"is_followed\",\n    row: true,\n    defaultChecked: true,\n    name: \"is_followed\",\n    value: room.is_followed,\n    onChange: function onChange(e) {\n      setRoom(_objectSpread(_objectSpread({}, room), {}, {\n        is_followed: !room.is_followed\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: true,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 50\n      }\n    }),\n    label: \"Follow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: false,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 50\n      }\n    }),\n    label: \"No Follow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"is_indexed\",\n    row: true,\n    defaultChecked: true,\n    name: \"is_indexed\",\n    value: room.is_indexed,\n    onChange: function onChange(e) {\n      setRoom(_objectSpread(_objectSpread({}, room), {}, {\n        is_indexed: !room.is_indexed\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: true,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 50\n      }\n    }),\n    label: \"Index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: false,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 50\n      }\n    }),\n    label: \"No Index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 21\n    }\n  }, \"Room Images\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 25\n    }\n  }, \"Please select images from gallery.\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: function onClick() {\n      setRenderPreviews(false);\n      setImagesList(true);\n      setIsSingle(false);\n      setIsBanner(false);\n      setShowGallery(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 29\n    }\n  }, \"Select Gallery Images\")), imagesData === null || imagesData === void 0 ? void 0 : (_imagesData$filter = imagesData.filter(function (array_el) {\n    return selectedImages.filter(function (menuItems_el) {\n      return menuItems_el._id === array_el._id;\n    }).length !== 0;\n  })) === null || _imagesData$filter === void 0 ? void 0 : _imagesData$filter.map(function (x) {\n    return /*#__PURE__*/React.createElement(SelectedImagesThumbnails, {\n      x: x,\n      handleRemoveSelectedImage: function handleRemoveSelectedImage(r) {\n        return _handleRemoveSelectedImage(r, \"selectedImages\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 33\n      }\n    }) // <Grid item xs={12} sm={2}>\n    //     <div style={{height: \"120px\"}}>\n    //         <div className=\"d-flex position-absolute\" style={{cursor: \"pointer\"}}>\n    //             <CancelIcon/>\n    //         </div>\n    //         <img\n    //             width=\"100%\"\n    //             src={x.avatar}\n    //             className=\"img-thumbnail position-relative\"\n    //             alt=\"\"\n    //             style={{height: \"90%\", objectFit: \"cover\"}}\n    //         />\n    //         <p style={{fontSize: \"12px\"}} className=\"text-center\">\n    //             {x.alt_tag}\n    //         </p>\n    //     </div>\n    // </Grid>\n    ;\n  }), uploadsPreview && (uploadsPreview === null || uploadsPreview === void 0 ? void 0 : uploadsPreview.map(function (x) {\n    return /*#__PURE__*/React.createElement(SelectedImagesThumbnails, {\n      x: x,\n      handleRemoveSelectedImage: function handleRemoveSelectedImage(r) {\n        return _handleRemoveSelectedImage(r, \"uploadsPreview\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 33\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clearfix clear-fix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(GalleryDialog, {\n    isSingle: isSingle,\n    isBanner: isBanner,\n    open: showGallery,\n    handleImageSelect: handleImageSelect,\n    handleClose: function handleClose() {\n      setShowGallery(false);\n      setRenderPreviews(true);\n      setUploadsPreview([]);\n    },\n    refreshGallery: getGalleryImages,\n    data: imagesData,\n    selectedData: selectedImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    onClick: handleSubmit,\n    style: {\n      \"float\": \"right\"\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n});","map":{"version":3,"sources":["E:/laragon/www/Prism/gymShark/gymShark_cms/src/views/RoomsSuites/Add.js"],"names":["React","Fragment","useEffect","useState","makeStyles","InputLabel","Grid","MaterialButton","Card","CardHeader","CardBody","FormControl","FormControlLabel","MenuItem","Radio","RadioGroup","Select","TextField","LangAPI","CKEditor","ckEditorConfig","Image","useParams","withRouter","useLocation","GalleryDialog","SelectedImagesThumbnails","website_url","append_url","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","AddRoom","props","classes","id","search","query","URLSearchParams","lang","get","initialObject","post_name","post_content","short_description","room_type","slug","parent_id","thumbnail","banner_img","banner_text","alt_text","meta_title","meta_description","schema_markup","post_url","route","inner_route","is_followed","is_indexed","is_indexed_or_is_followed","images_list","room","setRoom","roomImages","setRoomImages","maskedRoute","setMaskedRoute","isEdit","setIsEdit","post_id","setPostId","imagesData","setImagesData","uploadsPreview","setUploadsPreview","selectedImages","setSelectedImages","showGallery","setShowGallery","isSingle","setIsSingle","renderPreviews","setRenderPreviews","thumbnailPreview","setThumbnailPreview","isBanner","setIsBanner","isImagesList","setImagesList","bannerThumbnailPreview","setBannerThumbnailPreview","selectedLang","setSelectedLang","then","response","status","data","images","JSON","parse","banner_imgPreview","length","getGalleryImages","handleInputChange","e","updatedRoom","target","name","value","updatedValue","replace","toLowerCase","handleRouteChange","splitValues","split","handleImageSelect","index","checked","avatar","setTimeout","imagesDataUpdated","map","x","i","isChecked","filter","_id","handleSubmit","finalRoom","stringify","alert","post","history","push","handleRemoveSelectedImage","arrayListType","updatePreview","u","im","updateData","handleChange","event","width","fontWeight","display","alt_tag","require","formControl","CKEDITOR","disableAutoInline","editor","getData","disabled","array_el","menuItems_el","r"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"; //Suspense\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// core components\n// import GridItem from \"components/Grid/GridItem.js\";\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Grid from \"@material-ui/core/Grid\";\n// import Paper from '@material-ui/core/Paper';\nimport MaterialButton from \"@material-ui/core/Button\";\n\n// import Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\n// import CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\n// import avatar from \"assets/img/faces/marc.jpg\";\nimport { FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, Select, TextField, } from \"@material-ui/core\";\nimport LangAPI from \"langapi/http\";\nimport CKEditor from \"ckeditor4-react\";\nimport { ckEditorConfig } from \"utils/data\";\n// import { CKEditor } from '@ckeditor/ckeditor5-react';\n// import ClassicEditor from '@arslanshahab/ckeditor5-build-classic';\n// import ClassicEditor from \"../../plugins/ckeditor.js\";\n// import CodeBlock from \"@ckeditor/ckeditor5-code-block/src/codeblock\";\nimport { Image } from \"@material-ui/icons\";\nimport { useParams, withRouter, useLocation } from \"react-router-dom\";\n\n// ClassicEditor.b\n// import FormGroup from '@material-ui/core/FormGroup';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import Favorite from '@material-ui/icons/Favorite';\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport GalleryDialog from \"views/Common/GalleryDialog\";\nimport SelectedImagesThumbnails from \"../Common/SelectedImagesThumbnails\";\n\nconst website_url = \"https://fishermanscove-resort.com/rooms/\";\nconst append_url = \"rooms-inner\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        // width:'60%',\n        // margin:'auto'\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default withRouter(function AddRoom(props) {\n    const classes = useStyles();\n    //check if edit or add request\n    let { id } = useParams();\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const lang = query.get('lang');\n\n    const initialObject = {\n        post_name: \"\",\n        post_content: \"\",\n        short_description: \"\",\n        room_type: -1,\n        slug: \"\",\n        parent_id: -1,\n        thumbnail: \"\",\n        banner_img: \"\",\n        banner_text: \"\",\n        alt_text: \"\",\n        meta_title: \"\",\n        meta_description: \"\",\n        schema_markup: \"\",\n        post_url: \"\",\n        route: website_url,\n        inner_route: append_url,\n        is_followed: true,\n        is_indexed: true,\n        is_indexed_or_is_followed: \"0,0\",\n        images_list: [],\n    };\n    const [room, setRoom] = useState({ ...initialObject });\n\n    const [roomImages, setRoomImages] = useState([]);\n    const [maskedRoute, setMaskedRoute] = useState(website_url);\n    const [isEdit, setIsEdit] = useState(false);\n    const [post_id, setPostId] = useState(-1);\n\n    const [imagesData, setImagesData] = useState([]);\n    const [uploadsPreview, setUploadsPreview] = useState(null);\n    const [selectedImages, setSelectedImages] = useState([]);\n    const [showGallery, setShowGallery] = useState(false);\n    const [isSingle, setIsSingle] = useState(false);\n    const [renderPreviews, setRenderPreviews] = useState(false);\n    const [thumbnailPreview, setThumbnailPreview] = useState(\"\");\n    const [isBanner, setIsBanner] = useState(false);\n    const [isImagesList, setImagesList] = useState(false);\n    const [bannerThumbnailPreview, setBannerThumbnailPreview] = useState(\"\");\n    const [selectedLang, setSelectedLang] = useState(lang || \"en\");\n\n\n    useEffect(() => {\n        if (id && id != null) {\n            setIsEdit(true);\n            // setPostId(id);\n            LangAPI.get(`/rooms/${id}?lang=${selectedLang}`).then((response) => {\n                if (response.status === 200) {\n\n                    let data = { ...response?.data?.data };\n                    data.route = website_url + data.route;\n                    if (response?.data?.data) {\n                        setRoom({ ...room, ...data });\n                        // setUploadsPreview(response.data?.uploads);\n                        let images = []\n                        if (response?.data?.data.images_list) {\n                            images = JSON.parse(response?.data?.data.images_list)\n                        }\n                        setSelectedImages(images)\n                        setThumbnailPreview(response?.data?.data?.thumbnailPreview)\n                        setBannerThumbnailPreview(response?.data?.data?.banner_imgPreview)\n                    } else {\n                        setRoom(initialObject);\n                        setUploadsPreview(false);\n                        setSelectedImages([])\n                    }\n                }\n            });\n        }\n\n        if (!imagesData.length > 0) {\n            getGalleryImages();\n        }\n    }, [selectedLang]);\n\n    const getGalleryImages = () => {\n        LangAPI.get(`/get_all_images`).then((response) => {\n            if (response.status === 200) {\n                setImagesData(response.data.data);\n            }\n        });\n    };\n\n    const handleInputChange = (e) => {\n        let updatedRoom = { ...room };\n        updatedRoom[e.target.name] = e.target.value;\n        if (e.target.name === \"post_name\" && !isEdit) {\n            let updatedValue = e.target.value.replace(/\\s+/g, \"-\");\n            updatedValue = updatedValue.replace(/--/g, \"-\");\n            updatedRoom[\"route\"] = website_url + updatedValue.toLowerCase();\n        }\n        setRoom(updatedRoom);\n    };\n\n    const handleRouteChange = (e) => {\n        let updatedRoom = { ...room };\n        let splitValues = e.target.value.split(website_url);\n        let updatedValue = splitValues[1]\n            ? splitValues[1].replace(/\\s+/g, \"-\")\n            : \"\";\n        updatedValue = updatedValue.replace(/--/g, \"-\");\n        updatedRoom[e.target.name] = website_url + updatedValue.toLowerCase();\n        setRoom(updatedRoom);\n    };\n\n    const handleImageSelect = (e, index) => {\n        if (e.target.checked) {\n            if (isSingle && !isBanner && !isImagesList) {\n\n                setRoom({ ...room, thumbnail: imagesData[index].avatar, thumbnailPreview: imagesData[index].avatar });\n                setThumbnailPreview(imagesData[index].avatar);\n\n                setTimeout(() => {\n                    setShowGallery(false);\n                }, 500);\n\n            } else if (!isSingle && isBanner && !isImagesList) {\n\n                setRoom({ ...room, banner_img: imagesData[index].avatar, banner_imgPreview: imagesData[index].avatar });\n                setBannerThumbnailPreview(imagesData[index].avatar);\n                setTimeout(() => {\n                    setShowGallery(false);\n                }, 500);\n\n            } else if (!isSingle && !isBanner && isImagesList) {\n\n                setSelectedImages([...selectedImages, imagesData[index]]);\n                let imagesDataUpdated = imagesData.map((x, i) => {\n                    if (i === index) {\n                        return {\n                            ...x,\n                            isChecked: true,\n                        };\n                    } else {\n                        return x;\n                    }\n                });\n                setImagesData(imagesDataUpdated);\n            }\n\n            // }\n        } else {\n            if (isSingle && !isBanner) {\n                setRoom({ ...room, thumbnail: \"\" });\n                setThumbnailPreview(\"\");\n            } else if (!isSingle && isBanner) {\n                setRoom({ ...room, banner_img: \"\" });\n                setBannerThumbnailPreview(\"\");\n            } else {\n                setSelectedImages(\n                    selectedImages.filter((x) => x !== imagesData[index]._id)\n                );\n            }\n            setImagesData(\n                imagesData.map((x, i) => {\n                    if (i === index) {\n                        return {\n                            ...x,\n                            isChecked: false,\n                        };\n                    } else {\n                        return x;\n                    }\n                })\n            );\n        }\n    };\n\n    const handleSubmit = () => {\n        let finalRoom = room;\n        finalRoom.route = finalRoom?.route?.split(website_url)?.[1];\n        finalRoom.inner_route = append_url;\n        finalRoom.images_list = JSON.stringify(selectedImages);\n        finalRoom.is_indexed_or_is_followed = `${finalRoom.is_indexed ? \"1\" : \"0\"},${finalRoom.is_followed ? \"1\" : \"0\"}`;\n\n        if (!finalRoom.post_name || finalRoom.post_name == \"\") {\n            alert(\"Please Add Room/Suite Name\");\n            return false;\n        }\n        if (!finalRoom.banner_text || finalRoom.banner_text == \"\") {\n            alert(\"Please Add Banner Text\");\n            return false;\n        }\n        if (!finalRoom.thumbnailPreview || finalRoom.thumbnailPreview == \"\") {\n            alert(\"Please Select Featured Image\");\n            return false;\n        }\n        if (!finalRoom.banner_imgPreview || finalRoom.banner_imgPreview == \"\") {\n            alert(\"Please Select Banner Image\");\n            return false;\n        }\n        if (!finalRoom.room_type || finalRoom.room_type == \"\") {\n            alert(\"Please Select Room/Suite Type\");\n            return false;\n        }\n        if (!finalRoom.slug || finalRoom.slug == \"\") {\n            alert(\"Please Select Slug for The Room/Suite\");\n            return false;\n        }\n        if (!finalRoom.post_url || finalRoom.post_url == \"\") {\n            alert(\"Please Select Synesis Link\");\n            return false;\n        }\n        if (!finalRoom.short_description || finalRoom.short_description == \"\") {\n            alert(\"Please Add Short Description\");\n            return false;\n        }\n        if (!finalRoom.post_content || finalRoom.post_content == \"\") {\n            alert(\"Please Add Detailed Content\");\n            return false;\n        }\n        if (!selectedImages.length > 0) {\n            alert(\"Please Select Room Images\");\n            return false;\n        }\n\n        if (isEdit) {\n            LangAPI.post(`/rooms?lang=${selectedLang}`, finalRoom).then((response) => {\n                if (response.status === 200) {\n                    alert(\"Record Updated\");\n                    setRoom({ ...initialObject }); //clear all fields\n                    props.history.push(\"/admin/room-suites\");\n                }\n            });\n        } else {\n            LangAPI.post(`/rooms?lang=${selectedLang}`, finalRoom).then((response) => {\n                if (response.status === 200) {\n                    setPostId(response.data?.post_id);\n                    alert(\"Record Updated\");\n                    setRoom({ ...initialObject });\n                    props.history.push(\"/admin/room-suites\");\n                }\n            });\n        }\n    };\n\n    const handleRemoveSelectedImage = (x, arrayListType) => {\n        switch (arrayListType) {\n            case \"uploadsPreview\":\n                let updatePreview = uploadsPreview.filter((u) => u._id !== x._id)\n                setUploadsPreview(updatePreview);\n                setImagesData(imagesData.map(im => {\n                    if (im._id === x._id) {\n                        im.isChecked = false\n                    }\n                    return im\n                }))\n                setSelectedImages(updatePreview.map((u) => u._id));\n                break;\n            case \"selectedImages\":\n                let updateData = selectedImages.filter((u) => u._id !== x._id);\n                setImagesData(imagesData.map(im => {\n                    if (im._id === x._id) {\n                        im.isChecked = false\n                    }\n                    return im\n                }))\n                setSelectedImages(updateData);\n                break;\n            default:\n                return setUploadsPreview(uploadsPreview.filter((u) => u._id !== x._id))\n        }\n    }\n\n    const handleChange = (event) => {\n        // setAge(event.target.value as string);\n        if (event.target.value != selectedLang) {\n            setSelectedLang(event.target.value)\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <Card>\n                <CardHeader color=\"primary\" className=\"d-flex justify-content-between align-items-center\">\n                    {/* <h4 style={{ fontWeight: \"400\" }} className=\"mb-0\">\n                        Add Room/Suite\n                    </h4> */}\n                    <h4 className=\"mb-0\">Add Room/Suite</h4>\n                    <FormControl\n                        variant=\"outlined\"\n                        size=\"small\"\n                        style={{ width: \"20%\", color: \"white\" }}\n                    // fullWidth\n                    >\n                        <InputLabel id=\"language\"\n                            style={{ color: \"white\" }}\n                        >Select Language</InputLabel>\n                        <Select\n                            labelId=\"language\"\n                            id=\"language\"\n                            name=\"language\"\n                            value={selectedLang}\n                            label=\"Select Language\"\n                            fullWidth\n                            style={{ color: \"white\" }}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={'en'}>En</MenuItem>\n                            <MenuItem value={'fr'}>FR</MenuItem>\n                            <MenuItem value={'de'}>DE</MenuItem>\n\n                        </Select>\n                    </FormControl>\n                    {/* <p className={classes.cardCategoryWhite}>Complete your profile</p> */}\n                </CardHeader>\n                <CardBody>\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mt-3\">\n                        General Information\n                    </h4>\n                    <Grid container spacing={2} style={{ display: \"flex\" }}>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={12}>\n                                    <TextField\n                                        required\n                                        id=\"post_name\"\n                                        name=\"post_name\"\n                                        label=\"Name\"\n                                        value={room.post_name}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={12}>\n                                    <div className=\"thumbnail-preview-wrapper img-thumbnail\">\n                                        {!isEdit ? (\n                                            thumbnailPreview && thumbnailPreview !== \"\" ? (\n                                                <img src={thumbnailPreview} alt={room.alt_tag || \"\"} />\n                                            ) : (\n                                                <img\n                                                    src={require(\"./../../assets/img/placeholder.png\")}\n                                                    alt=\"\"\n                                                />\n                                            )\n                                        ) : typeof room.thumbnail === typeof 0 ? (\n                                            // room.thumbnail && room.thumbnail !== \"\" ?\n                                            <img src={thumbnailPreview} alt={room.alt_tag || \"\"} />\n                                        ) : (\n                                            <img src={room.thumbnail} alt={room.alt_tag || \"\"} />\n                                        )}\n                                    </div>\n                                    <Fragment>\n                                        <MaterialButton\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                            startIcon={<Image />}\n                                            className=\"mt-1\"\n                                            fullWidth\n                                            onClick={() => {\n                                                setIsSingle(true);\n                                                setIsBanner(false);\n                                                setShowGallery(true);\n                                                setImagesList(false);\n                                            }}\n                                        >\n                                            {isEdit ? \"Change\" : \"Upload\"} Featured Image\n                                        </MaterialButton>\n                                    </Fragment>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={12}>\n                                    <TextField\n                                        required\n                                        id=\"banner_text\"\n                                        name=\"banner_text\"\n                                        label=\"Banner Text\"\n                                        value={room.banner_text}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={12}>\n                                    <div className=\"thumbnail-preview-wrapper img-thumbnail\">\n                                        {!isEdit ? (\n                                            bannerThumbnailPreview &&\n                                                bannerThumbnailPreview !== \"\" ? (\n                                                <img\n                                                    src={bannerThumbnailPreview}\n                                                    alt={room.alt_text || \"\"}\n                                                />\n                                            ) : (\n                                                <img\n                                                    src={require(\"./../../assets/img/placeholder.png\")}\n                                                    alt=\"\"\n                                                />\n                                            )\n                                        ) : typeof room.banner_img === typeof 0 ? (\n                                            // room.thumbnail && room.thumbnail !== \"\" ?\n                                            <img\n                                                src={bannerThumbnailPreview}\n                                                alt={room.alt_text || \"\"}\n                                            />\n                                        ) : (\n                                            <img src={room.banner_img} alt={room.alt_text || \"\"} />\n                                        )}\n                                    </div>\n                                    <Fragment>\n                                        <MaterialButton\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                            startIcon={<Image />}\n                                            className=\"mt-1\"\n                                            fullWidth\n                                            onClick={() => {\n                                                setIsSingle(false);\n                                                setIsBanner(true);\n                                                setShowGallery(true);\n                                                setImagesList(false);\n                                            }}\n                                        >\n                                            {isEdit ? \"Change\" : \"Upload\"} Banner Image\n                                        </MaterialButton>\n                                    </Fragment>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        fullWidth\n                                        className={classes.formControl}\n                                    >\n                                        <InputLabel id=\"room_type-label\">Type</InputLabel>\n                                        <Select\n                                            labelId=\"room_type-label\"\n                                            id=\"room_type\"\n                                            name=\"room_type\"\n                                            value={room.room_type}\n                                            onChange={handleInputChange}\n                                            label=\"Type\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value={-1}>\n                                                <em>Select</em>\n                                            </MenuItem>\n                                            <MenuItem value={1}>Room</MenuItem>\n                                            <MenuItem value={2}>Suite</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"slug\"\n                                        name=\"slug\"\n                                        label=\"Slug\"\n                                        value={room.slug}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        id=\"post_url\"\n                                        name=\"post_url\"\n                                        label=\"Synesis Link\"\n                                        value={room.post_url}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleInputChange}\n                                        size=\"small\"\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} sm={12}>\n                            <hr />\n                            <h4 style={{ fontWeight: \"400\" }}>Short Description</h4>\n                            <CKEditor\n                                onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                data={room.short_description}\n                                onChange={(e) =>\n                                    setRoom({ ...room, short_description: e.editor.getData() })\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <hr />\n                            <h4 style={{ fontWeight: \"400\" }}>Detailed Content</h4>\n\n                            <CKEditor\n                                onBeforeLoad={(CKEDITOR) => (CKEDITOR.disableAutoInline = true)}\n                                data={room.post_content}\n                                onChange={(e) =>\n                                    setRoom({ ...room, post_content: e.editor.getData() })\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                    <hr />\n\n                    <h4 style={{ fontWeight: \"400\" }} className=\"mt-2\">\n                        SEO Information\n                    </h4>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                id=\"meta_title\"\n                                name=\"meta_title\"\n                                label=\"Meta Title\"\n                                value={room.meta_title}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            {\n                                isEdit ?\n                                    <TextField\n                                        required\n                                        id=\"route\"\n                                        name=\"route\"\n                                        label=\"Permalink\"\n                                        value={room.route}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleRouteChange}\n                                        size=\"small\"\n                                        InputProps={{\n                                            disabled: true,\n                                        }}\n                                    /> :\n                                    <TextField\n                                        required\n                                        id=\"route\"\n                                        name=\"route\"\n                                        label=\"Permalink\"\n                                        value={room.route}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        onChange={handleRouteChange}\n                                        size=\"small\"\n                                        InputProps={{\n                                            disabled: false,\n                                        }}\n                                    />\n                            }\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                required\n                                id=\"meta_description\"\n                                name=\"meta_description\"\n                                label=\"Meta Description\"\n                                value={room.meta_description}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={handleInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                required\n                                id=\"schema_markup\"\n                                name=\"schema_markup\"\n                                label=\"Schema Markup\"\n                                value={room.schema_markup}\n                                variant=\"outlined\"\n                                fullWidth\n                                multiline\n                                rows={4}\n                                rowsMax={4}\n                                onChange={handleInputChange}\n                                size=\"small\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup\n                                    aria-label=\"is_followed\"\n                                    row\n                                    defaultChecked\n                                    name=\"is_followed\"\n                                    value={room.is_followed}\n                                    onChange={(e) => {\n                                        setRoom({ ...room, is_followed: !room.is_followed });\n                                    }}\n                                >\n                                    <FormControlLabel\n                                        value={true}\n                                        control={<Radio />}\n                                        label=\"Follow\"\n                                    />\n                                    <FormControlLabel\n                                        value={false}\n                                        control={<Radio />}\n                                        label=\"No Follow\"\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup\n                                    aria-label=\"is_indexed\"\n                                    row\n                                    defaultChecked\n                                    name=\"is_indexed\"\n                                    value={room.is_indexed}\n                                    onChange={(e) => {\n                                        setRoom({ ...room, is_indexed: !room.is_indexed });\n                                    }}\n                                >\n                                    <FormControlLabel\n                                        value={true}\n                                        control={<Radio />}\n                                        label=\"Index\"\n                                    />\n                                    <FormControlLabel\n                                        value={false}\n                                        control={<Radio />}\n                                        label=\"No Index\"\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        {/* <Grid item xs={12} sm={12}>\n              <MaterialButton onClick={handleSubmit} style={{ float: 'right' }} variant=\"contained\" color=\"primary\" size=\"large\">\n                Submit\n              </MaterialButton>\n            </Grid> */}\n                    </Grid>\n                </CardBody>\n            </Card>\n            {/* {isEdit && */}\n            <Card>\n                <CardBody>\n                    <h3>Room Images</h3>\n                    <p>\n                        <em>Please select images from gallery.</em>\n                    </p>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={12}>\n                            <MaterialButton\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={() => {\n                                    setRenderPreviews(false);\n                                    setImagesList(true);\n                                    setIsSingle(false);\n                                    setIsBanner(false);\n                                    setShowGallery(true);\n                                }}\n                            >\n                                Select Gallery Images\n                            </MaterialButton>\n                        </Grid>\n                        {imagesData\n                            ?.filter(function (array_el) {\n                                return (\n                                    selectedImages.filter(function (menuItems_el) {\n                                        return menuItems_el._id === array_el._id;\n                                    }).length !== 0\n                                );\n                            })\n                            ?.map((x) => (\n                                <SelectedImagesThumbnails\n                                    x={x}\n                                    handleRemoveSelectedImage={(r) => handleRemoveSelectedImage(r, \"selectedImages\")} />\n                                // <Grid item xs={12} sm={2}>\n                                //     <div style={{height: \"120px\"}}>\n                                //         <div className=\"d-flex position-absolute\" style={{cursor: \"pointer\"}}>\n                                //             <CancelIcon/>\n                                //         </div>\n                                //         <img\n                                //             width=\"100%\"\n                                //             src={x.avatar}\n                                //             className=\"img-thumbnail position-relative\"\n                                //             alt=\"\"\n                                //             style={{height: \"90%\", objectFit: \"cover\"}}\n                                //         />\n                                //         <p style={{fontSize: \"12px\"}} className=\"text-center\">\n                                //             {x.alt_tag}\n                                //         </p>\n                                //     </div>\n                                // </Grid>\n                            ))}\n                        {uploadsPreview &&\n                            uploadsPreview?.map((x) => (\n                                <SelectedImagesThumbnails x={x} handleRemoveSelectedImage={(r) => handleRemoveSelectedImage(r, \"uploadsPreview\")} />\n                            ))}\n                        <div className=\"clearfix clear-fix\"></div>\n                        {/* GALLERY DIALOG BOX START */}\n                        <GalleryDialog\n                            isSingle={isSingle}\n                            isBanner={isBanner}\n                            open={showGallery}\n                            handleImageSelect={handleImageSelect}\n                            handleClose={() => {\n                                setShowGallery(false);\n                                setRenderPreviews(true);\n                                setUploadsPreview([])\n                            }}\n                            refreshGallery={getGalleryImages}\n                            data={imagesData}\n                            selectedData={selectedImages}\n                        />\n                        {/* GALLERY DIALOG BOX END */}\n                    </Grid>\n                </CardBody>\n            </Card>\n\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                    <MaterialButton\n                        onClick={handleSubmit}\n                        style={{ float: \"right\" }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                    >\n                        Submit\n                    </MaterialButton>\n                </Grid>\n            </Grid>\n            {/* } */}\n        </div>\n    );\n});\n"]},"metadata":{},"sourceType":"module"}