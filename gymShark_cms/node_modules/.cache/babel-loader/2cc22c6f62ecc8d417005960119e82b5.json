{"ast":null,"code":"import _toConsumableArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymShark_cms\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Prism\\\\gymShark\\\\gymshark_cms\\\\src\\\\views\\\\Footer\\\\Add.js\";\nimport React, { Fragment, Suspense, useEffect, useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // core components\n// import GridItem from \"components/Grid/GridItem.js\";\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport Grid from \"@material-ui/core/Grid\"; // import Paper from '@material-ui/core/Paper';\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\"; // import CardAvatar from \"components/Card/CardAvatar.js\";\n\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\"; // import avatar from \"assets/img/faces/marc.jpg\";\n\nimport { TextField, Paper, IconButton } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\"; // import API from \"utils/http\";\n\nimport API from \"langapi/http\";\nimport { CloseOutlined } from \"@material-ui/icons\";\nimport { Select, MenuItem, FormControl } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default function UpdateFooter() {\n  var _footerContent$second3,\n      _this = this;\n\n  var classes = useStyles(); // const [open, setOpen] = React.useState(false);\n\n  var initialObject = {\n    type: \"footer\",\n    first: {\n      description: \"\"\n    },\n    second: {\n      links: []\n    },\n    third: {\n      phone: \"\",\n      email: \"\",\n      address: \"\"\n    } // social: {\n    //   facebook: \"\",\n    //   twitter: \"\",\n    //   instagram: \"\",\n    // },\n\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openSnackAlert = _useState2[0],\n      setOpenSnackAlert = _useState2[1];\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      messageInfo = _React$useState2[0],\n      setMessageInfo = _React$useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dragId = _useState4[0],\n      setDragId = _useState4[1];\n\n  var _useState5 = useState(_objectSpread({}, initialObject)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      footerContent = _useState6[0],\n      setFooterContent = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pages = _useState8[0],\n      setPages = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pagesFilter = _useState10[0],\n      setPagesFilter = _useState10[1];\n\n  var _useState11 = useState(\"en\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedLang = _useState12[0],\n      setSelectedLang = _useState12[1];\n\n  useEffect(function () {\n    API.get(\"/pages?lang=\".concat(selectedLang)).then(function (response) {\n      var _response$data, _response$data2;\n\n      setPages(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data); // // let filteredArray = response.data?.data?.filter(function (array_el) {\n      // //   return (\n      // //     menuItems.filter(function (menuItems_el) {\n      // //       return menuItems_el.text == array_el.name;\n      // //     }).length == 0\n      // //   );\n      // // });\n\n      setPagesFilter(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data);\n    });\n  }, []);\n  useEffect(function () {\n    API.get(\"/common?lang=\".concat(selectedLang)).then(function (response) {\n      var _response$data3;\n\n      var contactdata = response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data.find(function (x) {\n        return x.type === \"footer\";\n      });\n\n      if (contactdata) {\n        setFooterContent(contactdata);\n      } else {\n        setFooterContent(initialObject);\n      }\n    });\n  }, [selectedLang]);\n\n  var handleChange = function handleChange(event) {\n    if (event.target.value != selectedLang) {\n      setSelectedLang(event.target.value);\n    }\n  }; // useEffect(() => {\n  //   async function getData() {\n  //     const menuItems = await getFooterData();\n  //     API.get(\"/pages\").then((response) => {\n  //       setPages(response.data);\n  //       let filteredArray = response.data?.filter(function (array_el) {\n  //         return (\n  //           menuItems.filter(function (menuItems_el) {\n  //             return menuItems_el.text == array_el.name;\n  //           }).length == 0\n  //         );\n  //       });\n  //       setPagesFilter(filteredArray);\n  //       // })\n  //     });\n  //   }\n  //   getData();\n  // }, []);\n  // const getFooterData = async () => {\n  //   const response = await API.get(\"/get_widgets/footer\");\n  //   if (response.status === 200) {\n  //     const { data } = response;\n  //     const first = data.find((x) => x.widget_name === \"first\");\n  //     const second = data.find((x) => x.widget_name === \"second\");\n  //     const third = data.find((x) => x.widget_name === \"third\");\n  //     const social = data.find((x) => x.widget_name === \"social\");\n  //     setFooterContent({\n  //       first: first\n  //         ? { id: first.id, ...JSON.parse(first.items) }\n  //         : initialObject.first,\n  //       second: second\n  //         ? { id: second.id, ...JSON.parse(second.items) }\n  //         : initialObject.second,\n  //       third: third\n  //         ? { id: third.id, ...JSON.parse(third.items) }\n  //         : initialObject.third,\n  //       social: social\n  //         ? { id: social.id, ...JSON.parse(social.items) }\n  //         : initialObject.social,\n  //     });\n  //     return second?.links\n  //       ? JSON.parse(second?.links)\n  //       : initialObject.second.links;\n  //   } else {\n  //     return [];\n  //   }\n  //   // })\n  // };\n\n\n  var handleInputChange = function handleInputChange(e, section) {\n    var updatedFooterContent = _objectSpread({}, footerContent);\n\n    updatedFooterContent[section][e.target.name] = e.target.value;\n    setFooterContent(updatedFooterContent);\n  };\n\n  var handleLinkChange = function handleLinkChange(e, index, section) {\n    var updatedFooterContent = _objectSpread({}, footerContent);\n\n    updatedFooterContent[section].links[index][e.target.name] = e.target.value;\n    setFooterContent(updatedFooterContent);\n  };\n\n  var addNewLink = function addNewLink() {\n    var _footerContent$second;\n\n    if (((_footerContent$second = footerContent.second.links) === null || _footerContent$second === void 0 ? void 0 : _footerContent$second.length) > 0) {\n      setPagesFilter(pagesFilter.filter(function (x) {\n        var _footerContent$second2;\n\n        return x.name !== ((_footerContent$second2 = footerContent.second.links[footerContent.second.links.length - 1]) === null || _footerContent$second2 === void 0 ? void 0 : _footerContent$second2.text);\n      }));\n    }\n\n    setFooterContent(_objectSpread(_objectSpread({}, footerContent), {}, {\n      second: _objectSpread(_objectSpread({}, footerContent.second), {}, {\n        links: [].concat(_toConsumableArray(footerContent.second.links), [{\n          text: \"\",\n          address: \"\",\n          temp_id: footerContent.second.links.length + 1,\n          order: footerContent.second.links.length + 1,\n          slug: \"\"\n        }])\n      })\n    }));\n  };\n\n  var handleMenuItemChange = function handleMenuItemChange(e, index, slug) {\n    console.log(\"values\", e.target.name, e.target.value, slug, index);\n\n    var updatedItems = _toConsumableArray(footerContent.second.links);\n\n    updatedItems[index][e.target.name] = e.target.value;\n    updatedItems[index][\"slug\"] = slug; // updatedItems[index][\"address\"] = slug;\n\n    setFooterContent(_objectSpread(_objectSpread({}, footerContent), {}, {\n      second: _objectSpread(_objectSpread({}, footerContent.second), {}, {\n        links: updatedItems\n      })\n    })); // setPagesFilter(pagesFilter.filter(x => x.name !== e.target.value))\n  };\n\n  var handleDrag = function handleDrag(ev) {\n    setDragId(ev.currentTarget.id);\n  };\n\n  var handleDrop = function handleDrop(ev) {\n    var dragBox = footerContent.second.links.find(function (box) {\n      return box.temp_id == dragId;\n    });\n    var dropBox = footerContent.second.links.find(function (box) {\n      return box.temp_id == ev.currentTarget.id;\n    });\n    var dragBoxOrder = dragBox.order;\n    var dropBoxOrder = dropBox.order;\n    var updatedMenuItems = footerContent.second.links.map(function (box) {\n      if (box.temp_id == dragId) {\n        box.order = dropBoxOrder;\n      }\n\n      if (box.temp_id == ev.currentTarget.id) {\n        box.order = dragBoxOrder;\n      }\n\n      return box;\n    });\n    setFooterContent(_objectSpread(_objectSpread({}, footerContent), {}, {\n      second: _objectSpread(_objectSpread({}, footerContent.second), {}, {\n        links: updatedMenuItems\n      })\n    }));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var updatedHeaderContent = _objectSpread({}, footerContent);\n\n    console.log(\"updatedHeaderContent :: \", updatedHeaderContent);\n    API.post(\"/common?lang=\".concat(selectedLang), updatedHeaderContent).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Section updated successfully !\");\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }; // const handleSubmit = (section) => {\n  //   API[footerContent[section]?.id ? \"put\" : \"post\"](\n  //     footerContent[section]?.id\n  //       ? `/widget/${footerContent[section]?.id}`\n  //       : `/widget`,\n  //     {\n  //       widget_type: \"footer\",\n  //       widget_name: section,\n  //       items: footerContent[section],\n  //     }\n  //   )\n  //     .then((response) => {\n  //       // debugger;\n  //       if (response.status === 200) {\n  //         alert(response.data.message);\n  //         // setMessageInfo((prev) => [...prev, { message: response.data.message, key: new Date().getTime() }])\n  //         // setOpenSnackAlert(true)\n  //         // setFooterContent({ ...initialObject }); //resetting the form\n  //       }\n  //     })\n  //     .catch((err) => alert(\"Something went wrong\"));\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \"Update Site Footer\"), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      width: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"language\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }, \"Select Language\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"language\",\n    id: \"language\",\n    name: \"language\",\n    value: selectedLang,\n    label: \"Select Language\",\n    fullWidth: true,\n    onChange: handleChange,\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'en',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, \"En\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'fr',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, \"FR\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'de',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, \"DE\")))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel2a-content\",\n    id: \"panel2a-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, \"Links\")), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 21\n    }\n  }, (_footerContent$second3 = footerContent.second) === null || _footerContent$second3 === void 0 ? void 0 : _footerContent$second3.links // ?.sort((a, b) => a.order - b.order)\n  .map(function (x, index) {\n    var _pages$find4, _pages$find5, _pages$find6;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: x.temp_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, (pages === null || pages === void 0 ? void 0 : pages.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, selectedLang === \"en\" ? /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"text\".concat(x.temp_id),\n      name: \"text\",\n      options: pagesFilter,\n      size: \"small\",\n      value: pages.find(function (p) {\n        var _p$name, _x$text;\n\n        return ((_p$name = p.name) === null || _p$name === void 0 ? void 0 : _p$name.toLowerCase()) === ((_x$text = x.text) === null || _x$text === void 0 ? void 0 : _x$text.toLowerCase());\n      }) || {\n        name: \"\"\n      },\n      onChange: function onChange(e, newValue) {\n        var _pages$find;\n\n        return handleMenuItemChange({\n          target: {\n            value: newValue === null || newValue === void 0 ? void 0 : newValue.name,\n            name: \"text\"\n          }\n        }, index, newValue === null || newValue === void 0 ? void 0 : newValue.slug, (_pages$find = pages.find(function (p) {\n          var _p$name2, _newValue$name;\n\n          return ((_p$name2 = p.name) === null || _p$name2 === void 0 ? void 0 : _p$name2.toLowerCase()) === (newValue === null || newValue === void 0 ? void 0 : (_newValue$name = newValue.name) === null || _newValue$name === void 0 ? void 0 : _newValue$name.toLowerCase());\n        })) === null || _pages$find === void 0 ? void 0 : _pages$find.slug) || \"\";\n      },\n      getOptionLabel: function getOptionLabel(option) {\n        return option.name;\n      } // style={{ width: 300 }}\n      ,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/React.createElement(TextField, Object.assign({\n          required: true\n        }, params, {\n          label: \"Select Link Text\",\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 43\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 39\n      }\n    }) : selectedLang === \"fr\" ? /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"text\".concat(x.temp_id),\n      name: \"text\",\n      options: pagesFilter,\n      size: \"small\",\n      value: pages.find(function (p) {\n        var _p$name_fr, _x$text2;\n\n        return ((_p$name_fr = p.name_fr) === null || _p$name_fr === void 0 ? void 0 : _p$name_fr.toLowerCase()) === ((_x$text2 = x.text) === null || _x$text2 === void 0 ? void 0 : _x$text2.toLowerCase());\n      }) || {\n        name: \"\"\n      },\n      onChange: function onChange(e, newValue) {\n        var _pages$find2;\n\n        return handleMenuItemChange({\n          target: {\n            value: newValue === null || newValue === void 0 ? void 0 : newValue.name_fr,\n            name: \"text\"\n          }\n        }, index, newValue === null || newValue === void 0 ? void 0 : newValue.slug, (_pages$find2 = pages.find(function (p) {\n          var _p$name3, _newValue$name2;\n\n          return ((_p$name3 = p.name) === null || _p$name3 === void 0 ? void 0 : _p$name3.toLowerCase()) === (newValue === null || newValue === void 0 ? void 0 : (_newValue$name2 = newValue.name) === null || _newValue$name2 === void 0 ? void 0 : _newValue$name2.toLowerCase());\n        })) === null || _pages$find2 === void 0 ? void 0 : _pages$find2.slug) || \"\";\n      },\n      getOptionLabel: function getOptionLabel(option) {\n        return option.name_fr;\n      } // style={{ width: 300 }}\n      ,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/React.createElement(TextField, Object.assign({\n          required: true\n        }, params, {\n          label: \"Select Link Text\",\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 45\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 41\n      }\n    }) : selectedLang === \"de\" ? /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"text\".concat(x.temp_id),\n      name: \"text\",\n      options: pagesFilter,\n      size: \"small\",\n      value: pages.find(function (p) {\n        var _p$name_de, _x$text3;\n\n        return ((_p$name_de = p.name_de) === null || _p$name_de === void 0 ? void 0 : _p$name_de.toLowerCase()) === ((_x$text3 = x.text) === null || _x$text3 === void 0 ? void 0 : _x$text3.toLowerCase());\n      }) || {\n        name: \"\"\n      },\n      onChange: function onChange(e, newValue) {\n        var _pages$find3;\n\n        return handleMenuItemChange({\n          target: {\n            value: newValue === null || newValue === void 0 ? void 0 : newValue.name_de,\n            name: \"text\"\n          }\n        }, index, newValue === null || newValue === void 0 ? void 0 : newValue.slug, (_pages$find3 = pages.find(function (p) {\n          var _p$name4, _newValue$name3;\n\n          return ((_p$name4 = p.name) === null || _p$name4 === void 0 ? void 0 : _p$name4.toLowerCase()) === (newValue === null || newValue === void 0 ? void 0 : (_newValue$name3 = newValue.name) === null || _newValue$name3 === void 0 ? void 0 : _newValue$name3.toLowerCase());\n        })) === null || _pages$find3 === void 0 ? void 0 : _pages$find3.slug) || \"\";\n      },\n      getOptionLabel: function getOptionLabel(option) {\n        return option.name_de;\n      } // style={{ width: 300 }}\n      ,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/React.createElement(TextField, Object.assign({\n          required: true\n        }, params, {\n          label: \"Select Link Text\",\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 47\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 43\n      }\n    }) : \"\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"address\".concat(x.temp_id),\n      name: \"address\",\n      label: \"URL\",\n      value: selectedLang === \"en\" ? ((_pages$find4 = pages.find(function (p) {\n        var _p$name5, _x$text4;\n\n        return ((_p$name5 = p.name) === null || _p$name5 === void 0 ? void 0 : _p$name5.toLowerCase()) === ((_x$text4 = x.text) === null || _x$text4 === void 0 ? void 0 : _x$text4.toLowerCase());\n      })) === null || _pages$find4 === void 0 ? void 0 : _pages$find4.slug) || \"\" : selectedLang === \"fr\" ? ((_pages$find5 = pages.find(function (p) {\n        var _p$name_fr2, _x$text5;\n\n        return ((_p$name_fr2 = p.name_fr) === null || _p$name_fr2 === void 0 ? void 0 : _p$name_fr2.toLowerCase()) === ((_x$text5 = x.text) === null || _x$text5 === void 0 ? void 0 : _x$text5.toLowerCase());\n      })) === null || _pages$find5 === void 0 ? void 0 : _pages$find5.slug) || \"\" : selectedLang === \"de\" ? ((_pages$find6 = pages.find(function (p) {\n        var _p$name_de2, _x$text6;\n\n        return ((_p$name_de2 = p.name_de) === null || _p$name_de2 === void 0 ? void 0 : _p$name_de2.toLowerCase()) === ((_x$text6 = x.text) === null || _x$text6 === void 0 ? void 0 : _x$text6.toLowerCase());\n      })) === null || _pages$find6 === void 0 ? void 0 : _pages$find6.slug) || \"\" : \"\",\n      variant: \"outlined\",\n      fullWidth: true,\n      disabled: true,\n      onChange: function onChange(e) {\n        return handleMenuItemChange(e, index);\n      },\n      size: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MaterialButton, {\n      onClick: function onClick() {\n        return setFooterContent(_objectSpread(_objectSpread({}, footerContent), {}, {\n          second: _objectSpread(_objectSpread({}, footerContent.second), {}, {\n            links: footerContent.second.links.filter(function (z) {\n              return z.temp_id !== x.temp_id;\n            })\n          })\n        }));\n      },\n      color: \"secondary\",\n      size: \"small\",\n      variant: \"outlined\",\n      style: {\n        height: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 31\n      }\n    }, \"Delete Link\")));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"outlined\",\n    component: \"span\",\n    className: \"mb-3\" // size=\"small\"\n    ,\n    color: \"primary\",\n    onClick: addNewLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 25\n    }\n  }, \"Add a New Link\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      marginTop: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    onClick: function onClick() {\n      return handleSubmit();\n    },\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 17\n    }\n  }, \"Update Section\")))))), /*#__PURE__*/React.createElement(Snackbar, {\n    key: messageInfo ? messageInfo.key : undefined,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    open: openSnackAlert,\n    autoHideDuration: 3000,\n    onClose: function onClose() {\n      return setOpenSnackAlert(false);\n    },\n    onExited: function onExited() {\n      return setOpenSnackAlert(false);\n    },\n    message: messageInfo ? messageInfo.message : undefined,\n    action: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: function onClick() {\n        return setOpenSnackAlert(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 13\n      }\n    }, \"OK\"), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: function onClick() {\n        return setOpenSnackAlert(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["E:/laragon/www/Prism/gymShark/gymshark_cms/src/views/Footer/Add.js"],"names":["React","Fragment","Suspense","useEffect","useState","makeStyles","InputLabel","Grid","Button","MaterialButton","Card","CardHeader","CardBody","CardFooter","TextField","Paper","IconButton","Autocomplete","ExpandMoreIcon","List","ListItem","ListItemText","Snackbar","Accordion","AccordionSummary","AccordionDetails","Typography","API","CloseOutlined","Select","MenuItem","FormControl","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","UpdateFooter","classes","initialObject","type","first","description","second","links","third","phone","email","address","openSnackAlert","setOpenSnackAlert","undefined","messageInfo","setMessageInfo","dragId","setDragId","footerContent","setFooterContent","pages","setPages","pagesFilter","setPagesFilter","selectedLang","setSelectedLang","get","then","response","data","contactdata","find","x","handleChange","event","target","value","handleInputChange","e","section","updatedFooterContent","name","handleLinkChange","index","addNewLink","length","filter","temp_id","order","slug","handleMenuItemChange","console","log","updatedItems","handleDrag","ev","currentTarget","id","handleDrop","dragBox","box","dropBox","dragBoxOrder","dropBoxOrder","updatedMenuItems","map","handleSubmit","updatedHeaderContent","post","status","alert","err","display","justifyContent","width","heading","p","toLowerCase","newValue","option","params","name_fr","name_de","z","height","marginTop","key","vertical","horizontal","message","close"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,mBAA9C;AAEA,IAAMC,SAAS,GAAG3B,UAAU,CAAC,UAAC4B,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KADiC;AAIvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ;AAELC,MAAAA,SAAS,EAAE,QAFN;AAGLC,MAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJgC,GAAZ;AAAA,CAAD,CAA5B;AAWA,eAAe,SAASC,YAAT,GAAwB;AAAA;AAAA;;AACrC,MAAMC,OAAO,GAAGb,SAAS,EAAzB,CADqC,CAErC;;AACA,MAAMc,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE,QADc;AAEpBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE;AADR,KAFa;AAKpBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD,KALY;AAQpBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,OAAO,EAAE;AAHJ,KARa,CAapB;AACA;AACA;AACA;AACA;;AAjBoB,GAAtB;;AAoBA,kBAA4CnD,QAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAOoD,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,wBAAsCzD,KAAK,CAACI,QAAN,CAAesD,SAAf,CAAtC;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,mBAA4BxD,QAAQ,EAApC;AAAA;AAAA,MAAOyD,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA0C1D,QAAQ,mBAAM0C,aAAN,EAAlD;AAAA;AAAA,MAAOiB,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA0B5D,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAO6D,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAsC9D,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAO+D,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAAwChE,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOiE,YAAP;AAAA,MAAqBC,eAArB;;AAEAnE,EAAAA,SAAS,CAAC,YAAM;AAEdwB,IAAAA,GAAG,CAAC4C,GAAJ,uBAAuBF,YAAvB,GAAuCG,IAAvC,CAA4C,UAACC,QAAD,EAAc;AAAA;;AACxDP,MAAAA,QAAQ,CAACO,QAAD,aAACA,QAAD,yCAACA,QAAQ,CAAEC,IAAX,mDAAC,eAAgBA,IAAjB,CAAR,CADwD,CAExD;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,MAAAA,cAAc,CAACK,QAAD,aAACA,QAAD,0CAACA,QAAQ,CAAEC,IAAX,oDAAC,gBAAgBA,IAAjB,CAAd;AACD,KAVD;AAWD,GAbQ,EAaN,EAbM,CAAT;AAeAvE,EAAAA,SAAS,CAAC,YAAM;AAEdwB,IAAAA,GAAG,CAAC4C,GAAJ,wBAAwBF,YAAxB,GAAwCG,IAAxC,CAA6C,UAAAC,QAAQ,EAAI;AAAA;;AAEvD,UAAME,WAAW,GAAGF,QAAH,aAAGA,QAAH,0CAAGA,QAAQ,CAAEC,IAAb,oDAAG,gBAAgBA,IAAhB,CAAqBE,IAArB,CAA0B,UAACC,CAAD;AAAA,eAAOA,CAAC,CAAC9B,IAAF,KAAW,QAAlB;AAAA,OAA1B,CAApB;;AACA,UAAI4B,WAAJ,EAAiB;AACfX,QAAAA,gBAAgB,CAACW,WAAD,CAAhB;AACD,OAFD,MAEO;AACLX,QAAAA,gBAAgB,CAAClB,aAAD,CAAhB;AACD;AAGF,KAVD;AAYD,GAdQ,EAcN,CAACuB,YAAD,CAdM,CAAT;;AAgBA,MAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsBZ,YAA1B,EAAwC;AACtCC,MAAAA,eAAe,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD;AACF,GAJD,CA/DqC,CAqErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAIC,OAAJ,EAAgB;AACxC,QAAIC,oBAAoB,qBAAQtB,aAAR,CAAxB;;AACAsB,IAAAA,oBAAoB,CAACD,OAAD,CAApB,CAA8BD,CAAC,CAACH,MAAF,CAASM,IAAvC,IAA+CH,CAAC,CAACH,MAAF,CAASC,KAAxD;AACAjB,IAAAA,gBAAgB,CAACqB,oBAAD,CAAhB;AACD,GAJD;;AAMA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,CAAD,EAAIK,KAAJ,EAAWJ,OAAX,EAAuB;AAC9C,QAAIC,oBAAoB,qBAAQtB,aAAR,CAAxB;;AACAsB,IAAAA,oBAAoB,CAACD,OAAD,CAApB,CAA8BjC,KAA9B,CAAoCqC,KAApC,EAA2CL,CAAC,CAACH,MAAF,CAASM,IAApD,IAA4DH,CAAC,CAACH,MAAF,CAASC,KAArE;AACAjB,IAAAA,gBAAgB,CAACqB,oBAAD,CAAhB;AACD,GAJD;;AAMA,MAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,QAAI,0BAAA1B,aAAa,CAACb,MAAd,CAAqBC,KAArB,gFAA4BuC,MAA5B,IAAqC,CAAzC,EAA4C;AAC1CtB,MAAAA,cAAc,CACZD,WAAW,CAACwB,MAAZ,CACE,UAACd,CAAD;AAAA;;AAAA,eACEA,CAAC,CAACS,IAAF,gCACAvB,aAAa,CAACb,MAAd,CAAqBC,KAArB,CAA2BY,aAAa,CAACb,MAAd,CAAqBC,KAArB,CAA2BuC,MAA3B,GAAoC,CAA/D,CADA,2DACA,uBACIhD,IAFJ,CADF;AAAA,OADF,CADY,CAAd;AAQD;;AACDsB,IAAAA,gBAAgB,iCACXD,aADW;AAEdb,MAAAA,MAAM,kCACDa,aAAa,CAACb,MADb;AAEJC,QAAAA,KAAK,+BACAY,aAAa,CAACb,MAAd,CAAqBC,KADrB,IAEH;AACET,UAAAA,IAAI,EAAE,EADR;AAEEa,UAAAA,OAAO,EAAE,EAFX;AAGEqC,UAAAA,OAAO,EAAE7B,aAAa,CAACb,MAAd,CAAqBC,KAArB,CAA2BuC,MAA3B,GAAoC,CAH/C;AAIEG,UAAAA,KAAK,EAAE9B,aAAa,CAACb,MAAd,CAAqBC,KAArB,CAA2BuC,MAA3B,GAAoC,CAJ7C;AAKEI,UAAAA,IAAI,EAAE;AALR,SAFG;AAFD;AAFQ,OAAhB;AAgBD,GA3BD;;AA6BA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACZ,CAAD,EAAIK,KAAJ,EAAWM,IAAX,EAAoB;AAC/CE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBd,CAAC,CAACH,MAAF,CAASM,IAA/B,EAAqCH,CAAC,CAACH,MAAF,CAASC,KAA9C,EAAqDa,IAArD,EAA2DN,KAA3D;;AACA,QAAIU,YAAY,sBAAOnC,aAAa,CAACb,MAAd,CAAqBC,KAA5B,CAAhB;;AACA+C,IAAAA,YAAY,CAACV,KAAD,CAAZ,CAAoBL,CAAC,CAACH,MAAF,CAASM,IAA7B,IAAqCH,CAAC,CAACH,MAAF,CAASC,KAA9C;AACAiB,IAAAA,YAAY,CAACV,KAAD,CAAZ,CAAoB,MAApB,IAA8BM,IAA9B,CAJ+C,CAM/C;;AACA9B,IAAAA,gBAAgB,iCACXD,aADW;AAEdb,MAAAA,MAAM,kCAAOa,aAAa,CAACb,MAArB;AAA6BC,QAAAA,KAAK,EAAE+C;AAApC;AAFQ,OAAhB,CAP+C,CAW/C;AACD,GAZD;;AAcA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AACzBtC,IAAAA,SAAS,CAACsC,EAAE,CAACC,aAAH,CAAiBC,EAAlB,CAAT;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACH,EAAD,EAAQ;AACzB,QAAMI,OAAO,GAAGzC,aAAa,CAACb,MAAd,CAAqBC,KAArB,CAA2ByB,IAA3B,CACd,UAAC6B,GAAD;AAAA,aAASA,GAAG,CAACb,OAAJ,IAAe/B,MAAxB;AAAA,KADc,CAAhB;AAGA,QAAM6C,OAAO,GAAG3C,aAAa,CAACb,MAAd,CAAqBC,KAArB,CAA2ByB,IAA3B,CACd,UAAC6B,GAAD;AAAA,aAASA,GAAG,CAACb,OAAJ,IAAeQ,EAAE,CAACC,aAAH,CAAiBC,EAAzC;AAAA,KADc,CAAhB;AAIA,QAAMK,YAAY,GAAGH,OAAO,CAACX,KAA7B;AACA,QAAMe,YAAY,GAAGF,OAAO,CAACb,KAA7B;AAEA,QAAMgB,gBAAgB,GAAG9C,aAAa,CAACb,MAAd,CAAqBC,KAArB,CAA2B2D,GAA3B,CAA+B,UAACL,GAAD,EAAS;AAC/D,UAAIA,GAAG,CAACb,OAAJ,IAAe/B,MAAnB,EAA2B;AACzB4C,QAAAA,GAAG,CAACZ,KAAJ,GAAYe,YAAZ;AACD;;AACD,UAAIH,GAAG,CAACb,OAAJ,IAAeQ,EAAE,CAACC,aAAH,CAAiBC,EAApC,EAAwC;AACtCG,QAAAA,GAAG,CAACZ,KAAJ,GAAYc,YAAZ;AACD;;AACD,aAAOF,GAAP;AACD,KARwB,CAAzB;AAUAzC,IAAAA,gBAAgB,iCACXD,aADW;AAEdb,MAAAA,MAAM,kCAAOa,aAAa,CAACb,MAArB;AAA6BC,QAAAA,KAAK,EAAE0D;AAApC;AAFQ,OAAhB;AAID,GAzBD;;AA2BA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEzB,QAAIC,oBAAoB,qBAAQjD,aAAR,CAAxB;;AAEAiC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCe,oBAAxC;AAEArF,IAAAA,GAAG,CAACsF,IAAJ,wBAAyB5C,YAAzB,GAAyC2C,oBAAzC,EAA+DxC,IAA/D,CAAoE,UAAAC,QAAQ,EAAI;AAC9E,UAAIA,QAAQ,CAACyC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;AACF,KAJD,WAIS,UAAAC,GAAG;AAAA,aAAIpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,CAAJ;AAAA,KAJZ;AAMD,GAZD,CA7MqC,CA2NrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEvE,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,KAAK,EAAE;AAAEmF,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,UAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,KAAK,EAAE;AAAE/E,MAAAA,KAAK,EAAE;AAAT,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,eAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAE6B,YAJT;AAKE,IAAA,KAAK,EAAC,iBALR;AAME,IAAA,SAAS,MANX;AAOE,IAAA,QAAQ,EAAES,YAPZ;AAQE,IAAA,KAAK,EAAE;AAAEtC,MAAAA,KAAK,EAAE;AAAT,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,eAYE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF,eAaE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbF,CAXF,CAFF,CADF,eAkCE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,UAAU,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd;AAEE,qBAAc,iBAFhB;AAGE,IAAA,EAAE,EAAC,gBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEK,OAAO,CAAC2E,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF,eAUE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACGzD,aAAa,CAACb,MADjB,2DACG,uBAAsBC,KAAtB,CACC;AADD,GAEE2D,GAFF,CAEM,UAACjC,CAAD,EAAIW,KAAJ;AAAA;;AAAA,wBACH,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEX,CAAC,CAACe,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAA3B,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEyB,MAAP,IAAgB,CAAhB,iBACC,0CAEIrB,YAAY,KAAK,IAAjB,gBACE,oBAAC,YAAD;AACE,MAAA,EAAE,gBAASQ,CAAC,CAACe,OAAX,CADJ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,OAAO,EAAEzB,WAHX;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EACHF,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,eACE,YAAAA,CAAC,CAACnC,IAAF,oDAAQoC,WAAR,oBACA7C,CAAC,CAACnC,IADF,4CACA,QAAQgF,WAAR,EADA,CADF;AAAA,OADF,KAIK;AAAEpC,QAAAA,IAAI,EAAE;AAAR,OAVT;AAYE,MAAA,QAAQ,EAAE,kBAACH,CAAD,EAAIwC,QAAJ;AAAA;;AAAA,eACR5B,oBAAoB,CAClB;AACEf,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE0C,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAErC,IADX;AAENA,YAAAA,IAAI,EAAE;AAFA;AADV,SADkB,EAOlBE,KAPkB,EAQlBmC,QARkB,aAQlBA,QARkB,uBAQlBA,QAAQ,CAAE7B,IARQ,iBASlB7B,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,iBACE,aAAAA,CAAC,CAACnC,IAAF,sDAAQoC,WAAR,SACAC,QADA,aACAA,QADA,yCACAA,QAAQ,CAAErC,IADV,mDACA,eAAgBoC,WAAhB,EADA,CADF;AAAA,SADF,CATkB,gDASlB,YAIG5B,IAbe,CAApB,IAcK,EAfG;AAAA,OAZZ;AA6BE,MAAA,cAAc,EAAE,wBAAC8B,MAAD;AAAA,eAAYA,MAAM,CAACtC,IAAnB;AAAA,OA7BlB,CA8BE;AA9BF;AA+BE,MAAA,WAAW,EAAE,qBAACuC,MAAD;AAAA,4BACX,oBAAC,SAAD;AACE,UAAA,QAAQ;AADV,WAEMA,MAFN;AAGE,UAAA,KAAK,EAAC,kBAHR;AAIE,UAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADW;AAAA,OA/Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GA0CExD,YAAY,KAAK,IAAjB,gBACE,oBAAC,YAAD;AACE,MAAA,EAAE,gBAASQ,CAAC,CAACe,OAAX,CADJ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,OAAO,EAAEzB,WAHX;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EACHF,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,eACE,eAAAA,CAAC,CAACK,OAAF,0DAAWJ,WAAX,qBACA7C,CAAC,CAACnC,IADF,6CACA,SAAQgF,WAAR,EADA,CADF;AAAA,OADF,KAIK;AAAEpC,QAAAA,IAAI,EAAE;AAAR,OAVT;AAYE,MAAA,QAAQ,EAAE,kBAACH,CAAD,EAAIwC,QAAJ;AAAA;;AAAA,eACR5B,oBAAoB,CAClB;AACEf,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE0C,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEG,OADX;AAENxC,YAAAA,IAAI,EAAE;AAFA;AADV,SADkB,EAOlBE,KAPkB,EAQlBmC,QARkB,aAQlBA,QARkB,uBAQlBA,QAAQ,CAAE7B,IARQ,kBASlB7B,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,iBACE,aAAAA,CAAC,CAACnC,IAAF,sDAAQoC,WAAR,SACAC,QADA,aACAA,QADA,0CACAA,QAAQ,CAAErC,IADV,oDACA,gBAAgBoC,WAAhB,EADA,CADF;AAAA,SADF,CATkB,iDASlB,aAIG5B,IAbe,CAApB,IAcK,EAfG;AAAA,OAZZ;AA6BE,MAAA,cAAc,EAAE,wBAAC8B,MAAD;AAAA,eAAYA,MAAM,CAACE,OAAnB;AAAA,OA7BlB,CA8BE;AA9BF;AA+BE,MAAA,WAAW,EAAE,qBAACD,MAAD;AAAA,4BACX,oBAAC,SAAD;AACE,UAAA,QAAQ;AADV,WAEMA,MAFN;AAGE,UAAA,KAAK,EAAC,kBAHR;AAIE,UAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADW;AAAA,OA/Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAyCExD,YAAY,KAAK,IAAjB,gBACE,oBAAC,YAAD;AACE,MAAA,EAAE,gBAASQ,CAAC,CAACe,OAAX,CADJ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,OAAO,EAAEzB,WAHX;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EACHF,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,eACE,eAAAA,CAAC,CAACM,OAAF,0DAAWL,WAAX,qBACA7C,CAAC,CAACnC,IADF,6CACA,SAAQgF,WAAR,EADA,CADF;AAAA,OADF,KAIK;AAAEpC,QAAAA,IAAI,EAAE;AAAR,OAVT;AAYE,MAAA,QAAQ,EAAE,kBAACH,CAAD,EAAIwC,QAAJ;AAAA;;AAAA,eACR5B,oBAAoB,CAClB;AACEf,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE0C,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEI,OADX;AAENzC,YAAAA,IAAI,EAAE;AAFA;AADV,SADkB,EAOlBE,KAPkB,EAQlBmC,QARkB,aAQlBA,QARkB,uBAQlBA,QAAQ,CAAE7B,IARQ,kBASlB7B,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,iBACE,aAAAA,CAAC,CAACnC,IAAF,sDAAQoC,WAAR,SACAC,QADA,aACAA,QADA,0CACAA,QAAQ,CAAErC,IADV,oDACA,gBAAgBoC,WAAhB,EADA,CADF;AAAA,SADF,CATkB,iDASlB,aAIG5B,IAbe,CAApB,IAcK,EAfG;AAAA,OAZZ;AA6BE,MAAA,cAAc,EAAE,wBAAC8B,MAAD;AAAA,eAAYA,MAAM,CAACG,OAAnB;AAAA,OA7BlB,CA8BE;AA9BF;AA+BE,MAAA,WAAW,EAAE,qBAACF,MAAD;AAAA,4BACX,oBAAC,SAAD;AACE,UAAA,QAAQ;AADV,WAEMA,MAFN;AAGE,UAAA,KAAK,EAAC,kBAHR;AAIE,UAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADW;AAAA,OA/Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAyCI,EA9HZ,CAFJ,CADF,eAyIE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,mBAAYhD,CAAC,CAACe,OAAd,CAFJ;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,KAAK,EAAC,KAJR;AAKE,MAAA,KAAK,EACHvB,YAAY,KAAK,IAAjB,GACE,iBAAAJ,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,eACE,aAAAA,CAAC,CAACnC,IAAF,sDAAQoC,WAAR,qBACA7C,CAAC,CAACnC,IADF,6CACA,SAAQgF,WAAR,EADA,CADF;AAAA,OADF,+DAIG5B,IAJH,KAIW,EALb,GAMIzB,YAAY,KAAK,IAAjB,GACA,iBAAAJ,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,eACE,gBAAAA,CAAC,CAACK,OAAF,4DAAWJ,WAAX,qBACA7C,CAAC,CAACnC,IADF,6CACA,SAAQgF,WAAR,EADA,CADF;AAAA,OADF,+DAIG5B,IAJH,KAIW,EALX,GAOAzB,YAAY,KAAK,IAAjB,GACE,iBAAAJ,KAAK,CAACW,IAAN,CACE,UAAC6C,CAAD;AAAA;;AAAA,eACE,gBAAAA,CAAC,CAACM,OAAF,4DAAWL,WAAX,qBACA7C,CAAC,CAACnC,IADF,6CACA,SAAQgF,WAAR,EADA,CADF;AAAA,OADF,+DAIG5B,IAJH,KAIW,EALb,GAMI,EAzBZ;AA2BE,MAAA,OAAO,EAAC,UA3BV;AA4BE,MAAA,SAAS,MA5BX;AA6BE,MAAA,QAAQ,MA7BV;AA8BE,MAAA,QAAQ,EAAE,kBAACX,CAAD;AAAA,eAAOY,oBAAoB,CAACZ,CAAD,EAAIK,KAAJ,CAA3B;AAAA,OA9BZ;AA+BE,MAAA,IAAI,EAAC,OA/BP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzIF,eA4KE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AACE,MAAA,OAAO,EAAE;AAAA,eACPxB,gBAAgB,iCACXD,aADW;AAEdb,UAAAA,MAAM,kCACDa,aAAa,CAACb,MADb;AAEJC,YAAAA,KAAK,EAAEY,aAAa,CAACb,MAAd,CAAqBC,KAArB,CAA2BwC,MAA3B,CACL,UAACqC,CAAD;AAAA,qBAAOA,CAAC,CAACpC,OAAF,KAAcf,CAAC,CAACe,OAAvB;AAAA,aADK;AAFH;AAFQ,WADT;AAAA,OADX;AAYE,MAAA,KAAK,EAAC,WAZR;AAaE,MAAA,IAAI,EAAC,OAbP;AAcE,MAAA,OAAO,EAAC,UAdV;AAeE,MAAA,KAAK,EAAE;AAAEqC,QAAAA,MAAM,EAAE;AAAV,OAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CA5KF,CADG;AAAA,GAFN,CADH,eAwME,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,SAAS,EAAE,MAHb,CAIE;AAJF;AAKE,IAAA,KAAK,EAAC,SALR;AAME,IAAA,OAAO,EAAExC,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAxMF,CADF,CADF,CAFF,CAVF,CAhCF,eA8ZE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,KAAK,EAAE;AAAEyC,MAAAA,SAAS,EAAE;AAAb,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMnB,YAAY,EAAlB;AAAA,KADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CA9ZF,CAlCF,CADF,CADF,eAgdE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEpD,WAAW,GAAGA,WAAW,CAACwE,GAAf,GAAqBzE,SADvC;AAEE,IAAA,YAAY,EAAE;AACZ0E,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAFhB;AAME,IAAA,IAAI,EAAE7E,cANR;AAOE,IAAA,gBAAgB,EAAE,IAPpB;AAQE,IAAA,OAAO,EAAE;AAAA,aAAMC,iBAAiB,CAAC,KAAD,CAAvB;AAAA,KARX;AASE,IAAA,QAAQ,EAAE;AAAA,aAAMA,iBAAiB,CAAC,KAAD,CAAvB;AAAA,KATZ;AAUE,IAAA,OAAO,EAAEE,WAAW,GAAGA,WAAW,CAAC2E,OAAf,GAAyB5E,SAV/C;AAWE,IAAA,MAAM,eACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMD,iBAAiB,CAAC,KAAD,CAAvB;AAAA,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,oBAAC,UAAD;AACE,oBAAW,OADb;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAEZ,OAAO,CAAC0F,KAHrB;AAIE,MAAA,OAAO,EAAE;AAAA,eAAM9E,iBAAiB,CAAC,KAAD,CAAvB;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CARF,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhdF,CADF;AAkfD","sourcesContent":["import React, { Fragment, Suspense, useEffect, useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// core components\n// import GridItem from \"components/Grid/GridItem.js\";\n// import GridContainer from \"components/Grid/GridContainer.js\";\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Grid from \"@material-ui/core/Grid\";\n// import Paper from '@material-ui/core/Paper';\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\n// import CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\n// import avatar from \"assets/img/faces/marc.jpg\";\nimport { TextField, Paper, IconButton } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\n// import API from \"utils/http\";\nimport API from \"langapi/http\";\nimport { CloseOutlined } from \"@material-ui/icons\";\nimport { Select, MenuItem, FormControl } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function UpdateFooter() {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n  const initialObject = {\n    type: \"footer\",\n    first: {\n      description: \"\",\n    },\n    second: {\n      links: [],\n    },\n    third: {\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n    },\n    // social: {\n    //   facebook: \"\",\n    //   twitter: \"\",\n    //   instagram: \"\",\n    // },\n  };\n\n  const [openSnackAlert, setOpenSnackAlert] = useState(false);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n\n  const [dragId, setDragId] = useState();\n  const [footerContent, setFooterContent] = useState({ ...initialObject });\n  const [pages, setPages] = useState([]);\n  const [pagesFilter, setPagesFilter] = useState([]);\n  const [selectedLang, setSelectedLang] = useState(\"en\");\n\n  useEffect(() => {\n\n    API.get(`/pages?lang=${selectedLang}`).then((response) => {\n      setPages(response?.data?.data);\n      // // let filteredArray = response.data?.data?.filter(function (array_el) {\n      // //   return (\n      // //     menuItems.filter(function (menuItems_el) {\n      // //       return menuItems_el.text == array_el.name;\n      // //     }).length == 0\n      // //   );\n      // // });\n      setPagesFilter(response?.data?.data);\n    });\n  }, []);\n\n  useEffect(() => {\n\n    API.get(`/common?lang=${selectedLang}`).then(response => {\n\n      const contactdata = response?.data?.data.find((x) => x.type === \"footer\");\n      if (contactdata) {\n        setFooterContent(contactdata);\n      } else {\n        setFooterContent(initialObject)\n      }\n\n\n    });\n\n  }, [selectedLang]);\n\n  const handleChange = (event) => {\n    if (event.target.value != selectedLang) {\n      setSelectedLang(event.target.value)\n    }\n  };\n\n  // useEffect(() => {\n  //   async function getData() {\n  //     const menuItems = await getFooterData();\n  //     API.get(\"/pages\").then((response) => {\n  //       setPages(response.data);\n  //       let filteredArray = response.data?.filter(function (array_el) {\n  //         return (\n  //           menuItems.filter(function (menuItems_el) {\n  //             return menuItems_el.text == array_el.name;\n  //           }).length == 0\n  //         );\n  //       });\n  //       setPagesFilter(filteredArray);\n  //       // })\n  //     });\n  //   }\n  //   getData();\n  // }, []);\n\n  // const getFooterData = async () => {\n  //   const response = await API.get(\"/get_widgets/footer\");\n  //   if (response.status === 200) {\n  //     const { data } = response;\n  //     const first = data.find((x) => x.widget_name === \"first\");\n  //     const second = data.find((x) => x.widget_name === \"second\");\n  //     const third = data.find((x) => x.widget_name === \"third\");\n  //     const social = data.find((x) => x.widget_name === \"social\");\n  //     setFooterContent({\n  //       first: first\n  //         ? { id: first.id, ...JSON.parse(first.items) }\n  //         : initialObject.first,\n  //       second: second\n  //         ? { id: second.id, ...JSON.parse(second.items) }\n  //         : initialObject.second,\n  //       third: third\n  //         ? { id: third.id, ...JSON.parse(third.items) }\n  //         : initialObject.third,\n  //       social: social\n  //         ? { id: social.id, ...JSON.parse(social.items) }\n  //         : initialObject.social,\n  //     });\n  //     return second?.links\n  //       ? JSON.parse(second?.links)\n  //       : initialObject.second.links;\n  //   } else {\n  //     return [];\n  //   }\n  //   // })\n  // };\n\n  const handleInputChange = (e, section) => {\n    let updatedFooterContent = { ...footerContent };\n    updatedFooterContent[section][e.target.name] = e.target.value;\n    setFooterContent(updatedFooterContent);\n  };\n\n  const handleLinkChange = (e, index, section) => {\n    let updatedFooterContent = { ...footerContent };\n    updatedFooterContent[section].links[index][e.target.name] = e.target.value;\n    setFooterContent(updatedFooterContent);\n  };\n\n  const addNewLink = () => {\n    if (footerContent.second.links?.length > 0) {\n      setPagesFilter(\n        pagesFilter.filter(\n          (x) =>\n            x.name !==\n            footerContent.second.links[footerContent.second.links.length - 1]\n              ?.text\n        )\n      );\n    }\n    setFooterContent({\n      ...footerContent,\n      second: {\n        ...footerContent.second,\n        links: [\n          ...footerContent.second.links,\n          {\n            text: \"\",\n            address: \"\",\n            temp_id: footerContent.second.links.length + 1,\n            order: footerContent.second.links.length + 1,\n            slug: \"\",\n          },\n        ],\n      },\n    });\n  };\n\n  const handleMenuItemChange = (e, index, slug) => {\n    console.log(\"values\", e.target.name, e.target.value, slug, index);\n    let updatedItems = [...footerContent.second.links];\n    updatedItems[index][e.target.name] = e.target.value;\n    updatedItems[index][\"slug\"] = slug;\n\n    // updatedItems[index][\"address\"] = slug;\n    setFooterContent({\n      ...footerContent,\n      second: { ...footerContent.second, links: updatedItems },\n    });\n    // setPagesFilter(pagesFilter.filter(x => x.name !== e.target.value))\n  };\n\n  const handleDrag = (ev) => {\n    setDragId(ev.currentTarget.id);\n  };\n\n  const handleDrop = (ev) => {\n    const dragBox = footerContent.second.links.find(\n      (box) => box.temp_id == dragId\n    );\n    const dropBox = footerContent.second.links.find(\n      (box) => box.temp_id == ev.currentTarget.id\n    );\n\n    const dragBoxOrder = dragBox.order;\n    const dropBoxOrder = dropBox.order;\n\n    const updatedMenuItems = footerContent.second.links.map((box) => {\n      if (box.temp_id == dragId) {\n        box.order = dropBoxOrder;\n      }\n      if (box.temp_id == ev.currentTarget.id) {\n        box.order = dragBoxOrder;\n      }\n      return box;\n    });\n\n    setFooterContent({\n      ...footerContent,\n      second: { ...footerContent.second, links: updatedMenuItems },\n    });\n  };\n\n  const handleSubmit = () => {\n\n    let updatedHeaderContent = { ...footerContent };\n\n    console.log(\"updatedHeaderContent :: \", updatedHeaderContent);\n\n    API.post(`/common?lang=${selectedLang}`, updatedHeaderContent).then(response => {\n      if (response.status === 200) {\n        alert(\"Section updated successfully !\");\n      }\n    }).catch(err => console.log(err))\n\n  };\n\n  // const handleSubmit = (section) => {\n  //   API[footerContent[section]?.id ? \"put\" : \"post\"](\n  //     footerContent[section]?.id\n  //       ? `/widget/${footerContent[section]?.id}`\n  //       : `/widget`,\n  //     {\n  //       widget_type: \"footer\",\n  //       widget_name: section,\n  //       items: footerContent[section],\n  //     }\n  //   )\n  //     .then((response) => {\n  //       // debugger;\n  //       if (response.status === 200) {\n  //         alert(response.data.message);\n  //         // setMessageInfo((prev) => [...prev, { message: response.data.message, key: new Date().getTime() }])\n  //         // setOpenSnackAlert(true)\n  //         // setFooterContent({ ...initialObject }); //resetting the form\n  //       }\n  //     })\n  //     .catch((err) => alert(\"Something went wrong\"));\n  // };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Card>\n          <CardHeader color=\"primary\" style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <h4 className=\"mb-0\">Update Site Footer</h4>\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              style={{ width: \"20%\" }}\n            >\n\n              <InputLabel\n                id=\"language\"\n                style={{ color: \"white\" }}\n              >Select Language</InputLabel>\n\n              <Select\n                labelId=\"language\"\n                id=\"language\"\n                name=\"language\"\n                value={selectedLang}\n                label=\"Select Language\"\n                fullWidth\n                onChange={handleChange}\n                style={{ color: \"white\" }}\n              >\n\n                <MenuItem value={'en'}>En</MenuItem>\n                <MenuItem value={'fr'}>FR</MenuItem>\n                <MenuItem value={'de'}>DE</MenuItem>\n\n              </Select>\n\n            </FormControl>\n          </CardHeader>\n\n          <CardBody className=\"\">\n            {/* <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={classes.heading}>\n                  First Column - About\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                      required\n                      id=\"description\"\n                      name=\"description\"\n                      label=\"About Description\"\n                      value={footerContent.first.description}\n                      variant=\"outlined\"\n                      fullWidth\n                      multiline\n                      rows={4}\n                      rowsMax={4}\n                      onChange={(e) => handleInputChange(e, \"first\")}\n                      size=\"small\"\n                    />\n                  </Grid>\n                </Grid>\n              </AccordionDetails>\n            </Accordion> */}\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel2a-content\"\n                id=\"panel2a-header\"\n              >\n                <Typography className={classes.heading}>\n                  Links\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                {/* <h4 className=\"mt-4\"></h4> */}\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <Grid container spacing={2}>\n                      {footerContent.second?.links\n                        // ?.sort((a, b) => a.order - b.order)\n                        .map((x, index) => (\n                          <React.Fragment key={x.temp_id}>\n                            <Grid item xs={12} sm={4}>\n                              {pages?.length > 0 && (\n                                <>\n                                  {\n                                    selectedLang === \"en\" ?\n                                      <Autocomplete\n                                        id={`text${x.temp_id}`}\n                                        name=\"text\"\n                                        options={pagesFilter}\n                                        size=\"small\"\n                                        value={\n                                          pages.find(\n                                            (p) =>\n                                              p.name?.toLowerCase() ===\n                                              x.text?.toLowerCase()\n                                          ) || { name: \"\" }\n                                        }\n                                        onChange={(e, newValue) =>\n                                          handleMenuItemChange(\n                                            {\n                                              target: {\n                                                value: newValue?.name,\n                                                name: \"text\",\n                                              },\n                                            },\n                                            index,\n                                            newValue?.slug,\n                                            pages.find(\n                                              (p) =>\n                                                p.name?.toLowerCase() ===\n                                                newValue?.name?.toLowerCase()\n                                            )?.slug\n                                          ) || \"\"\n                                        }\n                                        getOptionLabel={(option) => option.name}\n                                        // style={{ width: 300 }}\n                                        renderInput={(params) => (\n                                          <TextField\n                                            required\n                                            {...params}\n                                            label=\"Select Link Text\"\n                                            variant=\"outlined\"\n                                          />\n                                        )}\n                                      />\n                                      :\n                                      selectedLang === \"fr\" ?\n                                        <Autocomplete\n                                          id={`text${x.temp_id}`}\n                                          name=\"text\"\n                                          options={pagesFilter}\n                                          size=\"small\"\n                                          value={\n                                            pages.find(\n                                              (p) =>\n                                                p.name_fr?.toLowerCase() ===\n                                                x.text?.toLowerCase()\n                                            ) || { name: \"\" }\n                                          }\n                                          onChange={(e, newValue) =>\n                                            handleMenuItemChange(\n                                              {\n                                                target: {\n                                                  value: newValue?.name_fr,\n                                                  name: \"text\",\n                                                },\n                                              },\n                                              index,\n                                              newValue?.slug,\n                                              pages.find(\n                                                (p) =>\n                                                  p.name?.toLowerCase() ===\n                                                  newValue?.name?.toLowerCase()\n                                              )?.slug\n                                            ) || \"\"\n                                          }\n                                          getOptionLabel={(option) => option.name_fr}\n                                          // style={{ width: 300 }}\n                                          renderInput={(params) => (\n                                            <TextField\n                                              required\n                                              {...params}\n                                              label=\"Select Link Text\"\n                                              variant=\"outlined\"\n                                            />\n                                          )}\n                                        /> :\n                                        selectedLang === \"de\" ?\n                                          <Autocomplete\n                                            id={`text${x.temp_id}`}\n                                            name=\"text\"\n                                            options={pagesFilter}\n                                            size=\"small\"\n                                            value={\n                                              pages.find(\n                                                (p) =>\n                                                  p.name_de?.toLowerCase() ===\n                                                  x.text?.toLowerCase()\n                                              ) || { name: \"\" }\n                                            }\n                                            onChange={(e, newValue) =>\n                                              handleMenuItemChange(\n                                                {\n                                                  target: {\n                                                    value: newValue?.name_de,\n                                                    name: \"text\",\n                                                  },\n                                                },\n                                                index,\n                                                newValue?.slug,\n                                                pages.find(\n                                                  (p) =>\n                                                    p.name?.toLowerCase() ===\n                                                    newValue?.name?.toLowerCase()\n                                                )?.slug\n                                              ) || \"\"\n                                            }\n                                            getOptionLabel={(option) => option.name_de}\n                                            // style={{ width: 300 }}\n                                            renderInput={(params) => (\n                                              <TextField\n                                                required\n                                                {...params}\n                                                label=\"Select Link Text\"\n                                                variant=\"outlined\"\n                                              />\n                                            )}\n                                          />\n                                          : \"\"\n                                  }\n                                </>\n\n\n                              )}\n                            </Grid>\n\n                            <Grid item xs={12} sm={4}>\n                              <TextField\n                                required\n                                id={`address${x.temp_id}`}\n                                name=\"address\"\n                                label=\"URL\"\n                                value={\n                                  selectedLang === \"en\" ?\n                                    pages.find(\n                                      (p) =>\n                                        p.name?.toLowerCase() ===\n                                        x.text?.toLowerCase()\n                                    )?.slug || \"\"\n                                    : selectedLang === \"fr\" ?\n                                      pages.find(\n                                        (p) =>\n                                          p.name_fr?.toLowerCase() ===\n                                          x.text?.toLowerCase()\n                                      )?.slug || \"\"\n                                      :\n                                      selectedLang === \"de\" ?\n                                        pages.find(\n                                          (p) =>\n                                            p.name_de?.toLowerCase() ===\n                                            x.text?.toLowerCase()\n                                        )?.slug || \"\"\n                                        : \"\"\n                                }\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                                onChange={(e) => handleMenuItemChange(e, index)}\n                                size=\"small\"\n                              />\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                              <MaterialButton\n                                onClick={() =>\n                                  setFooterContent({\n                                    ...footerContent,\n                                    second: {\n                                      ...footerContent.second,\n                                      links: footerContent.second.links.filter(\n                                        (z) => z.temp_id !== x.temp_id\n                                      ),\n                                    },\n                                  })\n                                }\n                                color=\"secondary\"\n                                size=\"small\"\n                                variant=\"outlined\"\n                                style={{ height: \"100%\" }}\n                              >\n                                Delete Link\n                              </MaterialButton>\n                            </Grid>\n                          </React.Fragment>\n                        ))}\n\n                      <Grid item xs={12}>\n                        <MaterialButton\n                          variant=\"outlined\"\n                          component=\"span\"\n                          className={\"mb-3\"}\n                          // size=\"small\"\n                          color=\"primary\"\n                          onClick={addNewLink}\n                        >\n                          Add a New Link\n                        </MaterialButton>\n                      </Grid>\n                      {/* <Grid item xs={12}>\n                        <MaterialButton\n                          disabled={footerContent.second.links?.length < 1}\n                          onClick={() => handleSubmit(\"second\")}\n                          color=\"primary\"\n                          variant=\"contained\"\n                        >\n                          Update Section\n                        </MaterialButton>\n                      </Grid> */}\n                    </Grid>\n                  </Grid>\n\n                  {/*<Grid item xs={12} sm={4}>*/}\n                  {/*  <p>Drag and Drop the items to Re-Arrange the order</p>*/}\n                  {/*  {footerContent.second?.links?.length > 0 ? (*/}\n                  {/*    <Paper>*/}\n                  {/*      <List component=\"nav\" aria-label=\"main mailbox folders\">*/}\n                  {/*        {footerContent.second?.links*/}\n                  {/*          ?.sort((a, b) => a.order - b.order)*/}\n                  {/*          .map((x) => (*/}\n                  {/*            <ListItem*/}\n                  {/*              key={x.text}*/}\n                  {/*              style={{*/}\n                  {/*                borderBottom: \"1px solid #ddd\",*/}\n                  {/*                zIndex: 9999,*/}\n                  {/*              }}*/}\n                  {/*              button*/}\n                  {/*              id={x.temp_id}*/}\n                  {/*              draggable*/}\n                  {/*              onDragStart={handleDrag}*/}\n                  {/*              onDrop={handleDrop}*/}\n                  {/*              onDragOver={(ev) => ev.preventDefault()}*/}\n                  {/*            >*/}\n                  {/*              <ListItemText primary={x.text} />*/}\n                  {/*            </ListItem>*/}\n                  {/*          ))}*/}\n                  {/*      </List>*/}\n                  {/*    </Paper>*/}\n                  {/*  ) : (*/}\n                  {/*    <em>No items added yet</em>*/}\n                  {/*  )}*/}\n                  {/*</Grid>*/}\n                </Grid>\n                {/* <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <MaterialButton\n                      variant=\"outlined\"\n                      component=\"span\"\n                      className={classes.button}\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={addNewLink}\n                    >\n                      Add a New Link\n                    </MaterialButton>\n                  </Grid>\n                  {\n                    footerContent?.second?.links?.map((x, index) => (\n                      <React.Fragment>\n                        <Grid item xs={12} sm={5}>\n                          <TextField\n                            required\n                            id={`text${x.id}`}\n                            name=\"text\"\n                            label=\"Link Text\"\n                            value={x.text}\n                            variant=\"outlined\"\n                            fullWidth\n                            onChange={(e) => handleLinkChange(e, index, 'second')}\n                            size=\"small\"\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={5}>\n                          <TextField\n                            required\n                            id={`address${x.id}`}\n                            name=\"address\"\n                            label=\"Link Address\"\n                            value={x.address}\n                            variant=\"outlined\"\n                            fullWidth\n                            onChange={(e) => handleLinkChange(e, index, 'second')}\n                            size=\"small\"\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={2}>\n                          <MaterialButton onClick={() => setFooterContent({ ...footerContent, second: { ...footerContent.second, links: footerContent.second.links.filter(z => z.id !== x.id) } })} color=\"secondary\" size=\"small\" variant=\"outlined\" style={{ height: '100%' }}>\n                            Delete Link\n                          </MaterialButton>\n                        </Grid>\n                      </React.Fragment>\n                    ))\n                  }\n                  <Grid item xs={12} sm={12}>\n                    <MaterialButton disabled={footerContent.second.links < 1} onClick={() => handleSubmit(\"second\")} color=\"primary\" variant=\"contained\">\n                      Update Section\n                  </MaterialButton>\n                  </Grid>\n                </Grid> */}\n              </AccordionDetails>\n            </Accordion>\n            {/* <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel3a-content\"\n                id=\"panel3a-header\"\n              >\n                <Typography className={classes.heading}>\n                  Third Column - Contact Us\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      required\n                      id=\"phone\"\n                      name=\"phone\"\n                      label=\"Phone Number\"\n                      value={footerContent.third.phone}\n                      variant=\"outlined\"\n                      fullWidth\n                      onChange={(e) => handleInputChange(e, \"third\")}\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      required\n                      id=\"email\"\n                      name=\"email\"\n                      label=\"Email Address\"\n                      value={footerContent.third.email}\n                      variant=\"outlined\"\n                      fullWidth\n                      onChange={(e) => handleInputChange(e, \"third\")}\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      required\n                      id=\"address\"\n                      name=\"address\"\n                      label=\"Location\"\n                      value={footerContent.third.address}\n                      variant=\"outlined\"\n                      fullWidth\n                      onChange={(e) => handleInputChange(e, \"third\")}\n                      size=\"small\"\n                    />\n                  </Grid>\n                </Grid>\n              </AccordionDetails>\n            </Accordion> */}\n            <Grid container spacing={2} style={{ marginTop: '30px' }}>\n              <Grid item xs={12} sm={12}>\n                <MaterialButton\n                  onClick={() => handleSubmit()}\n                  color=\"primary\"\n                  variant=\"contained\"\n                >\n                  Update Section\n                </MaterialButton>\n              </Grid>\n            </Grid>\n          </CardBody>\n        </Card>\n      </div>\n      <Snackbar\n        key={messageInfo ? messageInfo.key : undefined}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        open={openSnackAlert}\n        autoHideDuration={3000}\n        onClose={() => setOpenSnackAlert(false)}\n        onExited={() => setOpenSnackAlert(false)}\n        message={messageInfo ? messageInfo.message : undefined}\n        action={\n          <React.Fragment>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() => setOpenSnackAlert(false)}\n            >\n              OK\n            </Button>\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={() => setOpenSnackAlert(false)}\n            >\n              <CloseOutlined />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}